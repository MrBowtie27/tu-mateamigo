
examples/c/app/out/app.elf:     file format elf32-littlearm
examples/c/app/out/app.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x1a00055d

Program Header:
0x70000001 off    0x00017800 vaddr 0x1a007800 paddr 0x1a007800 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00000000 vaddr 0x10000000 paddr 0x10000000 align 2**16
         filesz 0x000000b4 memsz 0x00000a78 flags rw-
    LOAD off    0x00010000 vaddr 0x1a000000 paddr 0x1a000000 align 2**16
         filesz 0x00007808 memsz 0x00007808 flags rwx
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x1a007808 align 2**16
         filesz 0x000009f4 memsz 0x000009f4 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000077fc  1a000000  1a000000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000009f4  10000000  1a007808  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .data_RAM2    00000000  10080000  10080000  000209f4  2**2
                  CONTENTS
  3 .data_RAM3    00000000  20000000  20000000  000209f4  2**2
                  CONTENTS
  4 .data_RAM4    00000000  20008000  20008000  000209f4  2**2
                  CONTENTS
  5 .data_RAM5    00000000  2000c000  2000c000  000209f4  2**2
                  CONTENTS
  6 .bss          00000080  100009f8  100009f8  000009f8  2**3
                  ALLOC
  7 .bss_RAM2     00000000  10080000  10080000  000209f4  2**2
                  CONTENTS
  8 .bss_RAM3     00000000  20000000  20000000  000209f4  2**2
                  CONTENTS
  9 .bss_RAM4     00000000  20008000  20008000  000209f4  2**2
                  CONTENTS
 10 .bss_RAM5     00000000  2000c000  2000c000  000209f4  2**2
                  CONTENTS
 11 .init_array   00000004  1a0077fc  1a0077fc  000177fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .ARM.exidx    00000008  1a007800  1a007800  00017800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 13 .uninit_RESERVED 00000000  10000000  10000000  000209f4  2**2
                  CONTENTS
 14 .noinit_RAM2  00000000  10080000  10080000  000209f4  2**2
                  CONTENTS
 15 .noinit_RAM3  00000000  20000000  20000000  000209f4  2**2
                  CONTENTS
 16 .noinit_RAM4  00000000  20008000  20008000  000209f4  2**2
                  CONTENTS
 17 .noinit_RAM5  00000000  2000c000  2000c000  000209f4  2**2
                  CONTENTS
 18 .noinit       00000000  10000a78  10000a78  000209f4  2**2
                  CONTENTS
 19 .debug_info   0001bd37  00000000  00000000  000209f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_abbrev 00003f8b  00000000  00000000  0003c72b  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_loc    00007231  00000000  00000000  000406b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_aranges 00000930  00000000  00000000  000478e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_ranges 00000970  00000000  00000000  00048217  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_macro  0000c287  00000000  00000000  00048b87  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_line   0000f44f  00000000  00000000  00054e0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_str    00027923  00000000  00000000  0006425d  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .comment      00000068  00000000  00000000  0008bb80  2**0
                  CONTENTS, READONLY
 28 .ARM.attributes 00000032  00000000  00000000  0008bbe8  2**0
                  CONTENTS, READONLY
 29 .debug_frame  00002658  00000000  00000000  0008bc1c  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
1a000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
10080000 l    d  .data_RAM2	00000000 .data_RAM2
20000000 l    d  .data_RAM3	00000000 .data_RAM3
20008000 l    d  .data_RAM4	00000000 .data_RAM4
2000c000 l    d  .data_RAM5	00000000 .data_RAM5
100009f8 l    d  .bss	00000000 .bss
10080000 l    d  .bss_RAM2	00000000 .bss_RAM2
20000000 l    d  .bss_RAM3	00000000 .bss_RAM3
20008000 l    d  .bss_RAM4	00000000 .bss_RAM4
2000c000 l    d  .bss_RAM5	00000000 .bss_RAM5
1a0077fc l    d  .init_array	00000000 .init_array
1a007800 l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .uninit_RESERVED	00000000 .uninit_RESERVED
10080000 l    d  .noinit_RAM2	00000000 .noinit_RAM2
20000000 l    d  .noinit_RAM3	00000000 .noinit_RAM3
20008000 l    d  .noinit_RAM4	00000000 .noinit_RAM4
2000c000 l    d  .noinit_RAM5	00000000 .noinit_RAM5
10000a78 l    d  .noinit	00000000 .noinit
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 armv7m_startup.c
00000000 l    df *ABS*	00000000 vendor_interrupt.c
00000000 l    df *ABS*	00000000 crp.c
00000000 l    df *ABS*	00000000 app.c
00000000 l    df *ABS*	00000000 ds18b20.c
00000000 l    df *ABS*	00000000 system.c
100009f8 l     O .bss	00000004 heap_end.5864
00000000 l    df *ABS*	00000000 board_sysinit.c
1a007318 l     O .text	00000004 InitClkStates
1a00731c l     O .text	00000074 pinmuxing
00000000 l    df *ABS*	00000000 board.c
1a000760 l     F .text	00000044 Board_LED_Init
1a0007a4 l     F .text	00000040 Board_TEC_Init
1a0007e4 l     F .text	00000040 Board_GPIO_Init
1a000824 l     F .text	00000030 Board_ADC_Init
1a000854 l     F .text	00000038 Board_SPI_Init
1a00088c l     F .text	00000024 Board_I2C_Init
1a007394 l     O .text	00000008 GpioButtons
1a00739c l     O .text	0000000c GpioLeds
1a0073a8 l     O .text	00000012 GpioPorts
00000000 l    df *ABS*	00000000 ssp_18xx_43xx.c
1a000950 l     F .text	00000014 Chip_SSP_GetClockIndex
1a000964 l     F .text	00000018 Chip_SSP_GetPeriphClockIndex
00000000 l    df *ABS*	00000000 i2c_18xx_43xx.c
10000000 l     O .data	00000038 i2c
00000000 l    df *ABS*	00000000 gpio_18xx_43xx.c
00000000 l    df *ABS*	00000000 adc_18xx_43xx.c
1a000a84 l     F .text	00000014 Chip_ADC_GetClockIndex
1a000a98 l     F .text	00000032 getClkDiv
00000000 l    df *ABS*	00000000 sysinit_18xx_43xx.c
1a0073c0 l     O .text	00000048 InitClkStates
00000000 l    df *ABS*	00000000 chip_18xx_43xx.c
00000000 l    df *ABS*	00000000 clock_18xx_43xx.c
1a000cb8 l     F .text	000000a0 pll_calc_divs
1a000d58 l     F .text	0000010c pll_get_frac
1a000e64 l     F .text	0000004c Chip_Clock_FindBaseClock
1a0010d8 l     F .text	00000022 Chip_Clock_GetDivRate
100009fc l     O .bss	00000008 audio_usb_pll_freq
1a007414 l     O .text	0000006c periph_to_base
00000000 l    df *ABS*	00000000 uart_18xx_43xx.c
1a001244 l     F .text	0000002c Chip_UART_GetIndex
1a007480 l     O .text	00000008 UART_BClock
1a007488 l     O .text	00000008 UART_PClock
00000000 l    df *ABS*	00000000 sysinit.c
00000000 l    df *ABS*	00000000 sapi_cyclesCounter.c
10000038 l     O .data	00000004 ClockSpeed
00000000 l    df *ABS*	00000000 sapi_gpio.c
1a0013f4 l     F .text	00000034 gpioObtainPinInit
00000000 l    df *ABS*	00000000 sapi_tick.c
10000a04 l     O .bss	00000004 callBackFuncParams
10000a08 l     O .bss	00000008 tickCounter
10000a10 l     O .bss	00000004 tickHookFunction
00000000 l    df *ABS*	00000000 sapi_usb_device.c
10000a14 l     O .bss	00000004 g_hUsb
00000000 l    df *ABS*	00000000 sapi_board.c
00000000 l    df *ABS*	00000000 sapi_delay.c
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
1a002664 l     F .text	00000050 std
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 vfprintf.c
1a004eb4 l     F .text	00000084 __sbprintf
1a0076c0 l     O .text	00000010 blanks.8693
1a0076d0 l     O .text	00000010 zeroes.8694
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
1a005008 l     F .text	00000124 quorem
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
1a0077e0 l     O .text	0000000c p05.7442
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_frexp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 vfprintf.c
1a006f60 l     F .text	00000076 __sprint_r.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
10000050 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 
1a007800 l       .init_array	00000000 __init_array_end
1a0077fc l       .bss_RAM5	00000000 __preinit_array_end
1a0077fc l       .init_array	00000000 __init_array_start
1a0077fc l       .bss_RAM5	00000000 __preinit_array_start
1a007288 g     F .text	0000002c .hidden __aeabi_dcmpun
1a000efc g     F .text	0000001c Chip_Clock_GetDividerSource
1a0005fc g     F .text	00000012 _isatty_r
1a0020ac g     F .text	00000012 .hidden __aeabi_dcmple
1a0001ba  w    F .text	00000002 TIMER2_IRQHandler
1a001fe8 g     F .text	0000007a .hidden __cmpdf2
1a00060e g     F .text	0000000a _lseek_r
1a000184  w    F .text	00000002 DebugMon_Handler
1a0001ba  w    F .text	00000002 RIT_IRQHandler
1a080000 g       *ABS*	00000000 __top_MFlashA512
1a001fe8 g     F .text	0000007a .hidden __eqdf2
1a0001ba  w    F .text	00000002 ADCHS_IRQHandler
1a000114 g       .text	00000000 __section_table_start
1a0001ba  w    F .text	00000002 FLASH_EEPROM_IRQHandler
1a001b58 g     F .text	0000005a .hidden __floatdidf
1a0001ba  w    F .text	00000002 I2C0_IRQHandler
1a0031c0 g     F .text	00000028 printf
1a000946 g     F .text	00000008 __stdio_init
10000a54 g     O .bss	00000001 __lock___atexit_recursive_mutex
1a007238 g     F .text	00000034 _wcrtomb_r
1a00324c g     F .text	00000020 __sseek
1a0026c0 g     F .text	00000054 __sinit
1a007188 g     F .text	000000b0 __swbuf_r
1a00017a  w    F .text	00000002 HardFault_Handler
1a000000 g       *ABS*	00000000 __vectors_start__
1a000b3e g     F .text	0000000c Chip_ADC_SetResolution
1a0031b4 g     F .text	0000000c __malloc_unlock
1a001748 g     F .text	0000002c SysTick_Handler
10000a58 g     O .bss	00000001 __lock___arc4random_mutex
1a000558  w    F .text	00000002 initialise_monitor_handles
1a0001ba  w    F .text	00000002 SDIO_IRQHandler
1a0008e8 g     F .text	0000001c Board_UARTGetChar
1a0001ba  w    F .text	00000002 ATIMER_IRQHandler
1a006430 g     F .text	000000ce memmove
1a000186  w    F .text	00000002 PendSV_Handler
1a000178  w    F .text	00000002 NMI_Handler
1a006500 g     F .text	0000004c _Balloc
1a007808 g       .ARM.exidx	00000000 __exidx_end
1a000150 g       .text	00000000 __data_section_table_end
1a0001ba  w    F .text	00000002 I2C1_IRQHandler
1a0001ba  w    F .text	00000002 UART1_IRQHandler
1a001fd8 g     F .text	0000008a .hidden __gtdf2
1a0001ba  w    F .text	00000002 GPIO5_IRQHandler
1a0001ba  w    F .text	00000002 CAN1_IRQHandler
1a0005f2 g     F .text	0000000a _fstat_r
53ff7332 g       *ABS*	00000000 __valid_user_code_checksum
1a007808 g       .ARM.exidx	00000000 _etext
1a002074 g     F .text	00000010 .hidden __aeabi_cdcmple
1a0001ba  w    F .text	00000002 USB1_IRQHandler
1a0001ba  w    F .text	00000002 I2S0_IRQHandler
1a0001ba  w    F .text	00000002 TIMER3_IRQHandler
1a00117a g     F .text	0000000c Chip_Clock_GetBaseClocktHz
1a0001ba  w    F .text	00000002 UART0_IRQHandler
1a0001a8 g     F .text	00000012 bss_init
1a002fd4 g     F .text	00000134 memcpy
1a002064 g     F .text	00000020 .hidden __aeabi_cdrcmple
1a0001ba  w    F .text	00000002 SGPIO_IRQHandler
1a0026b4 g     F .text	0000000c _cleanup_r
1a001ae0 g     F .text	00000022 .hidden __floatsidf
1a001fe0 g     F .text	00000082 .hidden __ltdf2
1a0020e8 g     F .text	00000000 .hidden __aeabi_uldivmod
10000a78 g       .noinit	00000000 _noinit
10000a4c g     O .bss	00000004 SystemCoreClock
1a001270 g     F .text	00000054 Chip_UART_Init
1a0001ba  w    F .text	00000002 ADC0_IRQHandler
1a007718 g     O .text	000000c8 __mprec_tens
1a000180  w    F .text	00000002 UsageFault_Handler
1a0011f8 g     F .text	0000004c Chip_Clock_GetRate
1a0001ba  w    F .text	00000002 GPIO6_IRQHandler
10000a48 g     O .bss	00000004 __malloc_top_pad
1a0006e8 g     F .text	0000006c Board_SetupClocking
20008000 g       *ABS*	00000000 __top_RamAHB32
1a001ac0 g     F .text	0000001e .hidden __aeabi_ui2d
1a00628c g     F .text	00000008 _localeconv_r
1a00668c g     F .text	00000012 __i2b
1a005f84 g     F .text	00000308 __sfvwrite_r
1a002118 g     F .text	000002d0 .hidden __udivmoddi4
1a00183c g     F .text	00000000 .hidden __aeabi_drsub
1a000690 g     F .text	00000020 _sbrk_r
1a007390 g     O .text	00000004 ExtRateIn
1a0001ba  w    F .text	00000002 IntDefaultHandler
1a000300 g       .text	00000000 __CRP_WORD_END__
1a000618 g     F .text	0000004e _read_r
1a002098 g     F .text	00000012 .hidden __aeabi_dcmplt
1a0023ec g     F .text	000000ce _fclose_r
1a0001ba  w    F .text	00000002 GPIO1_IRQHandler
10000a40 g     O .bss	00000004 __malloc_max_sbrked_mem
1a001b04 g     F .text	00000042 .hidden __extendsfdf2
1a001e08 g     F .text	000001d0 .hidden __aeabi_ddiv
1a0001ba  w    F .text	00000002 SSP0_IRQHandler
1a001848 g     F .text	00000276 .hidden __adddf3
1a007800 g       .ARM.exidx	00000000 __exidx_start
10000a5c g     O .bss	00000001 __lock___env_recursive_mutex
1a001bb4 g     F .text	00000254 .hidden __aeabi_dmul
1a0002fc g     O .text	00000004 CRP_WORD
10000a60 g     O .bss	00000001 __lock___sinit_recursive_mutex
1a006b14 g     F .text	0000036c _realloc_r
1a002a0c g     F .text	00000048 __libc_init_array
1a0070ec g     F .text	00000064 _fputwc_r
1a0076f0 g     O .text	00000028 __mprec_bigtens
1a001ac0 g     F .text	0000001e .hidden __floatunsidf
1a0001ba  w    F .text	00000002 ADC1_IRQHandler
1a006924 g     F .text	00000038 __mcmp
1a000904 g     F .text	00000030 Board_Init
1a0005e6  w    F .text	00000002 _init
1a000114 g       .text	00000000 __data_section_table
1a0004c0 g     F .text	0000001a read_bytes
1a0001ba  w    F .text	00000002 RTC_IRQHandler
10000a78 g       .bss	00000000 _ebss
1a0001ba  w    F .text	00000002 TIMER0_IRQHandler
1a00055c g     F .text	00000088 Reset_Handler
1a0016cc g     F .text	0000007c tickInit
20010000 g       *ABS*	00000000 __top_RamAHB_ETB16
1a0001ba  w    F .text	00000002 SPI_IRQHandler
1a0065ec g     F .text	00000040 __hi0bits
1a000a48 g     F .text	00000038 Chip_I2C_SetClockRate
1a0072b4 g     F .text	0000004e .hidden __fixdfsi
1a0001ba  w    F .text	00000002 LCD_IRQHandler
1a000eb0 g     F .text	0000004c Chip_Clock_EnableCrystal
10000a64 g     O .bss	00000001 __lock___malloc_recursive_mutex
1a00044a g     F .text	0000001e write
10008000 g       *ABS*	00000000 __top_RamLoc32
1a000468 g     F .text	0000003a read_bit
1a001848 g     F .text	00000276 .hidden __aeabi_dadd
1a00018a g     F .text	0000001e data_init
1a001fe0 g     F .text	00000082 .hidden __ledf2
1a0067d0 g     F .text	000000a0 __pow5mult
1a001b48 g     F .text	0000006a .hidden __aeabi_ul2d
1a0001ba  w    F .text	00000002 TIMER1_IRQHandler
1a000a24 g     F .text	00000024 Chip_I2C_Init
1a002a60 g     F .text	00000002 __retarget_lock_release_recursive
1a0001ba  w    F .text	00000002 UART2_IRQHandler
1a00106c g     F .text	0000006c Chip_Clock_GetMainPLLHz
1a007490 g     O .text	000000e6 gpioPinsInit
1a00097c g     F .text	00000012 Chip_SSP_SetClockRate
1a0020d4 g     F .text	00000012 .hidden __aeabi_dcmpgt
1a0001ba  w    F .text	00000002 GPIO2_IRQHandler
1a000340 g     F .text	0000005c delayUs
1a002714 g     F .text	0000000c __sfp_lock_acquire
1a006390 g     F .text	00000000 memchr
1a0027cc g     F .text	000001ec _free_r
1a001154 g     F .text	00000026 Chip_Clock_GetBaseClock
1a007150 g     F .text	0000000c __locale_mb_cur_max
1a0020c0 g     F .text	00000012 .hidden __aeabi_dcmpge
100009f8 g       .bss	00000000 _bss
1a000b0c g     F .text	00000032 Chip_ADC_SetSampleRate
1a00039c g     F .text	00000056 detectar
1a001844 g     F .text	0000027a .hidden __aeabi_dsub
10000880 g     O .data	00000004 __malloc_sbrk_base
1a001b48 g     F .text	0000006a .hidden __floatundidf
1a006870 g     F .text	000000b2 __lshift
1a0004a2 g     F .text	0000001e read
1a0001ba  w    F .text	00000002 I2S1_IRQHandler
1a00098e g     F .text	0000003e Chip_SSP_SetBitRate
1a000a80 g     F .text	00000002 Chip_GPIO_Init
1a0073bc g     O .text	00000004 OscRateIn
1a0066a0 g     F .text	00000130 __multiply
10000a78 g       .noinit	00000000 _end_noinit
10008000 g       *ABS*	00000000 _vStackTop
1a006eec g     F .text	00000072 strncpy
10000a18 g     O .bss	00000028 __malloc_current_mallinfo
1a006a54 g     F .text	000000be __d2b
1a0001ba  w    F .text	00000002 SSP1_IRQHandler
1a000178 g       .text	00000000 __bss_section_table_end
1a0005e8 g     F .text	0000000a _close_r
1a001ae0 g     F .text	00000022 .hidden __aeabi_i2d
1a001428 g     F .text	000001ac gpioInit
1a002a58 g     F .text	00000002 __retarget_lock_close_recursive
1a004f38 g     F .text	000000d0 __swsetup_r
1a0023e8  w    F .text	00000002 .hidden __aeabi_ldiv0
1a001e08 g     F .text	000001d0 .hidden __divdf3
10000478 g     O .data	00000408 __malloc_av_
1a001bb4 g     F .text	00000254 .hidden __muldf3
1a000330 g     F .text	00000010 initTemperatureSensor
1a0031e8 g     F .text	00000022 __sread
1a001774 g     F .text	0000001c USB0_IRQHandler
1a0001ba  w    F .text	00000002 GPIO3_IRQHandler
1a0031a8 g     F .text	0000000c __malloc_lock
1a0008d4 g     F .text	00000014 Board_UARTPutChar
1a0001ba  w    F .text	00000002 SCT_IRQHandler
1a002608 g     F .text	0000005a _fflush_r
1a006fec g     F .text	0000005e _calloc_r
1a000f18 g     F .text	0000001c Chip_Clock_GetDividerDivisor
1a0002fc g       .text	00000000 __CRP_WORD_START__
1a002a5c g     F .text	00000002 __retarget_lock_acquire_recursive
1a003108 g     F .text	000000a0 memset
1a00017c  w    F .text	00000002 MemManage_Handler
1a000300 g     F .text	00000030 main
10000a44 g     O .bss	00000004 __malloc_max_total_mem
1a002a54 g     F .text	00000002 __retarget_lock_init_recursive
1a0001ba  w    F .text	00000002 WDT_IRQHandler
2000c000 g       *ABS*	00000000 __top_RamAHB16
1008a000 g       *ABS*	00000000 __top_RamLoc40
1a000182  w    F .text	00000002 SVC_Handler
1a00326c g     F .text	00000008 __sclose
1a005130 g     F .text	00000e54 _dtoa_r
1a002a64 g     F .text	00000570 _malloc_r
1a00726c g     F .text	0000001a __ascii_wctomb
1a001b58 g     F .text	0000005a .hidden __aeabi_l2d
1a0001ba  w    F .text	00000002 GPIO7_IRQHandler
1a001188 g     F .text	0000003c Chip_Clock_EnableOpts
1a00093e g     F .text	00000008 __stdio_getchar
1a00272c g     F .text	000000a0 _malloc_trim_r
1a000f34 g     F .text	000000b8 Chip_Clock_GetClockInputHz
1a000fec g     F .text	00000080 Chip_Clock_CalcMainPLLValue
1a0013a0 g     F .text	00000038 SystemInit
1a0001ba  w    F .text	00000002 SPIFI_IRQHandler
1a001804 g     F .text	00000038 delay
1a0001ba  w    F .text	00000002 QEI_IRQHandler
1a000150 g       .text	00000000 __bss_section_table
1a001fe8 g     F .text	0000007a .hidden __nedf2
1a0015d4 g     F .text	0000006a gpioWrite
1a0005e4  w    F .text	00000002 _fini
1a000acc g     F .text	00000040 Chip_ADC_Init
10000a50 g     O .bss	00000004 g_pUsbApi
1a0006b0 g     F .text	00000038 Board_SetupMuxing
1a0012c4 g     F .text	000000dc Chip_UART_SetBaudFDR
1a0016a8 g     F .text	0000000c tickRead
1a000666 g     F .text	00000028 _write_r
10000040 g     O .data	00000008 tickRateMS
1a0001ba  w    F .text	00000002 ETH_IRQHandler
10000048 g     O .data	00000004 _impure_ptr
1a0024bc g     F .text	0000014a __sflush_r
10000000 g       .uninit_RESERVED	00000000 _end_uninit_RESERVED
1a0003f2 g     F .text	00000058 write_bit
1a0001ba  w    F .text	00000002 CAN0_IRQHandler
1a00715c g     F .text	0000002a __ascii_mbtowc
10000000 g       .data	00000000 _data
10000a78 g       .bss	00000000 _pvHeapStart
1a000178 g       .text	00000000 __section_table_end
1a0009cc g     F .text	00000038 Chip_SSP_Init
1a0001ba  w    F .text	00000002 GINT0_IRQHandler
1a006294 g     F .text	0000005c __swhatbuf_r
1a0001ba  w    F .text	00000002 DAC_IRQHandler
1a0008b0 g     F .text	00000024 Board_Debug_Init
1a002084 g     F .text	00000012 .hidden __aeabi_dcmpeq
1a000934 g     F .text	0000000a __stdio_putchar
100009f4 g       .data	00000000 _edata
1a000a04 g     F .text	00000020 Chip_I2C_EventHandler
1a0001ba  w    F .text	00000002 M0SUB_IRQHandler
1a00704c g     F .text	0000009e __fputwc
10000a68 g     O .bss	00000001 __lock___at_quick_exit_mutex
1a000b4c g     F .text	00000158 Chip_SetupCoreClock
1a00320c g     F .text	0000003e __swrite
1a0001ba  w    F .text	00000002 GPIO0_IRQHandler
10000884 g     O .data	00000004 __malloc_trim_threshold
1a000000 g     O .text	00000040 g_pfnVectors
1a0029b8 g     F .text	00000052 _fwalk_reent
1a000ca4 g     F .text	00000014 SystemCoreClockUpdate
1a00695c g     F .text	000000f8 __mdiff
1a0072b4 g     F .text	0000004e .hidden __aeabi_d2iz
1a0001ba  w    F .text	00000002 DMA_IRQHandler
1a0001ba  w    F .text	00000002 EVRT_IRQHandler
1b080000 g       *ABS*	00000000 __top_MFlashB512
1a002720 g     F .text	0000000c __sfp_lock_release
1a007578 g     O .text	00000101 _ctype_
1a0023e8  w    F .text	00000002 .hidden __aeabi_idiv0
1a007288 g     F .text	0000002c .hidden __unorddf2
1a00017e  w    F .text	00000002 BusFault_Handler
10000a6c g     O .bss	00000001 __lock___dd_hash_mutex
1a0062f0 g     F .text	00000094 __smakebuf_r
10000a70 g     O .bss	00000001 __lock___tz_mutex
1a003280 g     F .text	000000dc strlen
1a0011c4 g     F .text	00000034 Chip_Clock_Enable
1a002074 g     F .text	00000010 .hidden __aeabi_cdcmpeq
1a001fd8 g     F .text	0000008a .hidden __gedf2
1a0001ba  w    F .text	00000002 UART3_IRQHandler
1a0001ba  w    F .text	00000002 MCPWM_IRQHandler
1a006fd8 g     F .text	00000014 __sprint_r
1a0001ba  w    F .text	00000002 M0APP_IRQHandler
1a00163e g     F .text	00000068 gpioRead
1a001b04 g     F .text	00000042 .hidden __aeabi_f2d
1a0004dc g     F .text	0000007c leerTemperatura
1a001790 g     F .text	00000074 boardInit
1a000040 g     O .text	000000d4 g_pfnVendorVectors
1a001844 g     F .text	0000027a .hidden __subdf3
1a003360 g     F .text	00001b54 _vfprintf_r
1a0001ba  w    F .text	00000002 GINT1_IRQHandler
1a00662c g     F .text	00000060 __lo0bits
1a0016b4 g     F .text	00000018 tickPowerSet
1a006e80 g     F .text	0000006c frexp
10000888 g     O .data	0000016c __global_locale
1a0010fc g     F .text	00000058 Chip_Clock_SetBaseClock
1a0013d8 g     F .text	0000001c cyclesCounterInit
1a0001ba  w    F .text	00000002 GPIO4_IRQHandler
10000a74 g     O .bss	00000001 __lock___sfp_recursive_mutex
1a000754 g     F .text	0000000c Board_SystemInit
1a006560 g     F .text	0000008a __multadd
1a00654c g     F .text	00000012 _Bfree



Disassembly of section .text:

1a000000 <g_pfnVectors>:
1a000000:	00 80 00 10 5d 05 00 1a 79 01 00 1a 7b 01 00 1a     ....]...y...{...
1a000010:	7d 01 00 1a 7f 01 00 1a 81 01 00 1a 32 73 ff 53     }...........2s.S
	...
1a00002c:	83 01 00 1a 85 01 00 1a 00 00 00 00 87 01 00 1a     ................
1a00003c:	49 17 00 1a                                         I...

1a000040 <g_pfnVendorVectors>:
1a000040:	bb 01 00 1a bb 01 00 1a bb 01 00 1a 00 00 00 00     ................
1a000050:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000060:	75 17 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     u...............
1a000070:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000080:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000090:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000a0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000b0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000c0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000d0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000e0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000f0:	00 00 00 00 bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000100:	00 00 00 00 bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000110:	bb 01 00 1a                                         ....

1a000114 <__data_section_table>:
1a000114:	1a007808 	.word	0x1a007808
1a000118:	10000000 	.word	0x10000000
1a00011c:	000009f4 	.word	0x000009f4
1a000120:	1a007808 	.word	0x1a007808
1a000124:	10080000 	.word	0x10080000
1a000128:	00000000 	.word	0x00000000
1a00012c:	1a007808 	.word	0x1a007808
1a000130:	20000000 	.word	0x20000000
1a000134:	00000000 	.word	0x00000000
1a000138:	1a007808 	.word	0x1a007808
1a00013c:	20008000 	.word	0x20008000
1a000140:	00000000 	.word	0x00000000
1a000144:	1a007808 	.word	0x1a007808
1a000148:	2000c000 	.word	0x2000c000
1a00014c:	00000000 	.word	0x00000000

1a000150 <__bss_section_table>:
1a000150:	100009f8 	.word	0x100009f8
1a000154:	00000080 	.word	0x00000080
1a000158:	10080000 	.word	0x10080000
1a00015c:	00000000 	.word	0x00000000
1a000160:	20000000 	.word	0x20000000
1a000164:	00000000 	.word	0x00000000
1a000168:	20008000 	.word	0x20008000
1a00016c:	00000000 	.word	0x00000000
1a000170:	2000c000 	.word	0x2000c000
1a000174:	00000000 	.word	0x00000000

1a000178 <NMI_Handler>:
}

__attribute__ ((section(".after_vectors")))
void NMI_Handler(void) {
    while (1) {
    }
1a000178:	e7fe      	b.n	1a000178 <NMI_Handler>

1a00017a <HardFault_Handler>:
}
__attribute__ ((section(".after_vectors")))
void HardFault_Handler(void) {
    while (1) {
    }
1a00017a:	e7fe      	b.n	1a00017a <HardFault_Handler>

1a00017c <MemManage_Handler>:
}
__attribute__ ((section(".after_vectors")))
void MemManage_Handler(void) {
    while (1) {
    }
1a00017c:	e7fe      	b.n	1a00017c <MemManage_Handler>

1a00017e <BusFault_Handler>:
}
__attribute__ ((section(".after_vectors")))
void BusFault_Handler(void) {
    while (1) {
    }
1a00017e:	e7fe      	b.n	1a00017e <BusFault_Handler>

1a000180 <UsageFault_Handler>:
}
__attribute__ ((section(".after_vectors")))
void UsageFault_Handler(void) {
    while (1) {
    }
1a000180:	e7fe      	b.n	1a000180 <UsageFault_Handler>

1a000182 <SVC_Handler>:
}
__attribute__ ((section(".after_vectors")))
void SVC_Handler(void) {
    while (1) {
    }
1a000182:	e7fe      	b.n	1a000182 <SVC_Handler>

1a000184 <DebugMon_Handler>:
}
__attribute__ ((section(".after_vectors")))
void DebugMon_Handler(void) {
    while (1) {
    }
1a000184:	e7fe      	b.n	1a000184 <DebugMon_Handler>

1a000186 <PendSV_Handler>:
}
__attribute__ ((section(".after_vectors")))
void PendSV_Handler(void) {
    while (1) {
    }
1a000186:	e7fe      	b.n	1a000186 <PendSV_Handler>
}
__attribute__ ((section(".after_vectors")))
void SysTick_Handler(void) {
    while (1) {
    }
1a000188:	e7fe      	b.n	1a000188 <PendSV_Handler+0x2>

1a00018a <data_init>:
    for (loop = 0; loop < len; loop = loop + 4)
1a00018a:	2300      	movs	r3, #0
1a00018c:	4293      	cmp	r3, r2
1a00018e:	d20a      	bcs.n	1a0001a6 <data_init+0x1c>
void data_init(unsigned int romstart, unsigned int start, unsigned int len) {
1a000190:	b410      	push	{r4}
        *pulDest++ = *pulSrc++;
1a000192:	f850 4b04 	ldr.w	r4, [r0], #4
1a000196:	f841 4b04 	str.w	r4, [r1], #4
    for (loop = 0; loop < len; loop = loop + 4)
1a00019a:	3304      	adds	r3, #4
1a00019c:	4293      	cmp	r3, r2
1a00019e:	d3f8      	bcc.n	1a000192 <data_init+0x8>
}
1a0001a0:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0001a4:	4770      	bx	lr
1a0001a6:	4770      	bx	lr

1a0001a8 <bss_init>:
    for (loop = 0; loop < len; loop = loop + 4)
1a0001a8:	2300      	movs	r3, #0
1a0001aa:	428b      	cmp	r3, r1
1a0001ac:	d204      	bcs.n	1a0001b8 <bss_init+0x10>
        *pulDest++ = 0;
1a0001ae:	2200      	movs	r2, #0
1a0001b0:	f840 2b04 	str.w	r2, [r0], #4
    for (loop = 0; loop < len; loop = loop + 4)
1a0001b4:	3304      	adds	r3, #4
1a0001b6:	e7f8      	b.n	1a0001aa <bss_init+0x2>
}
1a0001b8:	4770      	bx	lr

1a0001ba <ADC0_IRQHandler>:
};

__attribute__ ((section(".after_vectors")))
void IntDefaultHandler(void) {
    while (1) {
    }
1a0001ba:	e7fe      	b.n	1a0001ba <ADC0_IRQHandler>
1a0001bc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001cc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001fc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000200:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000204:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000208:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00020c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000210:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000214:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000218:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00021c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000220:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000224:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000228:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00022c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000230:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000234:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000238:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00023c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000240:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000244:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000248:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00024c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000250:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000254:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000258:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00025c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000260:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000264:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000268:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00026c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000270:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000274:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000278:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00027c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000280:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000284:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000288:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00028c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000290:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000294:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000298:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00029c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ac:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002bc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002cc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a0002fc <CRP_WORD>:
1a0002fc:	ffff ffff                                   ....

1a000300 <main>:
// Inlcusiones

#include "app.h"         // <= Su propia cabecera

int main(void)
{  
1a000300:	b508      	push	{r3, lr}
   boardConfig();
1a000302:	f001 fa45 	bl	1a001790 <boardInit>
	initTemperatureSensor();
1a000306:	f000 f813 	bl	1a000330 <initTemperatureSensor>

   float temp = 0;

	while (1)
	{
      temp = leerTemperatura();
1a00030a:	f000 f8e7 	bl	1a0004dc <leerTemperatura>
      printf("Temperatura: %.2f\r\n", temp);
1a00030e:	ee10 0a10 	vmov	r0, s0
1a000312:	f001 fbf7 	bl	1a001b04 <__aeabi_f2d>
1a000316:	4602      	mov	r2, r0
1a000318:	460b      	mov	r3, r1
1a00031a:	4804      	ldr	r0, [pc, #16]	; (1a00032c <main+0x2c>)
1a00031c:	f002 ff50 	bl	1a0031c0 <printf>
      delay(2000);
1a000320:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
1a000324:	2100      	movs	r1, #0
1a000326:	f001 fa6d 	bl	1a001804 <delay>
1a00032a:	e7ee      	b.n	1a00030a <main+0xa>
1a00032c:	1a007304 	.word	0x1a007304

1a000330 <initTemperatureSensor>:
      printf("%d", (byte >> i) & 1);
   }
}

void initTemperatureSensor()
{
1a000330:	b508      	push	{r3, lr}
    Board_Init();
1a000332:	f000 fae7 	bl	1a000904 <Board_Init>
   gpioInit(GPIO3, GPIO_INPUT);
1a000336:	2100      	movs	r1, #0
1a000338:	200e      	movs	r0, #14
1a00033a:	f001 f875 	bl	1a001428 <gpioInit>
}
1a00033e:	bd08      	pop	{r3, pc}

1a000340 <delayUs>:

void delayUs(unsigned int n) {
   int count = 0;
1a000340:	2300      	movs	r3, #0
   while (1){
          __asm__ volatile (
1a000342:	bf00      	nop
1a000344:	bf00      	nop
1a000346:	bf00      	nop
1a000348:	bf00      	nop
1a00034a:	bf00      	nop
1a00034c:	bf00      	nop
1a00034e:	bf00      	nop
1a000350:	bf00      	nop
1a000352:	bf00      	nop
1a000354:	bf00      	nop
1a000356:	bf00      	nop
1a000358:	bf00      	nop
1a00035a:	bf00      	nop
1a00035c:	bf00      	nop
1a00035e:	bf00      	nop
1a000360:	bf00      	nop
1a000362:	bf00      	nop
1a000364:	bf00      	nop
1a000366:	bf00      	nop
1a000368:	bf00      	nop
1a00036a:	bf00      	nop
1a00036c:	bf00      	nop
1a00036e:	bf00      	nop
1a000370:	bf00      	nop
1a000372:	bf00      	nop
1a000374:	bf00      	nop
1a000376:	bf00      	nop
1a000378:	bf00      	nop
1a00037a:	bf00      	nop
1a00037c:	bf00      	nop
1a00037e:	bf00      	nop
1a000380:	bf00      	nop
1a000382:	bf00      	nop
1a000384:	bf00      	nop
1a000386:	bf00      	nop
1a000388:	bf00      	nop
1a00038a:	bf00      	nop
1a00038c:	bf00      	nop
1a00038e:	bf00      	nop
1a000390:	bf00      	nop
1a000392:	bf00      	nop
               "nop\n\t"
               "nop\n\t"
               "nop\n\t"
               "nop\n\t"
         );
      if (++count == n) {
1a000394:	3301      	adds	r3, #1
1a000396:	4283      	cmp	r3, r0
1a000398:	d1d3      	bne.n	1a000342 <delayUs+0x2>
         //count = 0; // Sacar
         break;
      }
   }
   
}
1a00039a:	4770      	bx	lr

1a00039c <detectar>:

uint8_t detectar() {
1a00039c:	b510      	push	{r4, lr}
   uint8_t flag = 0, timeout = 0;;
   // Pulso de reset
   gpioInit(GPIO3, GPIO_OUTPUT);
1a00039e:	2101      	movs	r1, #1
1a0003a0:	200e      	movs	r0, #14
1a0003a2:	f001 f841 	bl	1a001428 <gpioInit>
   gpioWrite(GPIO3, LOW);
1a0003a6:	2100      	movs	r1, #0
1a0003a8:	200e      	movs	r0, #14
1a0003aa:	f001 f913 	bl	1a0015d4 <gpioWrite>
   delayUs(DELAY_500US);
1a0003ae:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
1a0003b2:	f7ff ffc5 	bl	1a000340 <delayUs>
   
   // Pulso de presencia
   gpioConfig(GPIO3, GPIO_INPUT);
1a0003b6:	2100      	movs	r1, #0
1a0003b8:	200e      	movs	r0, #14
1a0003ba:	f001 f835 	bl	1a001428 <gpioInit>
   uint8_t flag = 0, timeout = 0;;
1a0003be:	2400      	movs	r4, #0
   while(gpioRead(GPIO3) == HIGH && timeout < 20) {
1a0003c0:	e004      	b.n	1a0003cc <detectar+0x30>
      delayUs(DELAY_5US);
1a0003c2:	200f      	movs	r0, #15
1a0003c4:	f7ff ffbc 	bl	1a000340 <delayUs>
      timeout++;
1a0003c8:	3401      	adds	r4, #1
1a0003ca:	b2e4      	uxtb	r4, r4
   while(gpioRead(GPIO3) == HIGH && timeout < 20) {
1a0003cc:	200e      	movs	r0, #14
1a0003ce:	f001 f936 	bl	1a00163e <gpioRead>
1a0003d2:	2801      	cmp	r0, #1
1a0003d4:	d103      	bne.n	1a0003de <detectar+0x42>
1a0003d6:	2c13      	cmp	r4, #19
1a0003d8:	d9f3      	bls.n	1a0003c2 <detectar+0x26>
1a0003da:	2400      	movs	r4, #0
1a0003dc:	e002      	b.n	1a0003e4 <detectar+0x48>
1a0003de:	2400      	movs	r4, #0
1a0003e0:	e000      	b.n	1a0003e4 <detectar+0x48>
   }
   
   while(gpioRead(GPIO3) == LOW) {
      flag = 1;
1a0003e2:	2401      	movs	r4, #1
   while(gpioRead(GPIO3) == LOW) {
1a0003e4:	200e      	movs	r0, #14
1a0003e6:	f001 f92a 	bl	1a00163e <gpioRead>
1a0003ea:	2800      	cmp	r0, #0
1a0003ec:	d0f9      	beq.n	1a0003e2 <detectar+0x46>
   /*if (flag)
      printf("Detectado!!!!\r\n");
   else
      printf(":( %d\r\n", timeout);*/
   return flag;
}
1a0003ee:	4620      	mov	r0, r4
1a0003f0:	bd10      	pop	{r4, pc}

1a0003f2 <write_bit>:

void write_bit(uint8_t bit) {
1a0003f2:	b508      	push	{r3, lr}
   if (bit&1) {
1a0003f4:	f010 0f01 	tst.w	r0, #1
1a0003f8:	d013      	beq.n	1a000422 <write_bit+0x30>
      // WRITE 1 SLOT
      gpioConfig(GPIO3, GPIO_OUTPUT);
1a0003fa:	2101      	movs	r1, #1
1a0003fc:	200e      	movs	r0, #14
1a0003fe:	f001 f813 	bl	1a001428 <gpioInit>
      gpioWrite(GPIO3, LOW);
1a000402:	2100      	movs	r1, #0
1a000404:	200e      	movs	r0, #14
1a000406:	f001 f8e5 	bl	1a0015d4 <gpioWrite>
      delayUs(DELAY_5US);
1a00040a:	200f      	movs	r0, #15
1a00040c:	f7ff ff98 	bl	1a000340 <delayUs>
      gpioConfig(GPIO3, GPIO_INPUT);
1a000410:	2100      	movs	r1, #0
1a000412:	200e      	movs	r0, #14
1a000414:	f001 f808 	bl	1a001428 <gpioInit>
      delayUs(DELAY_80US);
1a000418:	f44f 70a0 	mov.w	r0, #320	; 0x140
1a00041c:	f7ff ff90 	bl	1a000340 <delayUs>
      gpioWrite(GPIO3, LOW);
      delayUs(DELAY_80US);
      gpioConfig(GPIO3, GPIO_INPUT);
      delayUs(DELAY_5US);
   }
}
1a000420:	bd08      	pop	{r3, pc}
      gpioConfig(GPIO3, GPIO_OUTPUT);
1a000422:	2101      	movs	r1, #1
1a000424:	200e      	movs	r0, #14
1a000426:	f000 ffff 	bl	1a001428 <gpioInit>
      gpioWrite(GPIO3, LOW);
1a00042a:	2100      	movs	r1, #0
1a00042c:	200e      	movs	r0, #14
1a00042e:	f001 f8d1 	bl	1a0015d4 <gpioWrite>
      delayUs(DELAY_80US);
1a000432:	f44f 70a0 	mov.w	r0, #320	; 0x140
1a000436:	f7ff ff83 	bl	1a000340 <delayUs>
      gpioConfig(GPIO3, GPIO_INPUT);
1a00043a:	2100      	movs	r1, #0
1a00043c:	200e      	movs	r0, #14
1a00043e:	f000 fff3 	bl	1a001428 <gpioInit>
      delayUs(DELAY_5US);
1a000442:	200f      	movs	r0, #15
1a000444:	f7ff ff7c 	bl	1a000340 <delayUs>
}
1a000448:	e7ea      	b.n	1a000420 <write_bit+0x2e>

1a00044a <write>:

void write(uint8_t byte) {
1a00044a:	b538      	push	{r3, r4, r5, lr}
1a00044c:	4605      	mov	r5, r0
   uint8_t mask;
   for(mask = 1; mask; mask<<=1) {
1a00044e:	2401      	movs	r4, #1
1a000450:	e007      	b.n	1a000462 <write+0x18>
      //printf("Writing: %d\r\n", (byte&mask) ? 1 : 0);
      write_bit((byte&mask) ? 1 : 0);
1a000452:	422c      	tst	r4, r5
1a000454:	bf14      	ite	ne
1a000456:	2001      	movne	r0, #1
1a000458:	2000      	moveq	r0, #0
1a00045a:	f7ff ffca 	bl	1a0003f2 <write_bit>
   for(mask = 1; mask; mask<<=1) {
1a00045e:	0064      	lsls	r4, r4, #1
1a000460:	b2e4      	uxtb	r4, r4
1a000462:	2c00      	cmp	r4, #0
1a000464:	d1f5      	bne.n	1a000452 <write+0x8>
   }
}
1a000466:	bd38      	pop	{r3, r4, r5, pc}

1a000468 <read_bit>:

uint8_t read_bit() {
1a000468:	b510      	push	{r4, lr}
   uint8_t bit;
   
   gpioConfig(GPIO3, GPIO_OUTPUT);
1a00046a:	2101      	movs	r1, #1
1a00046c:	200e      	movs	r0, #14
1a00046e:	f000 ffdb 	bl	1a001428 <gpioInit>
   gpioWrite(GPIO3, LOW);
1a000472:	2100      	movs	r1, #0
1a000474:	200e      	movs	r0, #14
1a000476:	f001 f8ad 	bl	1a0015d4 <gpioWrite>
   delayUs(DELAY_2US);
1a00047a:	2002      	movs	r0, #2
1a00047c:	f7ff ff60 	bl	1a000340 <delayUs>
   
   gpioConfig(GPIO3, GPIO_INPUT);
1a000480:	2100      	movs	r1, #0
1a000482:	200e      	movs	r0, #14
1a000484:	f000 ffd0 	bl	1a001428 <gpioInit>
   delayUs(DELAY_5US);
1a000488:	200f      	movs	r0, #15
1a00048a:	f7ff ff59 	bl	1a000340 <delayUs>
   bit = gpioRead(GPIO3);
1a00048e:	200e      	movs	r0, #14
1a000490:	f001 f8d5 	bl	1a00163e <gpioRead>
1a000494:	4604      	mov	r4, r0
   
   delayUs(DELAY_80US);
1a000496:	f44f 70a0 	mov.w	r0, #320	; 0x140
1a00049a:	f7ff ff51 	bl	1a000340 <delayUs>
   
   return bit;
}
1a00049e:	4620      	mov	r0, r4
1a0004a0:	bd10      	pop	{r4, pc}

1a0004a2 <read>:

uint8_t read() {
1a0004a2:	b538      	push	{r3, r4, r5, lr}
   uint8_t mask;
   uint8_t ret = 0;
1a0004a4:	2500      	movs	r5, #0
   for(mask = 1; mask; mask<<=1){
1a0004a6:	2401      	movs	r4, #1
1a0004a8:	e001      	b.n	1a0004ae <read+0xc>
1a0004aa:	0064      	lsls	r4, r4, #1
1a0004ac:	b2e4      	uxtb	r4, r4
1a0004ae:	b12c      	cbz	r4, 1a0004bc <read+0x1a>
      if(read_bit()) ret |= mask;
1a0004b0:	f7ff ffda 	bl	1a000468 <read_bit>
1a0004b4:	2800      	cmp	r0, #0
1a0004b6:	d0f8      	beq.n	1a0004aa <read+0x8>
1a0004b8:	4325      	orrs	r5, r4
1a0004ba:	e7f6      	b.n	1a0004aa <read+0x8>
      //printf("Bit %d: %d\r\n", mask, ret);
   }
   
   return ret;
}
1a0004bc:	4628      	mov	r0, r5
1a0004be:	bd38      	pop	{r3, r4, r5, pc}

1a0004c0 <read_bytes>:

void read_bytes(int8_t *buff, uint8_t len) {
1a0004c0:	b570      	push	{r4, r5, r6, lr}
1a0004c2:	4606      	mov	r6, r0
1a0004c4:	460d      	mov	r5, r1
   uint8_t i;
   for(i = 0; i < len; i++){
1a0004c6:	2400      	movs	r4, #0
1a0004c8:	42ac      	cmp	r4, r5
1a0004ca:	d205      	bcs.n	1a0004d8 <read_bytes+0x18>
      buff[i] = read();
1a0004cc:	f7ff ffe9 	bl	1a0004a2 <read>
1a0004d0:	5530      	strb	r0, [r6, r4]
   for(i = 0; i < len; i++){
1a0004d2:	3401      	adds	r4, #1
1a0004d4:	b2e4      	uxtb	r4, r4
1a0004d6:	e7f7      	b.n	1a0004c8 <read_bytes+0x8>
      //printf("Byte %d: ", i);
      //printInBin(buff[i]);
      //printf("\r\n");
   }
}
1a0004d8:	bd70      	pop	{r4, r5, r6, pc}
1a0004da:	Address 0x1a0004da is out of bounds.


1a0004dc <leerTemperatura>:

float leerTemperatura() {
1a0004dc:	b500      	push	{lr}
1a0004de:	b085      	sub	sp, #20
   uint8_t scratchpad[9];
   
   if(!detectar())
1a0004e0:	f7ff ff5c 	bl	1a00039c <detectar>
1a0004e4:	b920      	cbnz	r0, 1a0004f0 <leerTemperatura+0x14>
      return -1;
1a0004e6:	eebf 0a00 	vmov.f32	s0, #240	; 0xbf800000 -1.0
      return -1;
   
   int16_t raw = (scratchpad[1] << 8) | scratchpad[0];
   
   return ( (float) raw / 16.0);
1a0004ea:	b005      	add	sp, #20
1a0004ec:	f85d fb04 	ldr.w	pc, [sp], #4
   write(0xCC); // Skip
1a0004f0:	20cc      	movs	r0, #204	; 0xcc
1a0004f2:	f7ff ffaa 	bl	1a00044a <write>
   write(0x44); // Convert T
1a0004f6:	2044      	movs	r0, #68	; 0x44
1a0004f8:	f7ff ffa7 	bl	1a00044a <write>
   while (gpioRead(GPIO3) == LOW) {
1a0004fc:	200e      	movs	r0, #14
1a0004fe:	f001 f89e 	bl	1a00163e <gpioRead>
1a000502:	2800      	cmp	r0, #0
1a000504:	d0fa      	beq.n	1a0004fc <leerTemperatura+0x20>
   if(!detectar())
1a000506:	f7ff ff49 	bl	1a00039c <detectar>
1a00050a:	b910      	cbnz	r0, 1a000512 <leerTemperatura+0x36>
      return -1;
1a00050c:	eebf 0a00 	vmov.f32	s0, #240	; 0xbf800000 -1.0
1a000510:	e7eb      	b.n	1a0004ea <leerTemperatura+0xe>
   write(0xCC); // Skip
1a000512:	20cc      	movs	r0, #204	; 0xcc
1a000514:	f7ff ff99 	bl	1a00044a <write>
   write(0xBE); // Read scratchpad
1a000518:	20be      	movs	r0, #190	; 0xbe
1a00051a:	f7ff ff96 	bl	1a00044a <write>
   read_bytes(scratchpad, 9);
1a00051e:	2109      	movs	r1, #9
1a000520:	a801      	add	r0, sp, #4
1a000522:	f7ff ffcd 	bl	1a0004c0 <read_bytes>
   if(!detectar())
1a000526:	f7ff ff39 	bl	1a00039c <detectar>
1a00052a:	b178      	cbz	r0, 1a00054c <leerTemperatura+0x70>
   int16_t raw = (scratchpad[1] << 8) | scratchpad[0];
1a00052c:	f89d 3005 	ldrb.w	r3, [sp, #5]
1a000530:	021b      	lsls	r3, r3, #8
1a000532:	b21b      	sxth	r3, r3
1a000534:	f89d 2004 	ldrb.w	r2, [sp, #4]
1a000538:	4313      	orrs	r3, r2
1a00053a:	ee00 3a10 	vmov	s0, r3
   return ( (float) raw / 16.0);
1a00053e:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
1a000542:	eddf 7a04 	vldr	s15, [pc, #16]	; 1a000554 <leerTemperatura+0x78>
1a000546:	ee20 0a27 	vmul.f32	s0, s0, s15
1a00054a:	e7ce      	b.n	1a0004ea <leerTemperatura+0xe>
      return -1;
1a00054c:	eebf 0a00 	vmov.f32	s0, #240	; 0xbf800000 -1.0
1a000550:	e7cb      	b.n	1a0004ea <leerTemperatura+0xe>
1a000552:	bf00      	nop
1a000554:	3d800000 	.word	0x3d800000

1a000558 <initialise_monitor_handles>:
}
1a000558:	4770      	bx	lr
1a00055a:	Address 0x1a00055a is out of bounds.


1a00055c <Reset_Handler>:
void Reset_Handler(void) {
1a00055c:	b510      	push	{r4, lr}
    __asm__ volatile("cpsid i");
1a00055e:	b672      	cpsid	i
    *(RESET_CONTROL + 0) = 0x10DF1000;
1a000560:	4b19      	ldr	r3, [pc, #100]	; (1a0005c8 <Reset_Handler+0x6c>)
1a000562:	4a1a      	ldr	r2, [pc, #104]	; (1a0005cc <Reset_Handler+0x70>)
1a000564:	601a      	str	r2, [r3, #0]
    *(RESET_CONTROL + 1) = 0x01DFF7FF;
1a000566:	3304      	adds	r3, #4
1a000568:	4a19      	ldr	r2, [pc, #100]	; (1a0005d0 <Reset_Handler+0x74>)
1a00056a:	601a      	str	r2, [r3, #0]
    for (irqpendloop = 0; irqpendloop < 8; irqpendloop++) {
1a00056c:	2300      	movs	r3, #0
1a00056e:	e005      	b.n	1a00057c <Reset_Handler+0x20>
        *(NVIC_ICPR + irqpendloop) = 0xFFFFFFFF;
1a000570:	4a18      	ldr	r2, [pc, #96]	; (1a0005d4 <Reset_Handler+0x78>)
1a000572:	f04f 31ff 	mov.w	r1, #4294967295
1a000576:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    for (irqpendloop = 0; irqpendloop < 8; irqpendloop++) {
1a00057a:	3301      	adds	r3, #1
1a00057c:	2b07      	cmp	r3, #7
1a00057e:	d9f7      	bls.n	1a000570 <Reset_Handler+0x14>
    __asm__ volatile("cpsie i");
1a000580:	b662      	cpsie	i
    SectionTableAddr = &__data_section_table;
1a000582:	4b15      	ldr	r3, [pc, #84]	; (1a0005d8 <Reset_Handler+0x7c>)
    while (SectionTableAddr < &__data_section_table_end) {
1a000584:	e007      	b.n	1a000596 <Reset_Handler+0x3a>
        SectionLen = *SectionTableAddr++;
1a000586:	f103 040c 	add.w	r4, r3, #12
        data_init(LoadAddr, ExeAddr, SectionLen);
1a00058a:	689a      	ldr	r2, [r3, #8]
1a00058c:	6859      	ldr	r1, [r3, #4]
1a00058e:	6818      	ldr	r0, [r3, #0]
1a000590:	f7ff fdfb 	bl	1a00018a <data_init>
        SectionLen = *SectionTableAddr++;
1a000594:	4623      	mov	r3, r4
    while (SectionTableAddr < &__data_section_table_end) {
1a000596:	4a11      	ldr	r2, [pc, #68]	; (1a0005dc <Reset_Handler+0x80>)
1a000598:	4293      	cmp	r3, r2
1a00059a:	d3f4      	bcc.n	1a000586 <Reset_Handler+0x2a>
1a00059c:	e006      	b.n	1a0005ac <Reset_Handler+0x50>
        ExeAddr = *SectionTableAddr++;
1a00059e:	461c      	mov	r4, r3
        bss_init(ExeAddr, SectionLen);
1a0005a0:	6859      	ldr	r1, [r3, #4]
1a0005a2:	f854 0b08 	ldr.w	r0, [r4], #8
1a0005a6:	f7ff fdff 	bl	1a0001a8 <bss_init>
        SectionLen = *SectionTableAddr++;
1a0005aa:	4623      	mov	r3, r4
    while (SectionTableAddr < &__bss_section_table_end) {
1a0005ac:	4a0c      	ldr	r2, [pc, #48]	; (1a0005e0 <Reset_Handler+0x84>)
1a0005ae:	4293      	cmp	r3, r2
1a0005b0:	d3f5      	bcc.n	1a00059e <Reset_Handler+0x42>
    SystemInit();
1a0005b2:	f000 fef5 	bl	1a0013a0 <SystemInit>
    __libc_init_array();
1a0005b6:	f002 fa29 	bl	1a002a0c <__libc_init_array>
    initialise_monitor_handles();
1a0005ba:	f7ff ffcd 	bl	1a000558 <initialise_monitor_handles>
    main();
1a0005be:	f7ff fe9f 	bl	1a000300 <main>
        __asm__ volatile("wfi");
1a0005c2:	bf30      	wfi
1a0005c4:	e7fd      	b.n	1a0005c2 <Reset_Handler+0x66>
1a0005c6:	bf00      	nop
1a0005c8:	40053100 	.word	0x40053100
1a0005cc:	10df1000 	.word	0x10df1000
1a0005d0:	01dff7ff 	.word	0x01dff7ff
1a0005d4:	e000e280 	.word	0xe000e280
1a0005d8:	1a000114 	.word	0x1a000114
1a0005dc:	1a000150 	.word	0x1a000150
1a0005e0:	1a000178 	.word	0x1a000178

1a0005e4 <_fini>:
void _fini(void) {}
1a0005e4:	4770      	bx	lr

1a0005e6 <_init>:
void _init(void) {}
1a0005e6:	4770      	bx	lr

1a0005e8 <_close_r>:
   (void) __params__;
}

USED int _close_r(struct _reent *r, int fd) {
   UNUSED(fd);
   SET_ERR(EBADF);
1a0005e8:	2309      	movs	r3, #9
1a0005ea:	6003      	str	r3, [r0, #0]
   return -1;
}
1a0005ec:	f04f 30ff 	mov.w	r0, #4294967295
1a0005f0:	4770      	bx	lr

1a0005f2 <_fstat_r>:
}

USED int _fstat_r(struct _reent *r, int fd, struct stat *st) {
   UNUSED(fd);
   UNUSED(st);
   SET_ERR(ENOSYS);
1a0005f2:	2358      	movs	r3, #88	; 0x58
1a0005f4:	6003      	str	r3, [r0, #0]
   return -1;
}
1a0005f6:	f04f 30ff 	mov.w	r0, #4294967295
1a0005fa:	4770      	bx	lr

1a0005fc <_isatty_r>:
   UNUSED(r);
   return 1;
}

USED int _isatty_r(struct _reent *r, int fd) {
   switch (fd) {
1a0005fc:	2902      	cmp	r1, #2
1a0005fe:	d904      	bls.n	1a00060a <_isatty_r+0xe>
   case 0:
   case 1:
   case 2:
       return 1;
   default:
       SET_ERR(EBADF);
1a000600:	2309      	movs	r3, #9
1a000602:	6003      	str	r3, [r0, #0]
       return -1;
1a000604:	f04f 30ff 	mov.w	r0, #4294967295
1a000608:	4770      	bx	lr
       return 1;
1a00060a:	2001      	movs	r0, #1
   }
}
1a00060c:	4770      	bx	lr

1a00060e <_lseek_r>:

USED _off_t _lseek_r(struct _reent *r, int fd, _off_t off, int w) {
   UNUSED(fd);
   UNUSED(off);
   UNUSED(w);
   SET_ERR(ENOSYS);
1a00060e:	2358      	movs	r3, #88	; 0x58
1a000610:	6003      	str	r3, [r0, #0]
   return -1;
}
1a000612:	f04f 30ff 	mov.w	r0, #4294967295
1a000616:	4770      	bx	lr

1a000618 <_read_r>:
   }
}
*/
USED _ssize_t _read_r(struct _reent *r, int fd, void *b, size_t n) {
  size_t i = 0;
  switch (fd) {
1a000618:	2902      	cmp	r1, #2
1a00061a:	d81f      	bhi.n	1a00065c <_read_r+0x44>
USED _ssize_t _read_r(struct _reent *r, int fd, void *b, size_t n) {
1a00061c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a000620:	461d      	mov	r5, r3
1a000622:	4617      	mov	r7, r2
1a000624:	4606      	mov	r6, r0
  size_t i = 0;
1a000626:	2400      	movs	r4, #0
  case 0:
  case 1:
  case 2:
      while( i < n ){
1a000628:	42ac      	cmp	r4, r5
1a00062a:	d211      	bcs.n	1a000650 <_read_r+0x38>
         int c = __stdio_getchar();
1a00062c:	f000 f987 	bl	1a00093e <__stdio_getchar>
         if( c != -1 ){
1a000630:	f1b0 3fff 	cmp.w	r0, #4294967295
1a000634:	d0f8      	beq.n	1a000628 <_read_r+0x10>
            ((char*) b)[i++] = (char) c;
1a000636:	f104 0801 	add.w	r8, r4, #1
1a00063a:	5538      	strb	r0, [r7, r4]
            if( c == '\r' || c == '\n' ){
1a00063c:	280d      	cmp	r0, #13
1a00063e:	d003      	beq.n	1a000648 <_read_r+0x30>
1a000640:	280a      	cmp	r0, #10
1a000642:	d001      	beq.n	1a000648 <_read_r+0x30>
            ((char*) b)[i++] = (char) c;
1a000644:	4644      	mov	r4, r8
1a000646:	e7ef      	b.n	1a000628 <_read_r+0x10>
               // read anotherone to prevent \r\n
               (void) __stdio_getchar();
1a000648:	f000 f979 	bl	1a00093e <__stdio_getchar>
               return i;
1a00064c:	4640      	mov	r0, r8
1a00064e:	e003      	b.n	1a000658 <_read_r+0x40>
            }
         }
      }
      SET_ERR(ENODEV);
1a000650:	2313      	movs	r3, #19
1a000652:	6033      	str	r3, [r6, #0]
      return -1;
1a000654:	f04f 30ff 	mov.w	r0, #4294967295
  default:
      SET_ERR(ENODEV);
      return -1;
  }
}
1a000658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      SET_ERR(ENODEV);
1a00065c:	2313      	movs	r3, #19
1a00065e:	6003      	str	r3, [r0, #0]
      return -1;
1a000660:	f04f 30ff 	mov.w	r0, #4294967295
}
1a000664:	4770      	bx	lr

1a000666 <_write_r>:
   return -1;
}

USED _ssize_t _write_r(struct _reent *r, int fd, const void *b, size_t n) {
   size_t i;
   switch (fd) {
1a000666:	2902      	cmp	r1, #2
1a000668:	d80c      	bhi.n	1a000684 <_write_r+0x1e>
USED _ssize_t _write_r(struct _reent *r, int fd, const void *b, size_t n) {
1a00066a:	b570      	push	{r4, r5, r6, lr}
1a00066c:	461d      	mov	r5, r3
1a00066e:	4616      	mov	r6, r2
   case 0:
   case 1:
   case 2:
       for (i = 0; i < n; i++)
1a000670:	2400      	movs	r4, #0
1a000672:	42ac      	cmp	r4, r5
1a000674:	d204      	bcs.n	1a000680 <_write_r+0x1a>
           __stdio_putchar(((char*) b)[i]);
1a000676:	5d30      	ldrb	r0, [r6, r4]
1a000678:	f000 f95c 	bl	1a000934 <__stdio_putchar>
       for (i = 0; i < n; i++)
1a00067c:	3401      	adds	r4, #1
1a00067e:	e7f8      	b.n	1a000672 <_write_r+0xc>
       return n;
1a000680:	4628      	mov	r0, r5
   default:
       SET_ERR(ENODEV);
       return -1;
   }
}
1a000682:	bd70      	pop	{r4, r5, r6, pc}
       SET_ERR(ENODEV);
1a000684:	2313      	movs	r3, #19
1a000686:	6003      	str	r3, [r0, #0]
       return -1;
1a000688:	f04f 30ff 	mov.w	r0, #4294967295
}
1a00068c:	4770      	bx	lr
1a00068e:	Address 0x1a00068e is out of bounds.


1a000690 <_sbrk_r>:

USED void *_sbrk_r(struct _reent *r, ptrdiff_t incr) {
   extern int _pvHeapStart;
   static void *heap_end;
   void *prev_heap_end;
   if (heap_end == 0) {
1a000690:	4b05      	ldr	r3, [pc, #20]	; (1a0006a8 <_sbrk_r+0x18>)
1a000692:	681b      	ldr	r3, [r3, #0]
1a000694:	b123      	cbz	r3, 1a0006a0 <_sbrk_r+0x10>
       heap_end = &_pvHeapStart;
   }
   prev_heap_end = heap_end;
1a000696:	4b04      	ldr	r3, [pc, #16]	; (1a0006a8 <_sbrk_r+0x18>)
1a000698:	6818      	ldr	r0, [r3, #0]
   heap_end += incr;
1a00069a:	4401      	add	r1, r0
1a00069c:	6019      	str	r1, [r3, #0]
   return prev_heap_end;
}
1a00069e:	4770      	bx	lr
       heap_end = &_pvHeapStart;
1a0006a0:	4b01      	ldr	r3, [pc, #4]	; (1a0006a8 <_sbrk_r+0x18>)
1a0006a2:	4a02      	ldr	r2, [pc, #8]	; (1a0006ac <_sbrk_r+0x1c>)
1a0006a4:	601a      	str	r2, [r3, #0]
1a0006a6:	e7f6      	b.n	1a000696 <_sbrk_r+0x6>
1a0006a8:	100009f8 	.word	0x100009f8
1a0006ac:	10000a78 	.word	0x10000a78

1a0006b0 <Board_SetupMuxing>:
 * @return	Nothing
 */
STATIC INLINE void Chip_SCU_SetPinMuxing(const PINMUX_GRP_T *pinArray, uint32_t arrayLength)
{
	uint32_t ix;
	for (ix = 0; ix < arrayLength; ix++ ) {
1a0006b0:	2300      	movs	r3, #0
1a0006b2:	2b1c      	cmp	r3, #28
1a0006b4:	d812      	bhi.n	1a0006dc <Board_SetupMuxing+0x2c>
    #endif
};


void Board_SetupMuxing(void)
{
1a0006b6:	b410      	push	{r4}
		Chip_SCU_PinMuxSet(pinArray[ix].pingrp, pinArray[ix].pinnum, pinArray[ix].modefunc);
1a0006b8:	4a09      	ldr	r2, [pc, #36]	; (1a0006e0 <Board_SetupMuxing+0x30>)
1a0006ba:	eb02 0183 	add.w	r1, r2, r3, lsl #2
1a0006be:	f812 4023 	ldrb.w	r4, [r2, r3, lsl #2]
1a0006c2:	784a      	ldrb	r2, [r1, #1]
1a0006c4:	8848      	ldrh	r0, [r1, #2]
	LPC_SCU->SFSP[port][pin] = modefunc;
1a0006c6:	eb02 1244 	add.w	r2, r2, r4, lsl #5
1a0006ca:	4906      	ldr	r1, [pc, #24]	; (1a0006e4 <Board_SetupMuxing+0x34>)
1a0006cc:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
	for (ix = 0; ix < arrayLength; ix++ ) {
1a0006d0:	3301      	adds	r3, #1
1a0006d2:	2b1c      	cmp	r3, #28
1a0006d4:	d9f0      	bls.n	1a0006b8 <Board_SetupMuxing+0x8>
    Chip_SCU_SetPinMuxing(pinmuxing, sizeof(pinmuxing) / sizeof(PINMUX_GRP_T));
}
1a0006d6:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0006da:	4770      	bx	lr
1a0006dc:	4770      	bx	lr
1a0006de:	bf00      	nop
1a0006e0:	1a00731c 	.word	0x1a00731c
1a0006e4:	40086000 	.word	0x40086000

1a0006e8 <Board_SetupClocking>:


void Board_SetupClocking(void)
{
1a0006e8:	b510      	push	{r4, lr}
 */
STATIC INLINE void Chip_CREG_SetFlashAcceleration(uint32_t Hz)
{
	uint32_t FAValue = Hz / 21510000;

	LPC_CREG->FLASHCFGA = (LPC_CREG->FLASHCFGA & (~(0xF << 12))) | (FAValue << 12);
1a0006ea:	4a17      	ldr	r2, [pc, #92]	; (1a000748 <Board_SetupClocking+0x60>)
1a0006ec:	f8d2 3120 	ldr.w	r3, [r2, #288]	; 0x120
1a0006f0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a0006f4:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a0006f8:	f8c2 3120 	str.w	r3, [r2, #288]	; 0x120
	LPC_CREG->FLASHCFGB = (LPC_CREG->FLASHCFGB & (~(0xF << 12))) | (FAValue << 12);
1a0006fc:	f8d2 3124 	ldr.w	r3, [r2, #292]	; 0x124
1a000700:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a000704:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a000708:	f8c2 3124 	str.w	r3, [r2, #292]	; 0x124
    Chip_CREG_SetFlashAcceleration(MAX_CLOCK_FREQ);
    Chip_SetupCoreClock(CLKIN_CRYSTAL, MAX_CLOCK_FREQ, true);
1a00070c:	2201      	movs	r2, #1
1a00070e:	490f      	ldr	r1, [pc, #60]	; (1a00074c <Board_SetupClocking+0x64>)
1a000710:	2006      	movs	r0, #6
1a000712:	f000 fa1b 	bl	1a000b4c <Chip_SetupCoreClock>

    /* Setup system base clocks and initial states. This won't enable and
       disable individual clocks, but sets up the base clock sources for
       each individual peripheral clock. */
    for (uint32_t i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); ++i)
1a000716:	2400      	movs	r4, #0
1a000718:	b14c      	cbz	r4, 1a00072e <Board_SetupClocking+0x46>
        Chip_Clock_SetBaseClock (c->clk, c->clkin, c->autoblock_enab,
                                c->powerdn);
    }

    /* Reset and enable 32Khz oscillator */
    LPC_CREG->CREG0 &= ~((1 << 3) | (1 << 2));
1a00071a:	4b0b      	ldr	r3, [pc, #44]	; (1a000748 <Board_SetupClocking+0x60>)
1a00071c:	685a      	ldr	r2, [r3, #4]
1a00071e:	f022 020c 	bic.w	r2, r2, #12
1a000722:	605a      	str	r2, [r3, #4]
    LPC_CREG->CREG0 |= (1 << 1) | (1 << 0);
1a000724:	685a      	ldr	r2, [r3, #4]
1a000726:	f042 0203 	orr.w	r2, r2, #3
1a00072a:	605a      	str	r2, [r3, #4]
}
1a00072c:	bd10      	pop	{r4, pc}
        Chip_Clock_SetBaseClock (c->clk, c->clkin, c->autoblock_enab,
1a00072e:	4808      	ldr	r0, [pc, #32]	; (1a000750 <Board_SetupClocking+0x68>)
1a000730:	eb00 0184 	add.w	r1, r0, r4, lsl #2
1a000734:	2301      	movs	r3, #1
1a000736:	788a      	ldrb	r2, [r1, #2]
1a000738:	7849      	ldrb	r1, [r1, #1]
1a00073a:	f810 0024 	ldrb.w	r0, [r0, r4, lsl #2]
1a00073e:	f000 fcdd 	bl	1a0010fc <Chip_Clock_SetBaseClock>
    for (uint32_t i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); ++i)
1a000742:	3401      	adds	r4, #1
1a000744:	e7e8      	b.n	1a000718 <Board_SetupClocking+0x30>
1a000746:	bf00      	nop
1a000748:	40043000 	.word	0x40043000
1a00074c:	0c28cb00 	.word	0x0c28cb00
1a000750:	1a007318 	.word	0x1a007318

1a000754 <Board_SystemInit>:


/* Set up and initialize hardware prior to call to main */
void Board_SystemInit(void)
{
1a000754:	b508      	push	{r3, lr}
    /* Setup system clocking and memory. This is done early to allow the
       application and tools to clear memory and use scatter loading to
       external memory. */
    Board_SetupMuxing();
1a000756:	f7ff ffab 	bl	1a0006b0 <Board_SetupMuxing>
    Board_SetupClocking();
1a00075a:	f7ff ffc5 	bl	1a0006e8 <Board_SetupClocking>
}
1a00075e:	bd08      	pop	{r3, pc}

1a000760 <Board_LED_Init>:
#define GPIO_PORTS_SIZE     (sizeof(GpioPorts) / sizeof(struct gpio_t))


static void Board_LED_Init()
{
   for (uint32_t i = 0; i < GPIO_LEDS_SIZE; ++i) {
1a000760:	2200      	movs	r2, #0
1a000762:	2a05      	cmp	r2, #5
1a000764:	d819      	bhi.n	1a00079a <Board_LED_Init+0x3a>
{
1a000766:	b470      	push	{r4, r5, r6}
      const struct gpio_t *io = &GpioLeds[i];
      Chip_GPIO_SetPinDIROutput(LPC_GPIO_PORT, io->port, io->pin);
1a000768:	490c      	ldr	r1, [pc, #48]	; (1a00079c <Board_LED_Init+0x3c>)
1a00076a:	f811 5012 	ldrb.w	r5, [r1, r2, lsl #1]
1a00076e:	eb01 0142 	add.w	r1, r1, r2, lsl #1
1a000772:	784c      	ldrb	r4, [r1, #1]
 * @param	pin		: GPIO pin to set direction on as output
 * @return	Nothing
 */
STATIC INLINE void Chip_GPIO_SetPinDIROutput(LPC_GPIO_T *pGPIO, uint8_t port, uint8_t pin)
{
	pGPIO->DIR[port] |= 1UL << pin;
1a000774:	4b0a      	ldr	r3, [pc, #40]	; (1a0007a0 <Board_LED_Init+0x40>)
1a000776:	f505 6600 	add.w	r6, r5, #2048	; 0x800
1a00077a:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
1a00077e:	2001      	movs	r0, #1
1a000780:	40a0      	lsls	r0, r4
1a000782:	4301      	orrs	r1, r0
1a000784:	f843 1026 	str.w	r1, [r3, r6, lsl #2]
	pGPIO->B[port][pin] = setting;
1a000788:	eb03 1345 	add.w	r3, r3, r5, lsl #5
1a00078c:	2100      	movs	r1, #0
1a00078e:	5519      	strb	r1, [r3, r4]
   for (uint32_t i = 0; i < GPIO_LEDS_SIZE; ++i) {
1a000790:	3201      	adds	r2, #1
1a000792:	2a05      	cmp	r2, #5
1a000794:	d9e8      	bls.n	1a000768 <Board_LED_Init+0x8>
      Chip_GPIO_SetPinState(LPC_GPIO_PORT, io->port, io->pin, false);
   }
}
1a000796:	bc70      	pop	{r4, r5, r6}
1a000798:	4770      	bx	lr
1a00079a:	4770      	bx	lr
1a00079c:	1a00739c 	.word	0x1a00739c
1a0007a0:	400f4000 	.word	0x400f4000

1a0007a4 <Board_TEC_Init>:


static void Board_TEC_Init()
{
   for (uint32_t i = 0; i < GPIO_BUTTONS_SIZE; ++i) {
1a0007a4:	2300      	movs	r3, #0
1a0007a6:	2b03      	cmp	r3, #3
1a0007a8:	d816      	bhi.n	1a0007d8 <Board_TEC_Init+0x34>
{
1a0007aa:	b430      	push	{r4, r5}
      const struct gpio_t *io = &GpioButtons[i];
      Chip_GPIO_SetPinDIRInput(LPC_GPIO_PORT, io->port, io->pin);
1a0007ac:	490b      	ldr	r1, [pc, #44]	; (1a0007dc <Board_TEC_Init+0x38>)
1a0007ae:	f811 2013 	ldrb.w	r2, [r1, r3, lsl #1]
1a0007b2:	eb01 0143 	add.w	r1, r1, r3, lsl #1
1a0007b6:	784d      	ldrb	r5, [r1, #1]
 * @param	pin		: GPIO pin to set direction on as input
 * @return	Nothing
 */
STATIC INLINE void Chip_GPIO_SetPinDIRInput(LPC_GPIO_T *pGPIO, uint8_t port, uint8_t pin)
{
	pGPIO->DIR[port] &= ~(1UL << pin);
1a0007b8:	4c09      	ldr	r4, [pc, #36]	; (1a0007e0 <Board_TEC_Init+0x3c>)
1a0007ba:	f502 6200 	add.w	r2, r2, #2048	; 0x800
1a0007be:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
1a0007c2:	2001      	movs	r0, #1
1a0007c4:	40a8      	lsls	r0, r5
1a0007c6:	ea21 0100 	bic.w	r1, r1, r0
1a0007ca:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
   for (uint32_t i = 0; i < GPIO_BUTTONS_SIZE; ++i) {
1a0007ce:	3301      	adds	r3, #1
1a0007d0:	2b03      	cmp	r3, #3
1a0007d2:	d9eb      	bls.n	1a0007ac <Board_TEC_Init+0x8>
   }
}
1a0007d4:	bc30      	pop	{r4, r5}
1a0007d6:	4770      	bx	lr
1a0007d8:	4770      	bx	lr
1a0007da:	bf00      	nop
1a0007dc:	1a007394 	.word	0x1a007394
1a0007e0:	400f4000 	.word	0x400f4000

1a0007e4 <Board_GPIO_Init>:


static void Board_GPIO_Init()
{
   for (uint32_t i = 0; i < GPIO_PORTS_SIZE; ++i) {
1a0007e4:	2300      	movs	r3, #0
1a0007e6:	2b08      	cmp	r3, #8
1a0007e8:	d816      	bhi.n	1a000818 <Board_GPIO_Init+0x34>
{
1a0007ea:	b430      	push	{r4, r5}
      const struct gpio_t *io = &GpioPorts[i];
      Chip_GPIO_SetPinDIRInput(LPC_GPIO_PORT, io->port, io->pin);
1a0007ec:	490b      	ldr	r1, [pc, #44]	; (1a00081c <Board_GPIO_Init+0x38>)
1a0007ee:	f811 2013 	ldrb.w	r2, [r1, r3, lsl #1]
1a0007f2:	eb01 0143 	add.w	r1, r1, r3, lsl #1
1a0007f6:	784d      	ldrb	r5, [r1, #1]
1a0007f8:	4c09      	ldr	r4, [pc, #36]	; (1a000820 <Board_GPIO_Init+0x3c>)
1a0007fa:	f502 6200 	add.w	r2, r2, #2048	; 0x800
1a0007fe:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
1a000802:	2001      	movs	r0, #1
1a000804:	40a8      	lsls	r0, r5
1a000806:	ea21 0100 	bic.w	r1, r1, r0
1a00080a:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
   for (uint32_t i = 0; i < GPIO_PORTS_SIZE; ++i) {
1a00080e:	3301      	adds	r3, #1
1a000810:	2b08      	cmp	r3, #8
1a000812:	d9eb      	bls.n	1a0007ec <Board_GPIO_Init+0x8>
   }
}
1a000814:	bc30      	pop	{r4, r5}
1a000816:	4770      	bx	lr
1a000818:	4770      	bx	lr
1a00081a:	bf00      	nop
1a00081c:	1a0073a8 	.word	0x1a0073a8
1a000820:	400f4000 	.word	0x400f4000

1a000824 <Board_ADC_Init>:
   Chip_SSP_Enable(LPC_SSP1);
}


static void Board_ADC_Init()
{
1a000824:	b510      	push	{r4, lr}
1a000826:	b082      	sub	sp, #8
   ADC_CLOCK_SETUP_T cs;

   Chip_ADC_Init(LPC_ADC0, &cs);
1a000828:	4c08      	ldr	r4, [pc, #32]	; (1a00084c <Board_ADC_Init+0x28>)
1a00082a:	4669      	mov	r1, sp
1a00082c:	4620      	mov	r0, r4
1a00082e:	f000 f94d 	bl	1a000acc <Chip_ADC_Init>
   Chip_ADC_SetSampleRate(LPC_ADC0, &cs, BOARD_ADC_SAMPLE_RATE);
1a000832:	4a07      	ldr	r2, [pc, #28]	; (1a000850 <Board_ADC_Init+0x2c>)
1a000834:	4669      	mov	r1, sp
1a000836:	4620      	mov	r0, r4
1a000838:	f000 f968 	bl	1a000b0c <Chip_ADC_SetSampleRate>
   Chip_ADC_SetResolution(LPC_ADC0, &cs, BOARD_ADC_RESOLUTION);
1a00083c:	2200      	movs	r2, #0
1a00083e:	4669      	mov	r1, sp
1a000840:	4620      	mov	r0, r4
1a000842:	f000 f97c 	bl	1a000b3e <Chip_ADC_SetResolution>
}
1a000846:	b002      	add	sp, #8
1a000848:	bd10      	pop	{r4, pc}
1a00084a:	bf00      	nop
1a00084c:	400e3000 	.word	0x400e3000
1a000850:	00061a80 	.word	0x00061a80

1a000854 <Board_SPI_Init>:
{
1a000854:	b510      	push	{r4, lr}
   Chip_SSP_Init(LPC_SSP1);
1a000856:	4c0b      	ldr	r4, [pc, #44]	; (1a000884 <Board_SPI_Init+0x30>)
1a000858:	4620      	mov	r0, r4
1a00085a:	f000 f8b7 	bl	1a0009cc <Chip_SSP_Init>
 *						- SSP_MODE_SLAVE
 * @return	 Nothing
 */
STATIC INLINE void Chip_SSP_Set_Mode(LPC_SSP_T *pSSP, uint32_t mode)
{
	pSSP->CR1 = (pSSP->CR1 & ~(1 << 2)) | mode;
1a00085e:	6863      	ldr	r3, [r4, #4]
1a000860:	f023 0304 	bic.w	r3, r3, #4
1a000864:	6063      	str	r3, [r4, #4]
	pSSP->CR0 = (pSSP->CR0 & ~0xFF) | bits | frameFormat | clockMode;
1a000866:	6823      	ldr	r3, [r4, #0]
1a000868:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
1a00086c:	f043 0307 	orr.w	r3, r3, #7
1a000870:	6023      	str	r3, [r4, #0]
   Chip_SSP_SetBitRate(LPC_SSP1, BOARD_SPI_SPEED);
1a000872:	4905      	ldr	r1, [pc, #20]	; (1a000888 <Board_SPI_Init+0x34>)
1a000874:	4620      	mov	r0, r4
1a000876:	f000 f88a 	bl	1a00098e <Chip_SSP_SetBitRate>
	pSSP->CR1 |= SSP_CR1_SSP_EN;
1a00087a:	6863      	ldr	r3, [r4, #4]
1a00087c:	f043 0302 	orr.w	r3, r3, #2
1a000880:	6063      	str	r3, [r4, #4]
}
1a000882:	bd10      	pop	{r4, pc}
1a000884:	400c5000 	.word	0x400c5000
1a000888:	000186a0 	.word	0x000186a0

1a00088c <Board_I2C_Init>:
{
1a00088c:	b508      	push	{r3, lr}
   Chip_I2C_Init(I2C0);
1a00088e:	2000      	movs	r0, #0
1a000890:	f000 f8c8 	bl	1a000a24 <Chip_I2C_Init>
	LPC_SCU->SFSI2C0 = I2C0Mode;
1a000894:	4b04      	ldr	r3, [pc, #16]	; (1a0008a8 <Board_I2C_Init+0x1c>)
1a000896:	f640 0208 	movw	r2, #2056	; 0x808
1a00089a:	f8c3 2c84 	str.w	r2, [r3, #3204]	; 0xc84
   Chip_I2C_SetClockRate(I2C0, BOARD_I2C_SPEED);
1a00089e:	4903      	ldr	r1, [pc, #12]	; (1a0008ac <Board_I2C_Init+0x20>)
1a0008a0:	2000      	movs	r0, #0
1a0008a2:	f000 f8d1 	bl	1a000a48 <Chip_I2C_SetClockRate>
}
1a0008a6:	bd08      	pop	{r3, pc}
1a0008a8:	40086000 	.word	0x40086000
1a0008ac:	000f4240 	.word	0x000f4240

1a0008b0 <Board_Debug_Init>:


void Board_Debug_Init(void)
{
1a0008b0:	b510      	push	{r4, lr}
   Chip_UART_Init(DEBUG_UART);
1a0008b2:	4c07      	ldr	r4, [pc, #28]	; (1a0008d0 <Board_Debug_Init+0x20>)
1a0008b4:	4620      	mov	r0, r4
1a0008b6:	f000 fcdb 	bl	1a001270 <Chip_UART_Init>
   Chip_UART_SetBaudFDR(DEBUG_UART, DEBUG_UART_BAUD_RATE);
1a0008ba:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
1a0008be:	4620      	mov	r0, r4
1a0008c0:	f000 fd00 	bl	1a0012c4 <Chip_UART_SetBaudFDR>
 *			stop bit, and even (enabled) parity would be
 *			(UART_LCR_WLEN8 | UART_LCR_SBS_1BIT | UART_LCR_PARITY_EN | UART_LCR_PARITY_EVEN)
 */
STATIC INLINE void Chip_UART_ConfigData(LPC_USART_T *pUART, uint32_t config)
{
	pUART->LCR = config;
1a0008c4:	2303      	movs	r3, #3
1a0008c6:	60e3      	str	r3, [r4, #12]
    pUART->TER2 = UART_TER2_TXEN;
1a0008c8:	2301      	movs	r3, #1
1a0008ca:	65e3      	str	r3, [r4, #92]	; 0x5c
   Chip_UART_ConfigData(DEBUG_UART, DEBUG_UART_CONFIG);
   Chip_UART_TXEnable(DEBUG_UART);
}
1a0008cc:	bd10      	pop	{r4, pc}
1a0008ce:	bf00      	nop
1a0008d0:	400c1000 	.word	0x400c1000

1a0008d4 <Board_UARTPutChar>:
 * @note	Mask bits of the returned status value with UART_LSR_*
 *			definitions for specific statuses.
 */
STATIC INLINE uint32_t Chip_UART_ReadLineStatus(LPC_USART_T *pUART)
{
	return pUART->LSR;
1a0008d4:	4b03      	ldr	r3, [pc, #12]	; (1a0008e4 <Board_UARTPutChar+0x10>)
1a0008d6:	695b      	ldr	r3, [r3, #20]


void Board_UARTPutChar(char ch)
{
   while ( !(Chip_UART_ReadLineStatus(DEBUG_UART) & UART_LSR_THRE));
1a0008d8:	f013 0f20 	tst.w	r3, #32
1a0008dc:	d0fa      	beq.n	1a0008d4 <Board_UARTPutChar>
	pUART->THR = (uint32_t) data;
1a0008de:	4b01      	ldr	r3, [pc, #4]	; (1a0008e4 <Board_UARTPutChar+0x10>)
1a0008e0:	6018      	str	r0, [r3, #0]
   Chip_UART_SendByte(DEBUG_UART, (uint8_t) ch);
}
1a0008e2:	4770      	bx	lr
1a0008e4:	400c1000 	.word	0x400c1000

1a0008e8 <Board_UARTGetChar>:
	return pUART->LSR;
1a0008e8:	4b05      	ldr	r3, [pc, #20]	; (1a000900 <Board_UARTGetChar+0x18>)
1a0008ea:	695b      	ldr	r3, [r3, #20]


int Board_UARTGetChar(void)
{
   if (Chip_UART_ReadLineStatus(DEBUG_UART) & UART_LSR_RDR) {
1a0008ec:	f013 0f01 	tst.w	r3, #1
1a0008f0:	d003      	beq.n	1a0008fa <Board_UARTGetChar+0x12>
	return (uint8_t) (pUART->RBR & UART_RBR_MASKBIT);
1a0008f2:	4b03      	ldr	r3, [pc, #12]	; (1a000900 <Board_UARTGetChar+0x18>)
1a0008f4:	6818      	ldr	r0, [r3, #0]
      return (int) Chip_UART_ReadByte(DEBUG_UART);
1a0008f6:	b2c0      	uxtb	r0, r0
1a0008f8:	4770      	bx	lr
   }
   return EOF;
1a0008fa:	f04f 30ff 	mov.w	r0, #4294967295
}
1a0008fe:	4770      	bx	lr
1a000900:	400c1000 	.word	0x400c1000

1a000904 <Board_Init>:
   Board_LED_Set(LEDNumber, !Board_LED_Test(LEDNumber));
}


void Board_Init(void)
{
1a000904:	b508      	push	{r3, lr}
   DEBUGINIT();
1a000906:	f7ff ffd3 	bl	1a0008b0 <Board_Debug_Init>
   Chip_GPIO_Init (LPC_GPIO_PORT);
1a00090a:	4809      	ldr	r0, [pc, #36]	; (1a000930 <Board_Init+0x2c>)
1a00090c:	f000 f8b8 	bl	1a000a80 <Chip_GPIO_Init>

   Board_GPIO_Init();
1a000910:	f7ff ff68 	bl	1a0007e4 <Board_GPIO_Init>
   Board_ADC_Init();
1a000914:	f7ff ff86 	bl	1a000824 <Board_ADC_Init>
   Board_SPI_Init();
1a000918:	f7ff ff9c 	bl	1a000854 <Board_SPI_Init>
   Board_I2C_Init();
1a00091c:	f7ff ffb6 	bl	1a00088c <Board_I2C_Init>

   Board_LED_Init();
1a000920:	f7ff ff1e 	bl	1a000760 <Board_LED_Init>
   Board_TEC_Init();
1a000924:	f7ff ff3e 	bl	1a0007a4 <Board_TEC_Init>
#ifdef USE_RMII
   Chip_ENET_RMIIEnable(LPC_ETHERNET);
#endif

   // Read clock settings and update SystemCoreClock variable
   SystemCoreClockUpdate(); // @Eric
1a000928:	f000 f9bc 	bl	1a000ca4 <SystemCoreClockUpdate>
}
1a00092c:	bd08      	pop	{r3, pc}
1a00092e:	bf00      	nop
1a000930:	400f4000 	.word	0x400f4000

1a000934 <__stdio_putchar>:
   curADCChannel = 0xFF;
   return data;
}

void __stdio_putchar(int c)
{
1a000934:	b508      	push	{r3, lr}
   Board_UARTPutChar(c);
1a000936:	b2c0      	uxtb	r0, r0
1a000938:	f7ff ffcc 	bl	1a0008d4 <Board_UARTPutChar>
}
1a00093c:	bd08      	pop	{r3, pc}

1a00093e <__stdio_getchar>:

int __stdio_getchar()
{
1a00093e:	b508      	push	{r3, lr}
   return Board_UARTGetChar();;
1a000940:	f7ff ffd2 	bl	1a0008e8 <Board_UARTGetChar>
}
1a000944:	bd08      	pop	{r3, pc}

1a000946 <__stdio_init>:

void __stdio_init()
{
1a000946:	b508      	push	{r3, lr}
   Board_Debug_Init();
1a000948:	f7ff ffb2 	bl	1a0008b0 <Board_Debug_Init>
1a00094c:	bd08      	pop	{r3, pc}
1a00094e:	Address 0x1a00094e is out of bounds.


1a000950 <Chip_SSP_GetClockIndex>:
/* Returns clock index for the register interface */
STATIC CHIP_CCU_CLK_T Chip_SSP_GetClockIndex(LPC_SSP_T *pSSP)
{
	CHIP_CCU_CLK_T clkSSP;

	if (pSSP == LPC_SSP1) {
1a000950:	4b03      	ldr	r3, [pc, #12]	; (1a000960 <Chip_SSP_GetClockIndex+0x10>)
1a000952:	4298      	cmp	r0, r3
1a000954:	d001      	beq.n	1a00095a <Chip_SSP_GetClockIndex+0xa>
		clkSSP = CLK_MX_SSP1;
	}
	else {
		clkSSP = CLK_MX_SSP0;
1a000956:	2083      	movs	r0, #131	; 0x83
	}

	return clkSSP;
}
1a000958:	4770      	bx	lr
		clkSSP = CLK_MX_SSP1;
1a00095a:	20a5      	movs	r0, #165	; 0xa5
1a00095c:	4770      	bx	lr
1a00095e:	bf00      	nop
1a000960:	400c5000 	.word	0x400c5000

1a000964 <Chip_SSP_GetPeriphClockIndex>:
/* Returns clock index for the peripheral block */
STATIC CHIP_CCU_CLK_T Chip_SSP_GetPeriphClockIndex(LPC_SSP_T *pSSP)
{
	CHIP_CCU_CLK_T clkSSP;

	if (pSSP == LPC_SSP1) {
1a000964:	4b04      	ldr	r3, [pc, #16]	; (1a000978 <Chip_SSP_GetPeriphClockIndex+0x14>)
1a000966:	4298      	cmp	r0, r3
1a000968:	d002      	beq.n	1a000970 <Chip_SSP_GetPeriphClockIndex+0xc>
		clkSSP = CLK_APB2_SSP1;
	}
	else {
		clkSSP = CLK_APB0_SSP0;
1a00096a:	f240 2002 	movw	r0, #514	; 0x202
	}

	return clkSSP;
}
1a00096e:	4770      	bx	lr
		clkSSP = CLK_APB2_SSP1;
1a000970:	f44f 70f1 	mov.w	r0, #482	; 0x1e2
1a000974:	4770      	bx	lr
1a000976:	bf00      	nop
1a000978:	400c5000 	.word	0x400c5000

1a00097c <Chip_SSP_SetClockRate>:

/*Set up output clocks per bit for SSP bus*/
void Chip_SSP_SetClockRate(LPC_SSP_T *pSSP, uint32_t clk_rate, uint32_t prescale)
{
	uint32_t temp;
	temp = pSSP->CR0 & (~(SSP_CR0_SCR(0xFF)));
1a00097c:	6803      	ldr	r3, [r0, #0]
1a00097e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
	pSSP->CR0 = temp | (SSP_CR0_SCR(clk_rate));
1a000982:	0209      	lsls	r1, r1, #8
1a000984:	b289      	uxth	r1, r1
1a000986:	4319      	orrs	r1, r3
1a000988:	6001      	str	r1, [r0, #0]
	pSSP->CPSR = prescale;
1a00098a:	6102      	str	r2, [r0, #16]
}
1a00098c:	4770      	bx	lr

1a00098e <Chip_SSP_SetBitRate>:
	}
}

/* Set the clock frequency for SSP interface */
void Chip_SSP_SetBitRate(LPC_SSP_T *pSSP, uint32_t bitRate)
{
1a00098e:	b570      	push	{r4, r5, r6, lr}
1a000990:	4606      	mov	r6, r0
1a000992:	460d      	mov	r5, r1
	uint32_t ssp_clk, cr0_div, cmp_clk, prescale;

	ssp_clk = Chip_Clock_GetRate(Chip_SSP_GetPeriphClockIndex(pSSP));
1a000994:	f7ff ffe6 	bl	1a000964 <Chip_SSP_GetPeriphClockIndex>
1a000998:	f000 fc2e 	bl	1a0011f8 <Chip_Clock_GetRate>

	cr0_div = 0;
	cmp_clk = 0xFFFFFFFF;
	prescale = 2;
1a00099c:	2202      	movs	r2, #2
	cmp_clk = 0xFFFFFFFF;
1a00099e:	f04f 33ff 	mov.w	r3, #4294967295
	cr0_div = 0;
1a0009a2:	2100      	movs	r1, #0

	while (cmp_clk > bitRate) {
1a0009a4:	e000      	b.n	1a0009a8 <Chip_SSP_SetBitRate+0x1a>
		cmp_clk = ssp_clk / ((cr0_div + 1) * prescale);
		if (cmp_clk > bitRate) {
			cr0_div++;
1a0009a6:	4621      	mov	r1, r4
	while (cmp_clk > bitRate) {
1a0009a8:	42ab      	cmp	r3, r5
1a0009aa:	d90b      	bls.n	1a0009c4 <Chip_SSP_SetBitRate+0x36>
		cmp_clk = ssp_clk / ((cr0_div + 1) * prescale);
1a0009ac:	1c4c      	adds	r4, r1, #1
1a0009ae:	fb02 f304 	mul.w	r3, r2, r4
1a0009b2:	fbb0 f3f3 	udiv	r3, r0, r3
		if (cmp_clk > bitRate) {
1a0009b6:	429d      	cmp	r5, r3
1a0009b8:	d2f6      	bcs.n	1a0009a8 <Chip_SSP_SetBitRate+0x1a>
			if (cr0_div > 0xFF) {
1a0009ba:	2cff      	cmp	r4, #255	; 0xff
1a0009bc:	d9f3      	bls.n	1a0009a6 <Chip_SSP_SetBitRate+0x18>
				cr0_div = 0;
				prescale += 2;
1a0009be:	3202      	adds	r2, #2
				cr0_div = 0;
1a0009c0:	2100      	movs	r1, #0
1a0009c2:	e7f1      	b.n	1a0009a8 <Chip_SSP_SetBitRate+0x1a>
			}
		}
	}

	Chip_SSP_SetClockRate(pSSP, cr0_div, prescale);
1a0009c4:	4630      	mov	r0, r6
1a0009c6:	f7ff ffd9 	bl	1a00097c <Chip_SSP_SetClockRate>
}
1a0009ca:	bd70      	pop	{r4, r5, r6, pc}

1a0009cc <Chip_SSP_Init>:

/* Initialize the SSP */
void Chip_SSP_Init(LPC_SSP_T *pSSP)
{
1a0009cc:	b510      	push	{r4, lr}
1a0009ce:	4604      	mov	r4, r0
	Chip_Clock_Enable(Chip_SSP_GetClockIndex(pSSP));
1a0009d0:	f7ff ffbe 	bl	1a000950 <Chip_SSP_GetClockIndex>
1a0009d4:	f000 fbf6 	bl	1a0011c4 <Chip_Clock_Enable>
	Chip_Clock_Enable(Chip_SSP_GetPeriphClockIndex(pSSP));
1a0009d8:	4620      	mov	r0, r4
1a0009da:	f7ff ffc3 	bl	1a000964 <Chip_SSP_GetPeriphClockIndex>
1a0009de:	f000 fbf1 	bl	1a0011c4 <Chip_Clock_Enable>
	pSSP->CR1 = (pSSP->CR1 & ~(1 << 2)) | mode;
1a0009e2:	6863      	ldr	r3, [r4, #4]
1a0009e4:	f023 0304 	bic.w	r3, r3, #4
1a0009e8:	6063      	str	r3, [r4, #4]
	pSSP->CR0 = (pSSP->CR0 & ~0xFF) | bits | frameFormat | clockMode;
1a0009ea:	6823      	ldr	r3, [r4, #0]
1a0009ec:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
1a0009f0:	f043 0307 	orr.w	r3, r3, #7
1a0009f4:	6023      	str	r3, [r4, #0]

	Chip_SSP_Set_Mode(pSSP, SSP_MODE_MASTER);
	Chip_SSP_SetFormat(pSSP, SSP_BITS_8, SSP_FRAMEFORMAT_SPI, SSP_CLOCK_CPHA0_CPOL0);
	Chip_SSP_SetBitRate(pSSP, 100000);
1a0009f6:	4902      	ldr	r1, [pc, #8]	; (1a000a00 <Chip_SSP_Init+0x34>)
1a0009f8:	4620      	mov	r0, r4
1a0009fa:	f7ff ffc8 	bl	1a00098e <Chip_SSP_SetBitRate>
}
1a0009fe:	bd10      	pop	{r4, pc}
1a000a00:	000186a0 	.word	0x000186a0

1a000a04 <Chip_I2C_EventHandler>:
{
	struct i2c_interface *iic = &i2c[id];
	volatile I2C_STATUS_T *stat;

	/* Only WAIT event needs to be handled */
	if (event != I2C_EVENT_WAIT) {
1a000a04:	2901      	cmp	r1, #1
1a000a06:	d109      	bne.n	1a000a1c <Chip_I2C_EventHandler+0x18>
		return;
	}

	stat = &iic->mXfer->status;
1a000a08:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
1a000a0c:	0082      	lsls	r2, r0, #2
1a000a0e:	4b04      	ldr	r3, [pc, #16]	; (1a000a20 <Chip_I2C_EventHandler+0x1c>)
1a000a10:	4413      	add	r3, r2
1a000a12:	691a      	ldr	r2, [r3, #16]
	/* Wait for the status to change */
	while (*stat == I2C_STATUS_BUSY) {}
1a000a14:	7d13      	ldrb	r3, [r2, #20]
1a000a16:	b2db      	uxtb	r3, r3
1a000a18:	2b04      	cmp	r3, #4
1a000a1a:	d0fb      	beq.n	1a000a14 <Chip_I2C_EventHandler+0x10>
}
1a000a1c:	4770      	bx	lr
1a000a1e:	bf00      	nop
1a000a20:	10000000 	.word	0x10000000

1a000a24 <Chip_I2C_Init>:
	}
}

/* Initializes the LPC_I2C peripheral with specified parameter */
void Chip_I2C_Init(I2C_ID_T id)
{
1a000a24:	b570      	push	{r4, r5, r6, lr}
1a000a26:	4605      	mov	r5, r0
	Chip_Clock_Enable(i2c[id].clk);
1a000a28:	4e06      	ldr	r6, [pc, #24]	; (1a000a44 <Chip_I2C_Init+0x20>)
1a000a2a:	00c4      	lsls	r4, r0, #3
1a000a2c:	1a22      	subs	r2, r4, r0
1a000a2e:	0093      	lsls	r3, r2, #2
1a000a30:	4433      	add	r3, r6
1a000a32:	8898      	ldrh	r0, [r3, #4]
1a000a34:	f000 fbc6 	bl	1a0011c4 <Chip_Clock_Enable>
	enableClk(id);

	/* Set I2C operation to default */
	LPC_I2Cx(id)->CONCLR = (I2C_CON_AA | I2C_CON_SI | I2C_CON_STA | I2C_CON_I2EN);
1a000a38:	1b64      	subs	r4, r4, r5
1a000a3a:	00a3      	lsls	r3, r4, #2
1a000a3c:	58f3      	ldr	r3, [r6, r3]
1a000a3e:	226c      	movs	r2, #108	; 0x6c
1a000a40:	619a      	str	r2, [r3, #24]
}
1a000a42:	bd70      	pop	{r4, r5, r6, pc}
1a000a44:	10000000 	.word	0x10000000

1a000a48 <Chip_I2C_SetClockRate>:
	disableClk(id);
}

/* Set up clock rate for LPC_I2C peripheral */
void Chip_I2C_SetClockRate(I2C_ID_T id, uint32_t clockrate)
{
1a000a48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a000a4c:	460c      	mov	r4, r1
	return Chip_Clock_GetRate(i2c[id].clk);
1a000a4e:	4e0b      	ldr	r6, [pc, #44]	; (1a000a7c <Chip_I2C_SetClockRate+0x34>)
1a000a50:	00c5      	lsls	r5, r0, #3
1a000a52:	1a2b      	subs	r3, r5, r0
1a000a54:	ea4f 0883 	mov.w	r8, r3, lsl #2
1a000a58:	eb06 0308 	add.w	r3, r6, r8
1a000a5c:	8898      	ldrh	r0, [r3, #4]
1a000a5e:	f000 fbcb 	bl	1a0011f8 <Chip_Clock_GetRate>
	uint32_t SCLValue;

	SCLValue = (getClkRate(id) / clockrate);
1a000a62:	fbb0 f0f4 	udiv	r0, r0, r4
	LPC_I2Cx(id)->SCLH = (uint32_t) (SCLValue >> 1);
1a000a66:	f856 3008 	ldr.w	r3, [r6, r8]
1a000a6a:	0842      	lsrs	r2, r0, #1
1a000a6c:	611a      	str	r2, [r3, #16]
	LPC_I2Cx(id)->SCLL = (uint32_t) (SCLValue - LPC_I2Cx(id)->SCLH);
1a000a6e:	f856 3008 	ldr.w	r3, [r6, r8]
1a000a72:	691a      	ldr	r2, [r3, #16]
1a000a74:	1a80      	subs	r0, r0, r2
1a000a76:	6158      	str	r0, [r3, #20]
}
1a000a78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a000a7c:	10000000 	.word	0x10000000

1a000a80 <Chip_GPIO_Init>:
 ****************************************************************************/

/* Initialize GPIO block */
void Chip_GPIO_Init(LPC_GPIO_T *pGPIO)
{
}
1a000a80:	4770      	bx	lr
1a000a82:	Address 0x1a000a82 is out of bounds.


1a000a84 <Chip_ADC_GetClockIndex>:
/* Returns clock index for the peripheral block */
STATIC CHIP_CCU_CLK_T Chip_ADC_GetClockIndex(LPC_ADC_T *pADC)
{
	CHIP_CCU_CLK_T clkADC;

	if (pADC == LPC_ADC1) {
1a000a84:	4b03      	ldr	r3, [pc, #12]	; (1a000a94 <Chip_ADC_GetClockIndex+0x10>)
1a000a86:	4298      	cmp	r0, r3
1a000a88:	d001      	beq.n	1a000a8e <Chip_ADC_GetClockIndex+0xa>
		clkADC = CLK_APB3_ADC1;
	}
	else {
		clkADC = CLK_APB3_ADC0;
1a000a8a:	2003      	movs	r0, #3
	}

	return clkADC;
}
1a000a8c:	4770      	bx	lr
		clkADC = CLK_APB3_ADC1;
1a000a8e:	2004      	movs	r0, #4
1a000a90:	4770      	bx	lr
1a000a92:	bf00      	nop
1a000a94:	400e4000 	.word	0x400e4000

1a000a98 <getClkDiv>:

/* Get divider value */
STATIC uint8_t getClkDiv(LPC_ADC_T *pADC, bool burstMode, uint32_t adcRate, uint8_t clks)
{
1a000a98:	b570      	push	{r4, r5, r6, lr}
1a000a9a:	460d      	mov	r5, r1
1a000a9c:	4614      	mov	r4, r2
1a000a9e:	461e      	mov	r6, r3
	   A/D converter, which should be less than or equal to 4.5MHz.
	   A fully conversion requires (bits_accuracy+1) of these clocks.
	   ADC Clock = PCLK_ADC0 / (CLKDIV + 1);
	   ADC rate = ADC clock / (the number of clocks required for each conversion);
	 */
	adcBlockFreq = Chip_Clock_GetRate(Chip_ADC_GetClockIndex(pADC));
1a000aa0:	f7ff fff0 	bl	1a000a84 <Chip_ADC_GetClockIndex>
1a000aa4:	f000 fba8 	bl	1a0011f8 <Chip_Clock_GetRate>
	if (burstMode) {
1a000aa8:	b155      	cbz	r5, 1a000ac0 <getClkDiv+0x28>
		fullAdcRate = adcRate * clks;
1a000aaa:	fb04 f406 	mul.w	r4, r4, r6
	else {
		fullAdcRate = adcRate * getFullConvClk();
	}

	/* Get the round value by fomular: (2*A + B)/(2*B) */
	div = ((adcBlockFreq * 2 + fullAdcRate) / (fullAdcRate * 2)) - 1;
1a000aae:	eb04 0040 	add.w	r0, r4, r0, lsl #1
1a000ab2:	0064      	lsls	r4, r4, #1
1a000ab4:	fbb0 f0f4 	udiv	r0, r0, r4
1a000ab8:	b2c0      	uxtb	r0, r0
1a000aba:	3801      	subs	r0, #1
	return div;
}
1a000abc:	b2c0      	uxtb	r0, r0
1a000abe:	bd70      	pop	{r4, r5, r6, pc}
		fullAdcRate = adcRate * getFullConvClk();
1a000ac0:	eb04 0384 	add.w	r3, r4, r4, lsl #2
1a000ac4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
1a000ac8:	e7f1      	b.n	1a000aae <getClkDiv+0x16>
1a000aca:	Address 0x1a000aca is out of bounds.


1a000acc <Chip_ADC_Init>:
 * Public functions
 ****************************************************************************/

/* Initialize the ADC peripheral and the ADC setup structure to default value */
void Chip_ADC_Init(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup)
{
1a000acc:	b538      	push	{r3, r4, r5, lr}
1a000ace:	4605      	mov	r5, r0
1a000ad0:	460c      	mov	r4, r1
	uint8_t div;
	uint32_t cr = 0;
	uint32_t clk;

	Chip_Clock_EnableOpts(Chip_ADC_GetClockIndex(pADC), true, true, 1);
1a000ad2:	f7ff ffd7 	bl	1a000a84 <Chip_ADC_GetClockIndex>
1a000ad6:	2301      	movs	r3, #1
1a000ad8:	461a      	mov	r2, r3
1a000ada:	4619      	mov	r1, r3
1a000adc:	f000 fb54 	bl	1a001188 <Chip_Clock_EnableOpts>

	pADC->INTEN = 0;		/* Disable all interrupts */
1a000ae0:	2100      	movs	r1, #0
1a000ae2:	60e9      	str	r1, [r5, #12]

	cr |= ADC_CR_PDN;
	ADCSetup->adcRate = ADC_MAX_SAMPLE_RATE;
1a000ae4:	4a08      	ldr	r2, [pc, #32]	; (1a000b08 <Chip_ADC_Init+0x3c>)
1a000ae6:	6022      	str	r2, [r4, #0]
	ADCSetup->bitsAccuracy = ADC_10BITS;
1a000ae8:	7121      	strb	r1, [r4, #4]
	clk = 11;
	ADCSetup->burstMode = false;
1a000aea:	7161      	strb	r1, [r4, #5]
	div = getClkDiv(pADC, false, ADCSetup->adcRate, clk);
1a000aec:	230b      	movs	r3, #11
1a000aee:	4628      	mov	r0, r5
1a000af0:	f7ff ffd2 	bl	1a000a98 <getClkDiv>
	cr |= ADC_CR_CLKDIV(div);
1a000af4:	0200      	lsls	r0, r0, #8
1a000af6:	f440 1300 	orr.w	r3, r0, #2097152	; 0x200000
	cr |= ADC_CR_BITACC(ADCSetup->bitsAccuracy);
1a000afa:	7920      	ldrb	r0, [r4, #4]
1a000afc:	0440      	lsls	r0, r0, #17
1a000afe:	f400 2060 	and.w	r0, r0, #917504	; 0xe0000
1a000b02:	4318      	orrs	r0, r3
	pADC->CR = cr;
1a000b04:	6028      	str	r0, [r5, #0]
}
1a000b06:	bd38      	pop	{r3, r4, r5, pc}
1a000b08:	00061a80 	.word	0x00061a80

1a000b0c <Chip_ADC_SetSampleRate>:
	setStartMode(pADC, (uint8_t) mode);
}

/* Set the ADC Sample rate */
void Chip_ADC_SetSampleRate(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup, uint32_t rate)
{
1a000b0c:	b570      	push	{r4, r5, r6, lr}
1a000b0e:	4605      	mov	r5, r0
1a000b10:	460e      	mov	r6, r1
	uint8_t div;
	uint32_t cr;

	cr = pADC->CR & (~ADC_SAMPLE_RATE_CONFIG_MASK);
1a000b12:	6804      	ldr	r4, [r0, #0]
1a000b14:	f424 246f 	bic.w	r4, r4, #978944	; 0xef000
1a000b18:	f424 6470 	bic.w	r4, r4, #3840	; 0xf00
	ADCSetup->adcRate = rate;
1a000b1c:	600a      	str	r2, [r1, #0]
	div = getClkDiv(pADC, ADCSetup->burstMode, rate, (11 - ADCSetup->bitsAccuracy));
1a000b1e:	790b      	ldrb	r3, [r1, #4]
1a000b20:	f1c3 030b 	rsb	r3, r3, #11
1a000b24:	b2db      	uxtb	r3, r3
1a000b26:	7949      	ldrb	r1, [r1, #5]
1a000b28:	f7ff ffb6 	bl	1a000a98 <getClkDiv>
	cr |= ADC_CR_CLKDIV(div);
1a000b2c:	ea44 2000 	orr.w	r0, r4, r0, lsl #8
	cr |= ADC_CR_BITACC(ADCSetup->bitsAccuracy);
1a000b30:	7933      	ldrb	r3, [r6, #4]
1a000b32:	045b      	lsls	r3, r3, #17
1a000b34:	f403 2360 	and.w	r3, r3, #917504	; 0xe0000
1a000b38:	4303      	orrs	r3, r0
	pADC->CR = cr;
1a000b3a:	602b      	str	r3, [r5, #0]
}
1a000b3c:	bd70      	pop	{r4, r5, r6, pc}

1a000b3e <Chip_ADC_SetResolution>:

/* Set the ADC accuracy bits */
void Chip_ADC_SetResolution(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup, ADC_RESOLUTION_T resolution)
{
1a000b3e:	b508      	push	{r3, lr}
	ADCSetup->bitsAccuracy = resolution;
1a000b40:	710a      	strb	r2, [r1, #4]
	Chip_ADC_SetSampleRate(pADC, ADCSetup, ADCSetup->adcRate);
1a000b42:	680a      	ldr	r2, [r1, #0]
1a000b44:	f7ff ffe2 	bl	1a000b0c <Chip_ADC_SetSampleRate>
}
1a000b48:	bd08      	pop	{r3, pc}
1a000b4a:	Address 0x1a000b4a is out of bounds.


1a000b4c <Chip_SetupCoreClock>:
/*****************************************************************************
 * Public functions
 ****************************************************************************/
/* Setup Chip Core clock */
void Chip_SetupCoreClock(CHIP_CGU_CLKIN_T clkin, uint32_t core_freq, bool setbase)
{
1a000b4c:	b570      	push	{r4, r5, r6, lr}
1a000b4e:	b08a      	sub	sp, #40	; 0x28
1a000b50:	4605      	mov	r5, r0
1a000b52:	460e      	mov	r6, r1
1a000b54:	4614      	mov	r4, r2
	int i;
	volatile uint32_t delay = 50000; // FIXME: original was 500, fix for horrible crystals. @Eric
1a000b56:	f24c 3350 	movw	r3, #50000	; 0xc350
1a000b5a:	9309      	str	r3, [sp, #36]	; 0x24
	uint32_t direct = 0, pdivide = 0;
	PLL_PARAM_T ppll;

	if (clkin == CLKIN_CRYSTAL) {
1a000b5c:	2806      	cmp	r0, #6
1a000b5e:	d018      	beq.n	1a000b92 <Chip_SetupCoreClock+0x46>
		/* Switch main system clocking to crystal */
		Chip_Clock_EnableCrystal();
	}
	Chip_Clock_SetBaseClock(CLK_BASE_MX, clkin, true, false);
1a000b60:	2300      	movs	r3, #0
1a000b62:	2201      	movs	r2, #1
1a000b64:	4629      	mov	r1, r5
1a000b66:	2004      	movs	r0, #4
1a000b68:	f000 fac8 	bl	1a0010fc <Chip_Clock_SetBaseClock>
 * Saves power if the main PLL is not needed.
 */
__STATIC_INLINE void Chip_Clock_DisableMainPLL(void)
{
	/* power down main PLL */
	LPC_CGU->PLL1_CTRL |= 1;
1a000b6c:	4a4a      	ldr	r2, [pc, #296]	; (1a000c98 <Chip_SetupCoreClock+0x14c>)
1a000b6e:	6c53      	ldr	r3, [r2, #68]	; 0x44
1a000b70:	f043 0301 	orr.w	r3, r3, #1
1a000b74:	6453      	str	r3, [r2, #68]	; 0x44
	Chip_Clock_DisableMainPLL(); /* Disable PLL */

	/* Calculate the PLL Parameters */
	ppll.srcin = clkin;
1a000b76:	f88d 5008 	strb.w	r5, [sp, #8]
	Chip_Clock_CalcMainPLLValue(core_freq, &ppll);
1a000b7a:	a901      	add	r1, sp, #4
1a000b7c:	4630      	mov	r0, r6
1a000b7e:	f000 fa35 	bl	1a000fec <Chip_Clock_CalcMainPLLValue>

	if (core_freq > 110000000UL) {
1a000b82:	4b46      	ldr	r3, [pc, #280]	; (1a000c9c <Chip_SetupCoreClock+0x150>)
1a000b84:	429e      	cmp	r6, r3
1a000b86:	d916      	bls.n	1a000bb6 <Chip_SetupCoreClock+0x6a>
		if (ppll.ctrl & (1 << 6)) {
1a000b88:	9b01      	ldr	r3, [sp, #4]
1a000b8a:	f013 0f40 	tst.w	r3, #64	; 0x40
1a000b8e:	d003      	beq.n	1a000b98 <Chip_SetupCoreClock+0x4c>
			while(1);		// to run in integer mode above 110 MHz, you need to use IDIV clock to boot strap CPU to that freq
1a000b90:	e7fe      	b.n	1a000b90 <Chip_SetupCoreClock+0x44>
		Chip_Clock_EnableCrystal();
1a000b92:	f000 f98d 	bl	1a000eb0 <Chip_Clock_EnableCrystal>
1a000b96:	e7e3      	b.n	1a000b60 <Chip_SetupCoreClock+0x14>
		} else if (ppll.ctrl & (1 << 7)){
1a000b98:	f013 0f80 	tst.w	r3, #128	; 0x80
1a000b9c:	d005      	beq.n	1a000baa <Chip_SetupCoreClock+0x5e>
			direct = 1;
			ppll.ctrl &= ~(1 << 7);
1a000b9e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a000ba2:	9301      	str	r3, [sp, #4]
	uint32_t direct = 0, pdivide = 0;
1a000ba4:	2500      	movs	r5, #0
			direct = 1;
1a000ba6:	2601      	movs	r6, #1
1a000ba8:	e007      	b.n	1a000bba <Chip_SetupCoreClock+0x6e>
		} else {
			pdivide = 1;
			ppll.psel++;
1a000baa:	9b04      	ldr	r3, [sp, #16]
1a000bac:	3301      	adds	r3, #1
1a000bae:	9304      	str	r3, [sp, #16]
			pdivide = 1;
1a000bb0:	2501      	movs	r5, #1
	uint32_t direct = 0, pdivide = 0;
1a000bb2:	2600      	movs	r6, #0
1a000bb4:	e001      	b.n	1a000bba <Chip_SetupCoreClock+0x6e>
1a000bb6:	2500      	movs	r5, #0
1a000bb8:	462e      	mov	r6, r5
 * Make sure the main PLL is enabled.
 */
__STATIC_INLINE void Chip_Clock_SetupMainPLL(const PLL_PARAM_T *ppll)
{
	/* power up main PLL */
    LPC_CGU->PLL1_CTRL = ppll->ctrl | ((uint32_t) ppll->srcin << 24) | (ppll->msel << 16) | (ppll->nsel << 12) | (ppll->psel << 8) | ( 1 << 11);	
1a000bba:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a000bbe:	9b01      	ldr	r3, [sp, #4]
1a000bc0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a000bc4:	9a05      	ldr	r2, [sp, #20]
1a000bc6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a000bca:	9a03      	ldr	r2, [sp, #12]
1a000bcc:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a000bd0:	9a04      	ldr	r2, [sp, #16]
1a000bd2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a000bd6:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a000bda:	4a2f      	ldr	r2, [pc, #188]	; (1a000c98 <Chip_SetupCoreClock+0x14c>)
1a000bdc:	6453      	str	r3, [r2, #68]	; 0x44
 * @note	The main PLL should be locked prior to using it as a clock input for a base clock.
 */
__STATIC_INLINE int Chip_Clock_MainPLLLocked(void)
{
	/* Return true if locked */
	return (LPC_CGU->PLL1_STAT & 1) != 0;
1a000bde:	4b2e      	ldr	r3, [pc, #184]	; (1a000c98 <Chip_SetupCoreClock+0x14c>)
1a000be0:	6c1b      	ldr	r3, [r3, #64]	; 0x40

	/* Setup and start the PLL */
	Chip_Clock_SetupMainPLL(&ppll);

	/* Wait for the PLL to lock */
	while(!Chip_Clock_MainPLLLocked()) {}
1a000be2:	f013 0f01 	tst.w	r3, #1
1a000be6:	d0fa      	beq.n	1a000bde <Chip_SetupCoreClock+0x92>

	/* Set core clock base as PLL1 */
	Chip_Clock_SetBaseClock(CLK_BASE_MX, CLKIN_MAINPLL, true, false);
1a000be8:	2300      	movs	r3, #0
1a000bea:	2201      	movs	r2, #1
1a000bec:	2109      	movs	r1, #9
1a000bee:	2004      	movs	r0, #4
1a000bf0:	f000 fa84 	bl	1a0010fc <Chip_Clock_SetBaseClock>

	if (direct) {
1a000bf4:	b306      	cbz	r6, 1a000c38 <Chip_SetupCoreClock+0xec>
		delay = 50000; // FIXME: original was 1000, fix for horrible crystals. @Eric
1a000bf6:	f24c 3350 	movw	r3, #50000	; 0xc350
1a000bfa:	9309      	str	r3, [sp, #36]	; 0x24
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize*/
1a000bfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a000bfe:	1e5a      	subs	r2, r3, #1
1a000c00:	9209      	str	r2, [sp, #36]	; 0x24
1a000c02:	2b00      	cmp	r3, #0
1a000c04:	d1fa      	bne.n	1a000bfc <Chip_SetupCoreClock+0xb0>
		ppll.ctrl |= 1 << 7;
1a000c06:	9b01      	ldr	r3, [sp, #4]
1a000c08:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a000c0c:	9301      	str	r3, [sp, #4]
    LPC_CGU->PLL1_CTRL = ppll->ctrl | ((uint32_t) ppll->srcin << 24) | (ppll->msel << 16) | (ppll->nsel << 12) | (ppll->psel << 8) | ( 1 << 11);	
1a000c0e:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a000c12:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a000c16:	9a05      	ldr	r2, [sp, #20]
1a000c18:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a000c1c:	9a03      	ldr	r2, [sp, #12]
1a000c1e:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a000c22:	9a04      	ldr	r2, [sp, #16]
1a000c24:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a000c28:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a000c2c:	4a1a      	ldr	r2, [pc, #104]	; (1a000c98 <Chip_SetupCoreClock+0x14c>)
1a000c2e:	6453      	str	r3, [r2, #68]	; 0x44
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize */
		ppll.psel--;
		Chip_Clock_SetupMainPLL(&ppll); /* Set PDIV to operate at full frequency */
	}

	if (setbase) {
1a000c30:	2c00      	cmp	r4, #0
1a000c32:	d12e      	bne.n	1a000c92 <Chip_SetupCoreClock+0x146>
		for (i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); i++) {
			Chip_Clock_SetBaseClock(InitClkStates[i].clk, InitClkStates[i].clkin,
									InitClkStates[i].autoblock_enab, InitClkStates[i].powerdn);
		}
	}
}
1a000c34:	b00a      	add	sp, #40	; 0x28
1a000c36:	bd70      	pop	{r4, r5, r6, pc}
	} else if (pdivide) {
1a000c38:	2d00      	cmp	r5, #0
1a000c3a:	d0f9      	beq.n	1a000c30 <Chip_SetupCoreClock+0xe4>
		delay = 50000; // FIXME: original was 1000, fix for horrible crystals. @Eric
1a000c3c:	f24c 3350 	movw	r3, #50000	; 0xc350
1a000c40:	9309      	str	r3, [sp, #36]	; 0x24
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize */
1a000c42:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a000c44:	1e5a      	subs	r2, r3, #1
1a000c46:	9209      	str	r2, [sp, #36]	; 0x24
1a000c48:	2b00      	cmp	r3, #0
1a000c4a:	d1fa      	bne.n	1a000c42 <Chip_SetupCoreClock+0xf6>
		ppll.psel--;
1a000c4c:	9b04      	ldr	r3, [sp, #16]
1a000c4e:	1e5a      	subs	r2, r3, #1
1a000c50:	9204      	str	r2, [sp, #16]
1a000c52:	f89d 1008 	ldrb.w	r1, [sp, #8]
1a000c56:	9b01      	ldr	r3, [sp, #4]
1a000c58:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
1a000c5c:	9905      	ldr	r1, [sp, #20]
1a000c5e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a000c62:	9903      	ldr	r1, [sp, #12]
1a000c64:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
1a000c68:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a000c6c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a000c70:	4a09      	ldr	r2, [pc, #36]	; (1a000c98 <Chip_SetupCoreClock+0x14c>)
1a000c72:	6453      	str	r3, [r2, #68]	; 0x44
1a000c74:	e7dc      	b.n	1a000c30 <Chip_SetupCoreClock+0xe4>
			Chip_Clock_SetBaseClock(InitClkStates[i].clk, InitClkStates[i].clkin,
1a000c76:	480a      	ldr	r0, [pc, #40]	; (1a000ca0 <Chip_SetupCoreClock+0x154>)
1a000c78:	eb00 0184 	add.w	r1, r0, r4, lsl #2
1a000c7c:	78cb      	ldrb	r3, [r1, #3]
1a000c7e:	788a      	ldrb	r2, [r1, #2]
1a000c80:	7849      	ldrb	r1, [r1, #1]
1a000c82:	f810 0024 	ldrb.w	r0, [r0, r4, lsl #2]
1a000c86:	f000 fa39 	bl	1a0010fc <Chip_Clock_SetBaseClock>
		for (i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); i++) {
1a000c8a:	3401      	adds	r4, #1
1a000c8c:	2c11      	cmp	r4, #17
1a000c8e:	d9f2      	bls.n	1a000c76 <Chip_SetupCoreClock+0x12a>
1a000c90:	e7d0      	b.n	1a000c34 <Chip_SetupCoreClock+0xe8>
1a000c92:	2400      	movs	r4, #0
1a000c94:	e7fa      	b.n	1a000c8c <Chip_SetupCoreClock+0x140>
1a000c96:	bf00      	nop
1a000c98:	40050000 	.word	0x40050000
1a000c9c:	068e7780 	.word	0x068e7780
1a000ca0:	1a0073c0 	.word	0x1a0073c0

1a000ca4 <SystemCoreClockUpdate>:


/* Update system core clock rate, should be called if the system has
   a clock rate change */
void SystemCoreClockUpdate(void)
{
1a000ca4:	b508      	push	{r3, lr}
	/* CPU core speed */
	SystemCoreClock = Chip_Clock_GetRate(CLK_MX_MXCORE);
1a000ca6:	2069      	movs	r0, #105	; 0x69
1a000ca8:	f000 faa6 	bl	1a0011f8 <Chip_Clock_GetRate>
1a000cac:	4b01      	ldr	r3, [pc, #4]	; (1a000cb4 <SystemCoreClockUpdate+0x10>)
1a000cae:	6018      	str	r0, [r3, #0]
}
1a000cb0:	bd08      	pop	{r3, pc}
1a000cb2:	bf00      	nop
1a000cb4:	10000a4c 	.word	0x10000a4c

1a000cb8 <pll_calc_divs>:
		return -val;
	return val;
}

static void pll_calc_divs(uint32_t freq, PLL_PARAM_T *ppll)
{
1a000cb8:	b4f0      	push	{r4, r5, r6, r7}

	uint32_t prev = freq;
	int n, m, p;

	/* When direct mode is set FBSEL should be a don't care */
	if (ppll->ctrl & (1 << 7)) {
1a000cba:	680b      	ldr	r3, [r1, #0]
1a000cbc:	f013 0f80 	tst.w	r3, #128	; 0x80
1a000cc0:	d002      	beq.n	1a000cc8 <pll_calc_divs+0x10>
		ppll->ctrl &= ~(1 << 6);
1a000cc2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a000cc6:	600b      	str	r3, [r1, #0]
	}
	for (n = 1; n <= 4; n++) {
		for (p = 0; p < 4; p ++) {
1a000cc8:	4607      	mov	r7, r0
1a000cca:	2501      	movs	r5, #1
1a000ccc:	e03a      	b.n	1a000d44 <pll_calc_divs+0x8c>
			for (m = 1; m <= 256; m++) {
				uint32_t fcco, fout;
				if (ppll->ctrl & (1 << 6)) {
					fcco = ((m << (p + 1)) * ppll->fin) / n;
				} else {
					fcco = (m * ppll->fin) / n;
1a000cce:	694b      	ldr	r3, [r1, #20]
1a000cd0:	fb03 f302 	mul.w	r3, r3, r2
1a000cd4:	fbb3 f3f5 	udiv	r3, r3, r5
1a000cd8:	e01c      	b.n	1a000d14 <pll_calc_divs+0x5c>
				}
				if (fcco < PLL_MIN_CCO_FREQ) continue;
				if (fcco > PLL_MAX_CCO_FREQ) break;
				if (ppll->ctrl & (1 << 7)) {
					fout = fcco;
1a000cda:	461c      	mov	r4, r3
	if (val < 0)
1a000cdc:	ebb0 0c04 	subs.w	ip, r0, r4
1a000ce0:	d427      	bmi.n	1a000d32 <pll_calc_divs+0x7a>
				} else {
					fout = fcco >> (p + 1);
				}

				if (ABS(freq - fout) < prev) {
1a000ce2:	4567      	cmp	r7, ip
1a000ce4:	d906      	bls.n	1a000cf4 <pll_calc_divs+0x3c>
					ppll->nsel = n;
1a000ce6:	608d      	str	r5, [r1, #8]
					ppll->psel = p + 1;
1a000ce8:	1c77      	adds	r7, r6, #1
1a000cea:	60cf      	str	r7, [r1, #12]
					ppll->msel = m;
1a000cec:	610a      	str	r2, [r1, #16]
					ppll->fout = fout;
1a000cee:	618c      	str	r4, [r1, #24]
					ppll->fcco = fcco;
1a000cf0:	61cb      	str	r3, [r1, #28]
					prev = ABS(freq - fout);
1a000cf2:	4667      	mov	r7, ip
			for (m = 1; m <= 256; m++) {
1a000cf4:	3201      	adds	r2, #1
1a000cf6:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
1a000cfa:	dc1d      	bgt.n	1a000d38 <pll_calc_divs+0x80>
				if (ppll->ctrl & (1 << 6)) {
1a000cfc:	680c      	ldr	r4, [r1, #0]
1a000cfe:	f014 0f40 	tst.w	r4, #64	; 0x40
1a000d02:	d0e4      	beq.n	1a000cce <pll_calc_divs+0x16>
					fcco = ((m << (p + 1)) * ppll->fin) / n;
1a000d04:	1c73      	adds	r3, r6, #1
1a000d06:	fa02 fc03 	lsl.w	ip, r2, r3
1a000d0a:	694b      	ldr	r3, [r1, #20]
1a000d0c:	fb03 f30c 	mul.w	r3, r3, ip
1a000d10:	fbb3 f3f5 	udiv	r3, r3, r5
				if (fcco < PLL_MIN_CCO_FREQ) continue;
1a000d14:	f8df c038 	ldr.w	ip, [pc, #56]	; 1a000d50 <pll_calc_divs+0x98>
1a000d18:	4563      	cmp	r3, ip
1a000d1a:	d9eb      	bls.n	1a000cf4 <pll_calc_divs+0x3c>
				if (fcco > PLL_MAX_CCO_FREQ) break;
1a000d1c:	f8df c034 	ldr.w	ip, [pc, #52]	; 1a000d54 <pll_calc_divs+0x9c>
1a000d20:	4563      	cmp	r3, ip
1a000d22:	d809      	bhi.n	1a000d38 <pll_calc_divs+0x80>
				if (ppll->ctrl & (1 << 7)) {
1a000d24:	f014 0f80 	tst.w	r4, #128	; 0x80
1a000d28:	d1d7      	bne.n	1a000cda <pll_calc_divs+0x22>
					fout = fcco >> (p + 1);
1a000d2a:	1c74      	adds	r4, r6, #1
1a000d2c:	fa23 f404 	lsr.w	r4, r3, r4
1a000d30:	e7d4      	b.n	1a000cdc <pll_calc_divs+0x24>
		return -val;
1a000d32:	f1cc 0c00 	rsb	ip, ip, #0
1a000d36:	e7d4      	b.n	1a000ce2 <pll_calc_divs+0x2a>
		for (p = 0; p < 4; p ++) {
1a000d38:	3601      	adds	r6, #1
1a000d3a:	2e03      	cmp	r6, #3
1a000d3c:	dc01      	bgt.n	1a000d42 <pll_calc_divs+0x8a>
			for (m = 1; m <= 256; m++) {
1a000d3e:	2201      	movs	r2, #1
1a000d40:	e7d9      	b.n	1a000cf6 <pll_calc_divs+0x3e>
	for (n = 1; n <= 4; n++) {
1a000d42:	3501      	adds	r5, #1
1a000d44:	2d04      	cmp	r5, #4
1a000d46:	dc01      	bgt.n	1a000d4c <pll_calc_divs+0x94>
		for (p = 0; p < 4; p ++) {
1a000d48:	2600      	movs	r6, #0
1a000d4a:	e7f6      	b.n	1a000d3a <pll_calc_divs+0x82>
				}
			}
		}
	}
}
1a000d4c:	bcf0      	pop	{r4, r5, r6, r7}
1a000d4e:	4770      	bx	lr
1a000d50:	094c5eff 	.word	0x094c5eff
1a000d54:	1312d000 	.word	0x1312d000

1a000d58 <pll_get_frac>:

static void pll_get_frac(uint32_t freq, PLL_PARAM_T *ppll)
{
1a000d58:	b5f0      	push	{r4, r5, r6, r7, lr}
1a000d5a:	b099      	sub	sp, #100	; 0x64
1a000d5c:	4605      	mov	r5, r0
1a000d5e:	460c      	mov	r4, r1
	int diff[3];
	PLL_PARAM_T pll[3] = {{0},{0},{0}};
1a000d60:	225c      	movs	r2, #92	; 0x5c
1a000d62:	2100      	movs	r1, #0
1a000d64:	a801      	add	r0, sp, #4
1a000d66:	f002 f9cf 	bl	1a003108 <memset>

	/* Try direct mode */
	pll[0].ctrl |= (1 << 7);
1a000d6a:	2380      	movs	r3, #128	; 0x80
1a000d6c:	9300      	str	r3, [sp, #0]
	pll[0].fin = ppll->fin;
1a000d6e:	6963      	ldr	r3, [r4, #20]
1a000d70:	9305      	str	r3, [sp, #20]
	pll[0].srcin = ppll->srcin;
1a000d72:	7923      	ldrb	r3, [r4, #4]
1a000d74:	f88d 3004 	strb.w	r3, [sp, #4]
	pll_calc_divs(freq, &pll[0]);
1a000d78:	4669      	mov	r1, sp
1a000d7a:	4628      	mov	r0, r5
1a000d7c:	f7ff ff9c 	bl	1a000cb8 <pll_calc_divs>
	if (pll[0].fout == freq) {
1a000d80:	9b06      	ldr	r3, [sp, #24]
1a000d82:	42ab      	cmp	r3, r5
1a000d84:	d027      	beq.n	1a000dd6 <pll_get_frac+0x7e>
	if (val < 0)
1a000d86:	1aeb      	subs	r3, r5, r3
1a000d88:	d42e      	bmi.n	1a000de8 <pll_get_frac+0x90>
		*ppll = pll[0];
		return ;
	}
	diff[0] = ABS(freq - pll[0].fout);
1a000d8a:	461e      	mov	r6, r3

	/* Try non-Integer mode */
	pll[2].ctrl &= ~(1 << 6);			// need to set FBSEL to 0
1a000d8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a000d8e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a000d92:	9310      	str	r3, [sp, #64]	; 0x40
	pll[2].fin = ppll->fin;
1a000d94:	6963      	ldr	r3, [r4, #20]
1a000d96:	9315      	str	r3, [sp, #84]	; 0x54
	pll[2].srcin = ppll->srcin;
1a000d98:	7923      	ldrb	r3, [r4, #4]
1a000d9a:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
	pll_calc_divs(freq, &pll[2]);
1a000d9e:	a910      	add	r1, sp, #64	; 0x40
1a000da0:	4628      	mov	r0, r5
1a000da2:	f7ff ff89 	bl	1a000cb8 <pll_calc_divs>
	if (pll[2].fout == freq) {
1a000da6:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a000da8:	42ab      	cmp	r3, r5
1a000daa:	d01f      	beq.n	1a000dec <pll_get_frac+0x94>
	if (val < 0)
1a000dac:	1aeb      	subs	r3, r5, r3
1a000dae:	d425      	bmi.n	1a000dfc <pll_get_frac+0xa4>
		*ppll = pll[2];
		return ;
	}
	diff[2] = ABS(freq - pll[2].fout);
1a000db0:	461f      	mov	r7, r3
	
	if (freq <= 110000000) {
1a000db2:	4b2b      	ldr	r3, [pc, #172]	; (1a000e60 <pll_get_frac+0x108>)
1a000db4:	429d      	cmp	r5, r3
1a000db6:	d923      	bls.n	1a000e00 <pll_get_frac+0xa8>
		if (pll[1].fout == freq) {
			*ppll = pll[1];
			return ;
		}
	}
	diff[1] = ABS(freq - pll[1].fout);
1a000db8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
	if (val < 0)
1a000dba:	1aed      	subs	r5, r5, r3
1a000dbc:	d433      	bmi.n	1a000e26 <pll_get_frac+0xce>

	/* Find the min of 3 and return */
	if (diff[0] <= diff[1]) {
1a000dbe:	42ae      	cmp	r6, r5
1a000dc0:	dc3b      	bgt.n	1a000e3a <pll_get_frac+0xe2>
		if (diff[0] <= diff[2]) {
1a000dc2:	42be      	cmp	r6, r7
1a000dc4:	dc31      	bgt.n	1a000e2a <pll_get_frac+0xd2>
			*ppll = pll[0];
1a000dc6:	466d      	mov	r5, sp
1a000dc8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000dca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000dcc:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000dd0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000dd4:	e006      	b.n	1a000de4 <pll_get_frac+0x8c>
		*ppll = pll[0];
1a000dd6:	466d      	mov	r5, sp
1a000dd8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000dda:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000ddc:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000de0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
			*ppll = pll[1];
		} else {
			*ppll = pll[2];
		}
	}
}
1a000de4:	b019      	add	sp, #100	; 0x64
1a000de6:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return -val;
1a000de8:	425b      	negs	r3, r3
1a000dea:	e7ce      	b.n	1a000d8a <pll_get_frac+0x32>
		*ppll = pll[2];
1a000dec:	ad10      	add	r5, sp, #64	; 0x40
1a000dee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000df0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000df2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000df6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		return ;
1a000dfa:	e7f3      	b.n	1a000de4 <pll_get_frac+0x8c>
		return -val;
1a000dfc:	425b      	negs	r3, r3
1a000dfe:	e7d7      	b.n	1a000db0 <pll_get_frac+0x58>
		pll[1].ctrl = (1 << 6);
1a000e00:	2340      	movs	r3, #64	; 0x40
1a000e02:	9308      	str	r3, [sp, #32]
		pll[1].fin = ppll->fin;
1a000e04:	6963      	ldr	r3, [r4, #20]
1a000e06:	930d      	str	r3, [sp, #52]	; 0x34
		pll_calc_divs(freq, &pll[1]);
1a000e08:	a908      	add	r1, sp, #32
1a000e0a:	4628      	mov	r0, r5
1a000e0c:	f7ff ff54 	bl	1a000cb8 <pll_calc_divs>
		if (pll[1].fout == freq) {
1a000e10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a000e12:	42ab      	cmp	r3, r5
1a000e14:	d1d0      	bne.n	1a000db8 <pll_get_frac+0x60>
			*ppll = pll[1];
1a000e16:	ad08      	add	r5, sp, #32
1a000e18:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000e1a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000e1c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000e20:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
			return ;
1a000e24:	e7de      	b.n	1a000de4 <pll_get_frac+0x8c>
		return -val;
1a000e26:	426d      	negs	r5, r5
1a000e28:	e7c9      	b.n	1a000dbe <pll_get_frac+0x66>
			*ppll = pll[2];
1a000e2a:	ad10      	add	r5, sp, #64	; 0x40
1a000e2c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000e2e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000e30:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000e34:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000e38:	e7d4      	b.n	1a000de4 <pll_get_frac+0x8c>
		if (diff[1] <= diff[2]) {
1a000e3a:	42af      	cmp	r7, r5
1a000e3c:	db07      	blt.n	1a000e4e <pll_get_frac+0xf6>
			*ppll = pll[1];
1a000e3e:	ad08      	add	r5, sp, #32
1a000e40:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000e42:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000e44:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000e48:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000e4c:	e7ca      	b.n	1a000de4 <pll_get_frac+0x8c>
			*ppll = pll[2];
1a000e4e:	ad10      	add	r5, sp, #64	; 0x40
1a000e50:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000e52:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000e54:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000e58:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000e5c:	e7c2      	b.n	1a000de4 <pll_get_frac+0x8c>
1a000e5e:	bf00      	nop
1a000e60:	068e7780 	.word	0x068e7780

1a000e64 <Chip_Clock_FindBaseClock>:
	return Chip_Clock_GetClockInputHz(input) / (div + 1);
}

/* Finds the base clock for the peripheral clock */
static CHIP_CGU_BASE_CLK_T Chip_Clock_FindBaseClock(CHIP_CCU_CLK_T clk)
{
1a000e64:	b430      	push	{r4, r5}
1a000e66:	4605      	mov	r5, r0
	CHIP_CGU_BASE_CLK_T baseclk = CLK_BASE_NONE;
	int i = 0;
1a000e68:	2300      	movs	r3, #0
	CHIP_CGU_BASE_CLK_T baseclk = CLK_BASE_NONE;
1a000e6a:	201c      	movs	r0, #28

	while ((baseclk == CLK_BASE_NONE) && (periph_to_base[i].clkbase != baseclk)) {
1a000e6c:	e000      	b.n	1a000e70 <Chip_Clock_FindBaseClock+0xc>
		if ((clk >= periph_to_base[i].clkstart) && (clk <= periph_to_base[i].clkend)) {
			baseclk = periph_to_base[i].clkbase;
		}
		else {
			i++;
1a000e6e:	3301      	adds	r3, #1
	while ((baseclk == CLK_BASE_NONE) && (periph_to_base[i].clkbase != baseclk)) {
1a000e70:	281c      	cmp	r0, #28
1a000e72:	d118      	bne.n	1a000ea6 <Chip_Clock_FindBaseClock+0x42>
1a000e74:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a000e78:	0051      	lsls	r1, r2, #1
1a000e7a:	4a0c      	ldr	r2, [pc, #48]	; (1a000eac <Chip_Clock_FindBaseClock+0x48>)
1a000e7c:	440a      	add	r2, r1
1a000e7e:	7914      	ldrb	r4, [r2, #4]
1a000e80:	4284      	cmp	r4, r0
1a000e82:	d010      	beq.n	1a000ea6 <Chip_Clock_FindBaseClock+0x42>
		if ((clk >= periph_to_base[i].clkstart) && (clk <= periph_to_base[i].clkend)) {
1a000e84:	eb03 0143 	add.w	r1, r3, r3, lsl #1
1a000e88:	004a      	lsls	r2, r1, #1
1a000e8a:	4908      	ldr	r1, [pc, #32]	; (1a000eac <Chip_Clock_FindBaseClock+0x48>)
1a000e8c:	5a8a      	ldrh	r2, [r1, r2]
1a000e8e:	42aa      	cmp	r2, r5
1a000e90:	d8ed      	bhi.n	1a000e6e <Chip_Clock_FindBaseClock+0xa>
1a000e92:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a000e96:	0051      	lsls	r1, r2, #1
1a000e98:	4a04      	ldr	r2, [pc, #16]	; (1a000eac <Chip_Clock_FindBaseClock+0x48>)
1a000e9a:	440a      	add	r2, r1
1a000e9c:	8852      	ldrh	r2, [r2, #2]
1a000e9e:	42aa      	cmp	r2, r5
1a000ea0:	d3e5      	bcc.n	1a000e6e <Chip_Clock_FindBaseClock+0xa>
			baseclk = periph_to_base[i].clkbase;
1a000ea2:	4620      	mov	r0, r4
1a000ea4:	e7e4      	b.n	1a000e70 <Chip_Clock_FindBaseClock+0xc>
		}
	}

	return baseclk;
}
1a000ea6:	bc30      	pop	{r4, r5}
1a000ea8:	4770      	bx	lr
1a000eaa:	bf00      	nop
1a000eac:	1a007414 	.word	0x1a007414

1a000eb0 <Chip_Clock_EnableCrystal>:
 * Public functions
 ****************************************************************************/

/* Enables the crystal oscillator */
void Chip_Clock_EnableCrystal(void)
{
1a000eb0:	b082      	sub	sp, #8
	volatile uint32_t delay = 1000;
1a000eb2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a000eb6:	9301      	str	r3, [sp, #4]

	uint32_t OldCrystalConfig = LPC_CGU->XTAL_OSC_CTRL;
1a000eb8:	4a0d      	ldr	r2, [pc, #52]	; (1a000ef0 <Chip_Clock_EnableCrystal+0x40>)
1a000eba:	6993      	ldr	r3, [r2, #24]

	/* Clear bypass mode */
	OldCrystalConfig &= (~2);
1a000ebc:	f023 0102 	bic.w	r1, r3, #2
	if (OldCrystalConfig != LPC_CGU->XTAL_OSC_CTRL) {
1a000ec0:	6992      	ldr	r2, [r2, #24]
1a000ec2:	428a      	cmp	r2, r1
1a000ec4:	d001      	beq.n	1a000eca <Chip_Clock_EnableCrystal+0x1a>
		LPC_CGU->XTAL_OSC_CTRL = OldCrystalConfig;
1a000ec6:	4a0a      	ldr	r2, [pc, #40]	; (1a000ef0 <Chip_Clock_EnableCrystal+0x40>)
1a000ec8:	6191      	str	r1, [r2, #24]
	}

	/* Enable crystal oscillator */
	OldCrystalConfig &= (~1);
1a000eca:	f023 0303 	bic.w	r3, r3, #3
	if (OscRateIn >= 20000000) {
1a000ece:	4a09      	ldr	r2, [pc, #36]	; (1a000ef4 <Chip_Clock_EnableCrystal+0x44>)
1a000ed0:	6811      	ldr	r1, [r2, #0]
1a000ed2:	4a09      	ldr	r2, [pc, #36]	; (1a000ef8 <Chip_Clock_EnableCrystal+0x48>)
1a000ed4:	4291      	cmp	r1, r2
1a000ed6:	d901      	bls.n	1a000edc <Chip_Clock_EnableCrystal+0x2c>
		OldCrystalConfig |= 4;	/* Set high frequency mode */
1a000ed8:	f043 0304 	orr.w	r3, r3, #4

	}
	LPC_CGU->XTAL_OSC_CTRL = OldCrystalConfig;
1a000edc:	4a04      	ldr	r2, [pc, #16]	; (1a000ef0 <Chip_Clock_EnableCrystal+0x40>)
1a000ede:	6193      	str	r3, [r2, #24]

	/* Delay for 250uSec */
	while(delay--) {}
1a000ee0:	9b01      	ldr	r3, [sp, #4]
1a000ee2:	1e5a      	subs	r2, r3, #1
1a000ee4:	9201      	str	r2, [sp, #4]
1a000ee6:	2b00      	cmp	r3, #0
1a000ee8:	d1fa      	bne.n	1a000ee0 <Chip_Clock_EnableCrystal+0x30>
}
1a000eea:	b002      	add	sp, #8
1a000eec:	4770      	bx	lr
1a000eee:	bf00      	nop
1a000ef0:	40050000 	.word	0x40050000
1a000ef4:	1a0073bc 	.word	0x1a0073bc
1a000ef8:	01312cff 	.word	0x01312cff

1a000efc <Chip_Clock_GetDividerSource>:
}

/* Gets a CGU clock divider source */
CHIP_CGU_CLKIN_T Chip_Clock_GetDividerSource(CHIP_CGU_IDIV_T Divider)
{
	uint32_t reg = LPC_CGU->IDIV_CTRL[Divider];
1a000efc:	3012      	adds	r0, #18
1a000efe:	4b05      	ldr	r3, [pc, #20]	; (1a000f14 <Chip_Clock_GetDividerSource+0x18>)
1a000f00:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]

	if (reg & 1) {	/* divider is powered down */
1a000f04:	f010 0f01 	tst.w	r0, #1
1a000f08:	d102      	bne.n	1a000f10 <Chip_Clock_GetDividerSource+0x14>
		return CLKINPUT_PD;
	}

	return (CHIP_CGU_CLKIN_T) ((reg >> 24) & 0x1F);
1a000f0a:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a000f0e:	4770      	bx	lr
		return CLKINPUT_PD;
1a000f10:	2011      	movs	r0, #17
}
1a000f12:	4770      	bx	lr
1a000f14:	40050000 	.word	0x40050000

1a000f18 <Chip_Clock_GetDividerDivisor>:

/* Gets a CGU clock divider divisor */
uint32_t Chip_Clock_GetDividerDivisor(CHIP_CGU_IDIV_T Divider)
{
	return (CHIP_CGU_CLKIN_T) ((LPC_CGU->IDIV_CTRL[Divider] >> 2) & CHIP_CGU_IDIV_MASK(Divider));
1a000f18:	f100 0212 	add.w	r2, r0, #18
1a000f1c:	4b03      	ldr	r3, [pc, #12]	; (1a000f2c <Chip_Clock_GetDividerDivisor+0x14>)
1a000f1e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1a000f22:	4b03      	ldr	r3, [pc, #12]	; (1a000f30 <Chip_Clock_GetDividerDivisor+0x18>)
1a000f24:	5c18      	ldrb	r0, [r3, r0]
}
1a000f26:	ea00 0092 	and.w	r0, r0, r2, lsr #2
1a000f2a:	4770      	bx	lr
1a000f2c:	40050000 	.word	0x40050000
1a000f30:	1a00740c 	.word	0x1a00740c

1a000f34 <Chip_Clock_GetClockInputHz>:

/* Returns the frequency of the specified input clock source */
uint32_t Chip_Clock_GetClockInputHz(CHIP_CGU_CLKIN_T input)
{
1a000f34:	b508      	push	{r3, lr}
	uint32_t rate = 0;

	switch (input) {
1a000f36:	2810      	cmp	r0, #16
1a000f38:	d80a      	bhi.n	1a000f50 <Chip_Clock_GetClockInputHz+0x1c>
1a000f3a:	e8df f000 	tbb	[pc, r0]
1a000f3e:	0b44      	.short	0x0b44
1a000f40:	0921180d 	.word	0x0921180d
1a000f44:	2d2a2724 	.word	0x2d2a2724
1a000f48:	34300909 	.word	0x34300909
1a000f4c:	3c38      	.short	0x3c38
1a000f4e:	40          	.byte	0x40
1a000f4f:	00          	.byte	0x00
	uint32_t rate = 0;
1a000f50:	2000      	movs	r0, #0
1a000f52:	e03a      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>
	case CLKIN_32K:
		rate = CRYSTAL_32K_FREQ_IN;
		break;

	case CLKIN_IRC:
		rate = CGU_IRC_FREQ;
1a000f54:	481e      	ldr	r0, [pc, #120]	; (1a000fd0 <Chip_Clock_GetClockInputHz+0x9c>)
		break;
1a000f56:	e038      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_ENET_RX:
		if ((LPC_CREG->CREG6 & 0x07) != 0x4) {
1a000f58:	4b1e      	ldr	r3, [pc, #120]	; (1a000fd4 <Chip_Clock_GetClockInputHz+0xa0>)
1a000f5a:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a000f5e:	f003 0307 	and.w	r3, r3, #7
1a000f62:	2b04      	cmp	r3, #4
1a000f64:	d001      	beq.n	1a000f6a <Chip_Clock_GetClockInputHz+0x36>
			/* MII mode requires 25MHz clock */
			rate = 25000000;
1a000f66:	481c      	ldr	r0, [pc, #112]	; (1a000fd8 <Chip_Clock_GetClockInputHz+0xa4>)
1a000f68:	e02f      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>
	uint32_t rate = 0;
1a000f6a:	2000      	movs	r0, #0
1a000f6c:	e02d      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>
		}
		break;

	case CLKIN_ENET_TX:
		if ((LPC_CREG->CREG6 & 0x07) != 0x4) {
1a000f6e:	4b19      	ldr	r3, [pc, #100]	; (1a000fd4 <Chip_Clock_GetClockInputHz+0xa0>)
1a000f70:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a000f74:	f003 0307 	and.w	r3, r3, #7
1a000f78:	2b04      	cmp	r3, #4
1a000f7a:	d027      	beq.n	1a000fcc <Chip_Clock_GetClockInputHz+0x98>
			rate = 25000000; /* MII uses 25 MHz */
1a000f7c:	4816      	ldr	r0, [pc, #88]	; (1a000fd8 <Chip_Clock_GetClockInputHz+0xa4>)
1a000f7e:	e024      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>
			rate = 50000000; /* RMII uses 50 MHz */
		}
		break;

	case CLKIN_CLKIN:
		rate = ExtRateIn;
1a000f80:	4b16      	ldr	r3, [pc, #88]	; (1a000fdc <Chip_Clock_GetClockInputHz+0xa8>)
1a000f82:	6818      	ldr	r0, [r3, #0]
		break;
1a000f84:	e021      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_CRYSTAL:
		rate = OscRateIn;
1a000f86:	4b16      	ldr	r3, [pc, #88]	; (1a000fe0 <Chip_Clock_GetClockInputHz+0xac>)
1a000f88:	6818      	ldr	r0, [r3, #0]
		break;
1a000f8a:	e01e      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_USBPLL:
		rate = audio_usb_pll_freq[CGU_USB_PLL];
1a000f8c:	4b15      	ldr	r3, [pc, #84]	; (1a000fe4 <Chip_Clock_GetClockInputHz+0xb0>)
1a000f8e:	6818      	ldr	r0, [r3, #0]
		break;
1a000f90:	e01b      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_AUDIOPLL:
		rate = audio_usb_pll_freq[CGU_AUDIO_PLL];
1a000f92:	4b14      	ldr	r3, [pc, #80]	; (1a000fe4 <Chip_Clock_GetClockInputHz+0xb0>)
1a000f94:	6858      	ldr	r0, [r3, #4]
		break;
1a000f96:	e018      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_MAINPLL:
		rate = Chip_Clock_GetMainPLLHz();
1a000f98:	f000 f868 	bl	1a00106c <Chip_Clock_GetMainPLLHz>
		break;
1a000f9c:	e015      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVA:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_A);
1a000f9e:	2100      	movs	r1, #0
1a000fa0:	f000 f89a 	bl	1a0010d8 <Chip_Clock_GetDivRate>
		break;
1a000fa4:	e011      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVB:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_B);
1a000fa6:	2101      	movs	r1, #1
1a000fa8:	f000 f896 	bl	1a0010d8 <Chip_Clock_GetDivRate>
		break;
1a000fac:	e00d      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVC:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_C);
1a000fae:	2102      	movs	r1, #2
1a000fb0:	f000 f892 	bl	1a0010d8 <Chip_Clock_GetDivRate>
		break;
1a000fb4:	e009      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVD:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_D);
1a000fb6:	2103      	movs	r1, #3
1a000fb8:	f000 f88e 	bl	1a0010d8 <Chip_Clock_GetDivRate>
		break;
1a000fbc:	e005      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVE:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_E);
1a000fbe:	2104      	movs	r1, #4
1a000fc0:	f000 f88a 	bl	1a0010d8 <Chip_Clock_GetDivRate>
		break;
1a000fc4:	e001      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>
		rate = CRYSTAL_32K_FREQ_IN;
1a000fc6:	f44f 4000 	mov.w	r0, #32768	; 0x8000
	default:
		break;
	}

	return rate;
}
1a000fca:	bd08      	pop	{r3, pc}
			rate = 50000000; /* RMII uses 50 MHz */
1a000fcc:	4806      	ldr	r0, [pc, #24]	; (1a000fe8 <Chip_Clock_GetClockInputHz+0xb4>)
	return rate;
1a000fce:	e7fc      	b.n	1a000fca <Chip_Clock_GetClockInputHz+0x96>
1a000fd0:	00b71b00 	.word	0x00b71b00
1a000fd4:	40043000 	.word	0x40043000
1a000fd8:	017d7840 	.word	0x017d7840
1a000fdc:	1a007390 	.word	0x1a007390
1a000fe0:	1a0073bc 	.word	0x1a0073bc
1a000fe4:	100009fc 	.word	0x100009fc
1a000fe8:	02faf080 	.word	0x02faf080

1a000fec <Chip_Clock_CalcMainPLLValue>:
{
1a000fec:	b538      	push	{r3, r4, r5, lr}
1a000fee:	4605      	mov	r5, r0
1a000ff0:	460c      	mov	r4, r1
	ppll->fin = Chip_Clock_GetClockInputHz(ppll->srcin);
1a000ff2:	7908      	ldrb	r0, [r1, #4]
1a000ff4:	f7ff ff9e 	bl	1a000f34 <Chip_Clock_GetClockInputHz>
1a000ff8:	6160      	str	r0, [r4, #20]
	if (freq > MAX_CLOCK_FREQ || freq < (PLL_MIN_CCO_FREQ / 16) || !ppll->fin) {
1a000ffa:	4b19      	ldr	r3, [pc, #100]	; (1a001060 <Chip_Clock_CalcMainPLLValue+0x74>)
1a000ffc:	442b      	add	r3, r5
1a000ffe:	4a19      	ldr	r2, [pc, #100]	; (1a001064 <Chip_Clock_CalcMainPLLValue+0x78>)
1a001000:	4293      	cmp	r3, r2
1a001002:	d821      	bhi.n	1a001048 <Chip_Clock_CalcMainPLLValue+0x5c>
1a001004:	b318      	cbz	r0, 1a00104e <Chip_Clock_CalcMainPLLValue+0x62>
	ppll->ctrl = 1 << 7; /* Enable direct mode [If possible] */
1a001006:	2380      	movs	r3, #128	; 0x80
1a001008:	6023      	str	r3, [r4, #0]
	ppll->nsel = 0;
1a00100a:	2300      	movs	r3, #0
1a00100c:	60a3      	str	r3, [r4, #8]
	ppll->psel = 0;
1a00100e:	60e3      	str	r3, [r4, #12]
	ppll->msel = freq / ppll->fin;
1a001010:	fbb5 f3f0 	udiv	r3, r5, r0
1a001014:	6123      	str	r3, [r4, #16]
	if (freq < PLL_MIN_CCO_FREQ || ppll->msel * ppll->fin != freq) {
1a001016:	4a14      	ldr	r2, [pc, #80]	; (1a001068 <Chip_Clock_CalcMainPLLValue+0x7c>)
1a001018:	4295      	cmp	r5, r2
1a00101a:	d903      	bls.n	1a001024 <Chip_Clock_CalcMainPLLValue+0x38>
1a00101c:	fb03 f000 	mul.w	r0, r3, r0
1a001020:	42a8      	cmp	r0, r5
1a001022:	d007      	beq.n	1a001034 <Chip_Clock_CalcMainPLLValue+0x48>
		pll_get_frac(freq, ppll);
1a001024:	4621      	mov	r1, r4
1a001026:	4628      	mov	r0, r5
1a001028:	f7ff fe96 	bl	1a000d58 <pll_get_frac>
		if (!ppll->nsel) {
1a00102c:	68a3      	ldr	r3, [r4, #8]
1a00102e:	b18b      	cbz	r3, 1a001054 <Chip_Clock_CalcMainPLLValue+0x68>
		ppll->nsel --;
1a001030:	3b01      	subs	r3, #1
1a001032:	60a3      	str	r3, [r4, #8]
	if (ppll->msel == 0) {
1a001034:	6923      	ldr	r3, [r4, #16]
1a001036:	b183      	cbz	r3, 1a00105a <Chip_Clock_CalcMainPLLValue+0x6e>
	if (ppll->psel) {
1a001038:	68e2      	ldr	r2, [r4, #12]
1a00103a:	b10a      	cbz	r2, 1a001040 <Chip_Clock_CalcMainPLLValue+0x54>
		ppll->psel --;
1a00103c:	3a01      	subs	r2, #1
1a00103e:	60e2      	str	r2, [r4, #12]
	ppll->msel --;
1a001040:	3b01      	subs	r3, #1
1a001042:	6123      	str	r3, [r4, #16]
	return 0;
1a001044:	2000      	movs	r0, #0
}
1a001046:	bd38      	pop	{r3, r4, r5, pc}
		return -1;
1a001048:	f04f 30ff 	mov.w	r0, #4294967295
1a00104c:	e7fb      	b.n	1a001046 <Chip_Clock_CalcMainPLLValue+0x5a>
1a00104e:	f04f 30ff 	mov.w	r0, #4294967295
1a001052:	e7f8      	b.n	1a001046 <Chip_Clock_CalcMainPLLValue+0x5a>
			return -1;
1a001054:	f04f 30ff 	mov.w	r0, #4294967295
1a001058:	e7f5      	b.n	1a001046 <Chip_Clock_CalcMainPLLValue+0x5a>
		return - 1;
1a00105a:	f04f 30ff 	mov.w	r0, #4294967295
1a00105e:	e7f2      	b.n	1a001046 <Chip_Clock_CalcMainPLLValue+0x5a>
1a001060:	ff6b3a10 	.word	0xff6b3a10
1a001064:	0b940510 	.word	0x0b940510
1a001068:	094c5eff 	.word	0x094c5eff

1a00106c <Chip_Clock_GetMainPLLHz>:
{
1a00106c:	b530      	push	{r4, r5, lr}
1a00106e:	b083      	sub	sp, #12
	uint32_t PLLReg = LPC_CGU->PLL1_CTRL;
1a001070:	4d17      	ldr	r5, [pc, #92]	; (1a0010d0 <Chip_Clock_GetMainPLLHz+0x64>)
1a001072:	6c6c      	ldr	r4, [r5, #68]	; 0x44
	uint32_t freq = Chip_Clock_GetClockInputHz((CHIP_CGU_CLKIN_T) ((PLLReg >> 24) & 0xF));
1a001074:	f3c4 6003 	ubfx	r0, r4, #24, #4
1a001078:	f7ff ff5c 	bl	1a000f34 <Chip_Clock_GetClockInputHz>
	const uint8_t ptab[] = {1, 2, 4, 8};
1a00107c:	4b15      	ldr	r3, [pc, #84]	; (1a0010d4 <Chip_Clock_GetMainPLLHz+0x68>)
1a00107e:	681b      	ldr	r3, [r3, #0]
1a001080:	9301      	str	r3, [sp, #4]
	if (!(LPC_CGU->PLL1_STAT & 1)) {
1a001082:	6c2b      	ldr	r3, [r5, #64]	; 0x40
1a001084:	f013 0f01 	tst.w	r3, #1
1a001088:	d020      	beq.n	1a0010cc <Chip_Clock_GetMainPLLHz+0x60>
	msel = (PLLReg >> 16) & 0xFF;
1a00108a:	f3c4 4307 	ubfx	r3, r4, #16, #8
	nsel = (PLLReg >> 12) & 0x3;
1a00108e:	f3c4 3201 	ubfx	r2, r4, #12, #2
	psel = (PLLReg >> 8) & 0x3;
1a001092:	f3c4 2101 	ubfx	r1, r4, #8, #2
	fbsel = (PLLReg >> 6) & 0x1;
1a001096:	f3c4 1580 	ubfx	r5, r4, #6, #1
	m = msel + 1;
1a00109a:	3301      	adds	r3, #1
	n = nsel + 1;
1a00109c:	3201      	adds	r2, #1
	p = ptab[psel];
1a00109e:	f10d 0c08 	add.w	ip, sp, #8
1a0010a2:	4461      	add	r1, ip
1a0010a4:	f811 1c04 	ldrb.w	r1, [r1, #-4]
	if (direct || fbsel) {
1a0010a8:	f014 0f80 	tst.w	r4, #128	; 0x80
1a0010ac:	d108      	bne.n	1a0010c0 <Chip_Clock_GetMainPLLHz+0x54>
1a0010ae:	b93d      	cbnz	r5, 1a0010c0 <Chip_Clock_GetMainPLLHz+0x54>
	return (m / (2 * p)) * (freq / n);
1a0010b0:	0049      	lsls	r1, r1, #1
1a0010b2:	fbb3 f3f1 	udiv	r3, r3, r1
1a0010b6:	fbb0 f0f2 	udiv	r0, r0, r2
1a0010ba:	fb00 f003 	mul.w	r0, r0, r3
1a0010be:	e003      	b.n	1a0010c8 <Chip_Clock_GetMainPLLHz+0x5c>
		return m * (freq / n);
1a0010c0:	fbb0 f0f2 	udiv	r0, r0, r2
1a0010c4:	fb03 f000 	mul.w	r0, r3, r0
}
1a0010c8:	b003      	add	sp, #12
1a0010ca:	bd30      	pop	{r4, r5, pc}
		return 0;
1a0010cc:	2000      	movs	r0, #0
1a0010ce:	e7fb      	b.n	1a0010c8 <Chip_Clock_GetMainPLLHz+0x5c>
1a0010d0:	40050000 	.word	0x40050000
1a0010d4:	1a007408 	.word	0x1a007408

1a0010d8 <Chip_Clock_GetDivRate>:
{
1a0010d8:	b538      	push	{r3, r4, r5, lr}
1a0010da:	460c      	mov	r4, r1
	input = Chip_Clock_GetDividerSource(divider);
1a0010dc:	4608      	mov	r0, r1
1a0010de:	f7ff ff0d 	bl	1a000efc <Chip_Clock_GetDividerSource>
1a0010e2:	4605      	mov	r5, r0
	div = Chip_Clock_GetDividerDivisor(divider);
1a0010e4:	4620      	mov	r0, r4
1a0010e6:	f7ff ff17 	bl	1a000f18 <Chip_Clock_GetDividerDivisor>
1a0010ea:	4604      	mov	r4, r0
	return Chip_Clock_GetClockInputHz(input) / (div + 1);
1a0010ec:	4628      	mov	r0, r5
1a0010ee:	f7ff ff21 	bl	1a000f34 <Chip_Clock_GetClockInputHz>
1a0010f2:	3401      	adds	r4, #1
}
1a0010f4:	fbb0 f0f4 	udiv	r0, r0, r4
1a0010f8:	bd38      	pop	{r3, r4, r5, pc}
1a0010fa:	Address 0x1a0010fa is out of bounds.


1a0010fc <Chip_Clock_SetBaseClock>:
	return Chip_Clock_GetClockInputHz(Chip_Clock_GetBaseClock(clock));
}

/* Sets a CGU Base Clock clock source */
void Chip_Clock_SetBaseClock(CHIP_CGU_BASE_CLK_T BaseClock, CHIP_CGU_CLKIN_T Input, bool autoblocken, bool powerdn)
{
1a0010fc:	b430      	push	{r4, r5}
	uint32_t reg = LPC_CGU->BASE_CLK[BaseClock];
1a0010fe:	f100 0416 	add.w	r4, r0, #22
1a001102:	00a4      	lsls	r4, r4, #2
1a001104:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
1a001108:	f504 24a0 	add.w	r4, r4, #327680	; 0x50000
1a00110c:	6864      	ldr	r4, [r4, #4]

	if (BaseClock < CLK_BASE_NONE) {
1a00110e:	281b      	cmp	r0, #27
1a001110:	d813      	bhi.n	1a00113a <Chip_Clock_SetBaseClock+0x3e>
		if (Input != CLKINPUT_PD) {
1a001112:	2911      	cmp	r1, #17
1a001114:	d01a      	beq.n	1a00114c <Chip_Clock_SetBaseClock+0x50>
			/* Mask off fields we plan to update */
			reg &= ~((0x1F << 24) | 1 | (1 << 11));
1a001116:	4d0e      	ldr	r5, [pc, #56]	; (1a001150 <Chip_Clock_SetBaseClock+0x54>)
1a001118:	4025      	ands	r5, r4

			if (autoblocken) {
1a00111a:	b10a      	cbz	r2, 1a001120 <Chip_Clock_SetBaseClock+0x24>
				reg |= (1 << 11);
1a00111c:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
			}
			if (powerdn) {
1a001120:	b10b      	cbz	r3, 1a001126 <Chip_Clock_SetBaseClock+0x2a>
				reg |= (1 << 0);
1a001122:	f045 0501 	orr.w	r5, r5, #1
			}

			/* Set clock source */
			reg |= (Input << 24);
1a001126:	ea45 6501 	orr.w	r5, r5, r1, lsl #24

			LPC_CGU->BASE_CLK[BaseClock] = reg;
1a00112a:	3016      	adds	r0, #22
1a00112c:	0080      	lsls	r0, r0, #2
1a00112e:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a001132:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a001136:	6045      	str	r5, [r0, #4]
1a001138:	e008      	b.n	1a00114c <Chip_Clock_SetBaseClock+0x50>
		}
	}
	else {
		LPC_CGU->BASE_CLK[BaseClock] = reg | 1;	/* Power down this base clock */
1a00113a:	f044 0401 	orr.w	r4, r4, #1
1a00113e:	3016      	adds	r0, #22
1a001140:	0080      	lsls	r0, r0, #2
1a001142:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a001146:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a00114a:	6044      	str	r4, [r0, #4]
	}
}
1a00114c:	bc30      	pop	{r4, r5}
1a00114e:	4770      	bx	lr
1a001150:	e0fff7fe 	.word	0xe0fff7fe

1a001154 <Chip_Clock_GetBaseClock>:
/* Gets a CGU Base Clock clock source */
CHIP_CGU_CLKIN_T Chip_Clock_GetBaseClock(CHIP_CGU_BASE_CLK_T BaseClock)
{
	uint32_t reg;

	if (BaseClock >= CLK_BASE_NONE) {
1a001154:	281b      	cmp	r0, #27
1a001156:	d80c      	bhi.n	1a001172 <Chip_Clock_GetBaseClock+0x1e>
		return CLKINPUT_PD;
	}

	reg = LPC_CGU->BASE_CLK[BaseClock];
1a001158:	3016      	adds	r0, #22
1a00115a:	0080      	lsls	r0, r0, #2
1a00115c:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a001160:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a001164:	6840      	ldr	r0, [r0, #4]

	/* base clock is powered down? */
	if (reg & 1) {
1a001166:	f010 0f01 	tst.w	r0, #1
1a00116a:	d104      	bne.n	1a001176 <Chip_Clock_GetBaseClock+0x22>
		return CLKINPUT_PD;
	}

	return (CHIP_CGU_CLKIN_T) ((reg >> 24) & 0x1F);
1a00116c:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a001170:	4770      	bx	lr
		return CLKINPUT_PD;
1a001172:	2011      	movs	r0, #17
1a001174:	4770      	bx	lr
		return CLKINPUT_PD;
1a001176:	2011      	movs	r0, #17
}
1a001178:	4770      	bx	lr

1a00117a <Chip_Clock_GetBaseClocktHz>:
{
1a00117a:	b508      	push	{r3, lr}
	return Chip_Clock_GetClockInputHz(Chip_Clock_GetBaseClock(clock));
1a00117c:	f7ff ffea 	bl	1a001154 <Chip_Clock_GetBaseClock>
1a001180:	f7ff fed8 	bl	1a000f34 <Chip_Clock_GetClockInputHz>
}
1a001184:	bd08      	pop	{r3, pc}
1a001186:	Address 0x1a001186 is out of bounds.


1a001188 <Chip_Clock_EnableOpts>:
/* Enables a peripheral clock and sets clock states */
void Chip_Clock_EnableOpts(CHIP_CCU_CLK_T clk, bool autoen, bool wakeupen, int div)
{
	uint32_t reg = 1;

	if (autoen) {
1a001188:	b971      	cbnz	r1, 1a0011a8 <Chip_Clock_EnableOpts+0x20>
	uint32_t reg = 1;
1a00118a:	2101      	movs	r1, #1
		reg |= (1 << 1);
	}
	if (wakeupen) {
1a00118c:	b10a      	cbz	r2, 1a001192 <Chip_Clock_EnableOpts+0xa>
		reg |= (1 << 2);
1a00118e:	f041 0104 	orr.w	r1, r1, #4
	}

	/* Not all clocks support a divider, but we won't check that here. Only
	   dividers of 1 and 2 are allowed. Assume 1 if not 2 */
	if (div == 2) {
1a001192:	2b02      	cmp	r3, #2
1a001194:	d00a      	beq.n	1a0011ac <Chip_Clock_EnableOpts+0x24>
		reg |= (1 << 5);
	}

	/* Setup peripheral clock and start running */
	if (clk >= CLK_CCU2_START) {
1a001196:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a00119a:	d30a      	bcc.n	1a0011b2 <Chip_Clock_EnableOpts+0x2a>
		LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG = reg;
1a00119c:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a0011a0:	4b06      	ldr	r3, [pc, #24]	; (1a0011bc <Chip_Clock_EnableOpts+0x34>)
1a0011a2:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a0011a6:	4770      	bx	lr
		reg |= (1 << 1);
1a0011a8:	2103      	movs	r1, #3
1a0011aa:	e7ef      	b.n	1a00118c <Chip_Clock_EnableOpts+0x4>
		reg |= (1 << 5);
1a0011ac:	f041 0120 	orr.w	r1, r1, #32
1a0011b0:	e7f1      	b.n	1a001196 <Chip_Clock_EnableOpts+0xe>
	}
	else {
		LPC_CCU1->CLKCCU[clk].CFG = reg;
1a0011b2:	3020      	adds	r0, #32
1a0011b4:	4b02      	ldr	r3, [pc, #8]	; (1a0011c0 <Chip_Clock_EnableOpts+0x38>)
1a0011b6:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
	}
}
1a0011ba:	4770      	bx	lr
1a0011bc:	40052000 	.word	0x40052000
1a0011c0:	40051000 	.word	0x40051000

1a0011c4 <Chip_Clock_Enable>:

/* Enables a peripheral clock */
void Chip_Clock_Enable(CHIP_CCU_CLK_T clk)
{
	/* Start peripheral clock running */
	if (clk >= CLK_CCU2_START) {
1a0011c4:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0011c8:	d309      	bcc.n	1a0011de <Chip_Clock_Enable+0x1a>
		LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG |= 1;
1a0011ca:	4a09      	ldr	r2, [pc, #36]	; (1a0011f0 <Chip_Clock_Enable+0x2c>)
1a0011cc:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a0011d0:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a0011d4:	f043 0301 	orr.w	r3, r3, #1
1a0011d8:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a0011dc:	4770      	bx	lr
	}
	else {
		LPC_CCU1->CLKCCU[clk].CFG |= 1;
1a0011de:	4a05      	ldr	r2, [pc, #20]	; (1a0011f4 <Chip_Clock_Enable+0x30>)
1a0011e0:	3020      	adds	r0, #32
1a0011e2:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a0011e6:	f043 0301 	orr.w	r3, r3, #1
1a0011ea:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
	}
}
1a0011ee:	4770      	bx	lr
1a0011f0:	40052000 	.word	0x40052000
1a0011f4:	40051000 	.word	0x40051000

1a0011f8 <Chip_Clock_GetRate>:
	LPC_CCU2->PM = 0;
}

/* Returns a peripheral clock rate */
uint32_t Chip_Clock_GetRate(CHIP_CCU_CLK_T clk)
{
1a0011f8:	b510      	push	{r4, lr}
	CHIP_CGU_BASE_CLK_T baseclk;
	uint32_t reg, div, rate;

	/* Get CCU config register for clock */
	if (clk >= CLK_CCU2_START) {
1a0011fa:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0011fe:	d309      	bcc.n	1a001214 <Chip_Clock_GetRate+0x1c>
		reg = LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG;
1a001200:	f5a0 7391 	sub.w	r3, r0, #290	; 0x122
1a001204:	4a0d      	ldr	r2, [pc, #52]	; (1a00123c <Chip_Clock_GetRate+0x44>)
1a001206:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
	else {
		reg = LPC_CCU1->CLKCCU[clk].CFG;
	}

	/* Is the clock enabled? */
	if (reg & 1) {
1a00120a:	f014 0f01 	tst.w	r4, #1
1a00120e:	d107      	bne.n	1a001220 <Chip_Clock_GetRate+0x28>

		}
		rate = rate / div;
	}
	else {
		rate = 0;
1a001210:	2000      	movs	r0, #0
	}

	return rate;
}
1a001212:	bd10      	pop	{r4, pc}
		reg = LPC_CCU1->CLKCCU[clk].CFG;
1a001214:	f100 0320 	add.w	r3, r0, #32
1a001218:	4a09      	ldr	r2, [pc, #36]	; (1a001240 <Chip_Clock_GetRate+0x48>)
1a00121a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a00121e:	e7f4      	b.n	1a00120a <Chip_Clock_GetRate+0x12>
		baseclk = Chip_Clock_FindBaseClock(clk);
1a001220:	f7ff fe20 	bl	1a000e64 <Chip_Clock_FindBaseClock>
		rate = Chip_Clock_GetBaseClocktHz(baseclk);
1a001224:	f7ff ffa9 	bl	1a00117a <Chip_Clock_GetBaseClocktHz>
		if (((reg >> 5) & 0x7) == 0) {
1a001228:	f014 0fe0 	tst.w	r4, #224	; 0xe0
1a00122c:	d103      	bne.n	1a001236 <Chip_Clock_GetRate+0x3e>
			div = 1;
1a00122e:	2301      	movs	r3, #1
		rate = rate / div;
1a001230:	fbb0 f0f3 	udiv	r0, r0, r3
1a001234:	e7ed      	b.n	1a001212 <Chip_Clock_GetRate+0x1a>
			div = 2;/* No other dividers supported */
1a001236:	2302      	movs	r3, #2
1a001238:	e7fa      	b.n	1a001230 <Chip_Clock_GetRate+0x38>
1a00123a:	bf00      	nop
1a00123c:	40052000 	.word	0x40052000
1a001240:	40051000 	.word	0x40051000

1a001244 <Chip_UART_GetIndex>:

/* Returns clock index for the peripheral block */
static int Chip_UART_GetIndex(LPC_USART_T *pUART)
{
	uint32_t base = (uint32_t) pUART;
	switch(base) {
1a001244:	4b09      	ldr	r3, [pc, #36]	; (1a00126c <Chip_UART_GetIndex+0x28>)
1a001246:	4298      	cmp	r0, r3
1a001248:	d009      	beq.n	1a00125e <Chip_UART_GetIndex+0x1a>
1a00124a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
1a00124e:	4298      	cmp	r0, r3
1a001250:	d007      	beq.n	1a001262 <Chip_UART_GetIndex+0x1e>
1a001252:	f5a3 2380 	sub.w	r3, r3, #262144	; 0x40000
1a001256:	4298      	cmp	r0, r3
1a001258:	d005      	beq.n	1a001266 <Chip_UART_GetIndex+0x22>
		case LPC_USART0_BASE:
			return 0;
1a00125a:	2000      	movs	r0, #0
1a00125c:	4770      	bx	lr
		case LPC_UART1_BASE:
			return 1;
		case LPC_USART2_BASE:
			return 2;
1a00125e:	2002      	movs	r0, #2
1a001260:	4770      	bx	lr
		case LPC_USART3_BASE:
			return 3;
1a001262:	2003      	movs	r0, #3
1a001264:	4770      	bx	lr
			return 1;
1a001266:	2001      	movs	r0, #1
		default:
			return 0; /* Should never come here */
	}
}
1a001268:	4770      	bx	lr
1a00126a:	bf00      	nop
1a00126c:	400c1000 	.word	0x400c1000

1a001270 <Chip_UART_Init>:
 * Public functions
 ****************************************************************************/

/* Initializes the pUART peripheral */
void Chip_UART_Init(LPC_USART_T *pUART)
{
1a001270:	b530      	push	{r4, r5, lr}
1a001272:	b083      	sub	sp, #12
1a001274:	4604      	mov	r4, r0
    volatile uint32_t tmp;

	/* Enable UART clocking. UART base clock(s) must already be enabled */
	Chip_Clock_EnableOpts(UART_PClock[Chip_UART_GetIndex(pUART)], true, true, 1);
1a001276:	f7ff ffe5 	bl	1a001244 <Chip_UART_GetIndex>
1a00127a:	2301      	movs	r3, #1
1a00127c:	461a      	mov	r2, r3
1a00127e:	4619      	mov	r1, r3
1a001280:	4d0e      	ldr	r5, [pc, #56]	; (1a0012bc <Chip_UART_Init+0x4c>)
1a001282:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
1a001286:	f7ff ff7f 	bl	1a001188 <Chip_Clock_EnableOpts>
	pUART->FCR = fcr;
1a00128a:	2307      	movs	r3, #7
1a00128c:	60a3      	str	r3, [r4, #8]
    pUART->TER2 = 0;
1a00128e:	2300      	movs	r3, #0
1a001290:	65e3      	str	r3, [r4, #92]	; 0x5c

    /* Disable Tx */
    Chip_UART_TXDisable(pUART);

    /* Disable interrupts */
	pUART->IER = 0;
1a001292:	6063      	str	r3, [r4, #4]
	/* Set LCR to default state */
	pUART->LCR = 0;
1a001294:	60e3      	str	r3, [r4, #12]
	/* Set ACR to default state */
	pUART->ACR = 0;
1a001296:	6223      	str	r3, [r4, #32]
    /* Set RS485 control to default state */
	pUART->RS485CTRL = 0;
1a001298:	64e3      	str	r3, [r4, #76]	; 0x4c
	/* Set RS485 delay timer to default state */
	pUART->RS485DLY = 0;
1a00129a:	6563      	str	r3, [r4, #84]	; 0x54
	/* Set RS485 addr match to default state */
	pUART->RS485ADRMATCH = 0;
1a00129c:	6523      	str	r3, [r4, #80]	; 0x50

    /* Clear MCR */
    if (pUART == LPC_UART1) {
1a00129e:	4b08      	ldr	r3, [pc, #32]	; (1a0012c0 <Chip_UART_Init+0x50>)
1a0012a0:	429c      	cmp	r4, r3
1a0012a2:	d006      	beq.n	1a0012b2 <Chip_UART_Init+0x42>
	pUART->LCR = config;
1a0012a4:	2303      	movs	r3, #3
1a0012a6:	60e3      	str	r3, [r4, #12]

	/* Default 8N1, with DLAB disabled */
	Chip_UART_ConfigData(pUART, (UART_LCR_WLEN8 | UART_LCR_SBS_1BIT | UART_LCR_PARITY_DIS));

	/* Disable fractional divider */
	pUART->FDR = 0x10;
1a0012a8:	2310      	movs	r3, #16
1a0012aa:	62a3      	str	r3, [r4, #40]	; 0x28

    (void) tmp;
1a0012ac:	9b01      	ldr	r3, [sp, #4]
}
1a0012ae:	b003      	add	sp, #12
1a0012b0:	bd30      	pop	{r4, r5, pc}
		pUART->MCR = 0;
1a0012b2:	2300      	movs	r3, #0
1a0012b4:	6123      	str	r3, [r4, #16]
		tmp = pUART->MSR;
1a0012b6:	69a3      	ldr	r3, [r4, #24]
1a0012b8:	9301      	str	r3, [sp, #4]
1a0012ba:	e7f3      	b.n	1a0012a4 <Chip_UART_Init+0x34>
1a0012bc:	1a007488 	.word	0x1a007488
1a0012c0:	40082000 	.word	0x40082000

1a0012c4 <Chip_UART_SetBaudFDR>:
    Chip_UART_ABIntHandler(pUART);
}

/* Determines and sets best dividers to get a target baud rate */
uint32_t Chip_UART_SetBaudFDR(LPC_USART_T *pUART, uint32_t baud)
{
1a0012c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a0012c8:	b083      	sub	sp, #12
1a0012ca:	9001      	str	r0, [sp, #4]
1a0012cc:	4688      	mov	r8, r1
	uint32_t sdiv = 0, sm = 1, sd = 0;
	uint32_t pclk, m, d;
	uint32_t odiff = -1UL; /* old best diff */

	/* Get base clock for the corresponding UART */
	pclk = Chip_Clock_GetRate(UART_BClock[Chip_UART_GetIndex(pUART)]);
1a0012ce:	f7ff ffb9 	bl	1a001244 <Chip_UART_GetIndex>
1a0012d2:	4b32      	ldr	r3, [pc, #200]	; (1a00139c <Chip_UART_SetBaudFDR+0xd8>)
1a0012d4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
1a0012d8:	f7ff ff8e 	bl	1a0011f8 <Chip_Clock_GetRate>
1a0012dc:	4606      	mov	r6, r0
	uint32_t odiff = -1UL; /* old best diff */
1a0012de:	f04f 37ff 	mov.w	r7, #4294967295

	/* Loop through all possible fractional divider values */
	for (m = 1; odiff && m < 16; m++) {
1a0012e2:	2401      	movs	r4, #1
	uint32_t sdiv = 0, sm = 1, sd = 0;
1a0012e4:	f04f 0b00 	mov.w	fp, #0
1a0012e8:	46a2      	mov	sl, r4
1a0012ea:	46d9      	mov	r9, fp
	for (m = 1; odiff && m < 16; m++) {
1a0012ec:	e02a      	b.n	1a001344 <Chip_UART_SetBaudFDR+0x80>
			/* Upper 32-bit of dval has div */
			div = (uint32_t) (dval >> 32);

			/* Closer to next div */
			if ((int)diff < 0) {
				diff = -diff;
1a0012ee:	4242      	negs	r2, r0
				div ++;
1a0012f0:	1c4b      	adds	r3, r1, #1
1a0012f2:	e017      	b.n	1a001324 <Chip_UART_SetBaudFDR+0x60>
			sd = d;
			sm = m;
			odiff = diff;

			/* On perfect match, break loop */
			if(!diff) {
1a0012f4:	b30a      	cbz	r2, 1a00133a <Chip_UART_SetBaudFDR+0x76>
			odiff = diff;
1a0012f6:	4617      	mov	r7, r2
			sd = d;
1a0012f8:	46ab      	mov	fp, r5
			sm = m;
1a0012fa:	46a2      	mov	sl, r4
			sdiv = div;
1a0012fc:	4699      	mov	r9, r3
		for (d = 0; d < m; d++) {
1a0012fe:	3501      	adds	r5, #1
1a001300:	42ac      	cmp	r4, r5
1a001302:	d91e      	bls.n	1a001342 <Chip_UART_SetBaudFDR+0x7e>
			uint64_t dval = (((uint64_t) pclk << 28) * m) / (baud * (m + d));
1a001304:	0933      	lsrs	r3, r6, #4
1a001306:	0730      	lsls	r0, r6, #28
1a001308:	fba4 0100 	umull	r0, r1, r4, r0
1a00130c:	fb04 1103 	mla	r1, r4, r3, r1
1a001310:	1962      	adds	r2, r4, r5
1a001312:	fb08 f202 	mul.w	r2, r8, r2
1a001316:	2300      	movs	r3, #0
1a001318:	f000 fee6 	bl	1a0020e8 <__aeabi_uldivmod>
			diff = (uint32_t) dval;
1a00131c:	4602      	mov	r2, r0
			div = (uint32_t) (dval >> 32);
1a00131e:	460b      	mov	r3, r1
			if ((int)diff < 0) {
1a001320:	2800      	cmp	r0, #0
1a001322:	dbe4      	blt.n	1a0012ee <Chip_UART_SetBaudFDR+0x2a>
			if (odiff < diff || !div || (div >> 16) || (div < 3 && d)) {
1a001324:	4297      	cmp	r7, r2
1a001326:	d3ea      	bcc.n	1a0012fe <Chip_UART_SetBaudFDR+0x3a>
1a001328:	2b00      	cmp	r3, #0
1a00132a:	d0e8      	beq.n	1a0012fe <Chip_UART_SetBaudFDR+0x3a>
1a00132c:	0c19      	lsrs	r1, r3, #16
1a00132e:	d1e6      	bne.n	1a0012fe <Chip_UART_SetBaudFDR+0x3a>
1a001330:	2b02      	cmp	r3, #2
1a001332:	d8df      	bhi.n	1a0012f4 <Chip_UART_SetBaudFDR+0x30>
1a001334:	2d00      	cmp	r5, #0
1a001336:	d0dd      	beq.n	1a0012f4 <Chip_UART_SetBaudFDR+0x30>
1a001338:	e7e1      	b.n	1a0012fe <Chip_UART_SetBaudFDR+0x3a>
			odiff = diff;
1a00133a:	4617      	mov	r7, r2
			sd = d;
1a00133c:	46ab      	mov	fp, r5
			sm = m;
1a00133e:	46a2      	mov	sl, r4
			sdiv = div;
1a001340:	4699      	mov	r9, r3
	for (m = 1; odiff && m < 16; m++) {
1a001342:	3401      	adds	r4, #1
1a001344:	b11f      	cbz	r7, 1a00134e <Chip_UART_SetBaudFDR+0x8a>
1a001346:	2c0f      	cmp	r4, #15
1a001348:	d801      	bhi.n	1a00134e <Chip_UART_SetBaudFDR+0x8a>
		for (d = 0; d < m; d++) {
1a00134a:	2500      	movs	r5, #0
1a00134c:	e7d8      	b.n	1a001300 <Chip_UART_SetBaudFDR+0x3c>
			}
		}
	}

	/* Return 0 if a vaild divisor is not possible */
	if (!sdiv) {
1a00134e:	f1b9 0f00 	cmp.w	r9, #0
1a001352:	d01e      	beq.n	1a001392 <Chip_UART_SetBaudFDR+0xce>
	pUART->LCR |= UART_LCR_DLAB_EN;
1a001354:	9a01      	ldr	r2, [sp, #4]
1a001356:	4611      	mov	r1, r2
1a001358:	68d3      	ldr	r3, [r2, #12]
1a00135a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a00135e:	60d3      	str	r3, [r2, #12]
	pUART->DLL = (uint32_t) dll;
1a001360:	fa5f f389 	uxtb.w	r3, r9
1a001364:	6013      	str	r3, [r2, #0]
	pUART->DLM = (uint32_t) dlm;
1a001366:	f3c9 2307 	ubfx	r3, r9, #8, #8
1a00136a:	6053      	str	r3, [r2, #4]
	pUART->LCR &= ~UART_LCR_DLAB_EN;
1a00136c:	68d3      	ldr	r3, [r2, #12]
1a00136e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a001372:	60d3      	str	r3, [r2, #12]
	Chip_UART_EnableDivisorAccess(pUART);
	Chip_UART_SetDivisorLatches(pUART, UART_LOAD_DLL(sdiv), UART_LOAD_DLM(sdiv));
	Chip_UART_DisableDivisorAccess(pUART);

	/* Set best fractional divider */
	pUART->FDR = (UART_FDR_MULVAL(sm) | UART_FDR_DIVADDVAL(sd));
1a001374:	ea4f 130a 	mov.w	r3, sl, lsl #4
1a001378:	b2db      	uxtb	r3, r3
1a00137a:	f00b 020f 	and.w	r2, fp, #15
1a00137e:	4313      	orrs	r3, r2
1a001380:	628b      	str	r3, [r1, #40]	; 0x28

	/* Return actual baud rate */
	return (pclk >> 4) * sm / (sdiv * (sm + sd));
1a001382:	0933      	lsrs	r3, r6, #4
1a001384:	fb0a f303 	mul.w	r3, sl, r3
1a001388:	44da      	add	sl, fp
1a00138a:	fb09 f90a 	mul.w	r9, r9, sl
1a00138e:	fbb3 f9f9 	udiv	r9, r3, r9
}
1a001392:	4648      	mov	r0, r9
1a001394:	b003      	add	sp, #12
1a001396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00139a:	bf00      	nop
1a00139c:	1a007480 	.word	0x1a007480

1a0013a0 <SystemInit>:
 */

#include <board.h>

void SystemInit(void)
{
1a0013a0:	b508      	push	{r3, lr}
   extern void * const g_pfnVectors[];
   SCB->VTOR = (unsigned int) &g_pfnVectors;
1a0013a2:	4a0b      	ldr	r2, [pc, #44]	; (1a0013d0 <SystemInit+0x30>)
1a0013a4:	4b0b      	ldr	r3, [pc, #44]	; (1a0013d4 <SystemInit+0x34>)
1a0013a6:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE uint32_t SCB_GetFPUType(void)
{
  uint32_t mvfr0;

  mvfr0 = FPU->MVFR0;
1a0013a8:	f503 730c 	add.w	r3, r3, #560	; 0x230
1a0013ac:	691b      	ldr	r3, [r3, #16]
  if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1a0013ae:	f403 637f 	and.w	r3, r3, #4080	; 0xff0
1a0013b2:	2b20      	cmp	r3, #32
1a0013b4:	d004      	beq.n	1a0013c0 <SystemInit+0x20>

   if (SCB_GetFPUType() > 0)
      SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */

   /* Board specific SystemInit */
   Board_SystemInit();
1a0013b6:	f7ff f9cd 	bl	1a000754 <Board_SystemInit>
   Board_Init();
1a0013ba:	f7ff faa3 	bl	1a000904 <Board_Init>
}
1a0013be:	bd08      	pop	{r3, pc}
      SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
1a0013c0:	4a04      	ldr	r2, [pc, #16]	; (1a0013d4 <SystemInit+0x34>)
1a0013c2:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
1a0013c6:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
1a0013ca:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
1a0013ce:	e7f2      	b.n	1a0013b6 <SystemInit+0x16>
1a0013d0:	1a000000 	.word	0x1a000000
1a0013d4:	e000ed00 	.word	0xe000ed00

1a0013d8 <cyclesCounterInit>:
 * @return TRUE si esta OK, FALSE en caso de error.
 */
bool_t cyclesCounterInit( uint32_t clockSpeed )
{
   //Asigna  a la variable local ClockSpeed el valor recibido como argumento.
   ClockSpeed = clockSpeed;
1a0013d8:	4b04      	ldr	r3, [pc, #16]	; (1a0013ec <cyclesCounterInit+0x14>)
1a0013da:	6018      	str	r0, [r3, #0]
   //Iniciar el contador de ciclos de clock.
   DWT_CTRL  |= 1; // *DWT_CTRL  |= 1;
1a0013dc:	4a04      	ldr	r2, [pc, #16]	; (1a0013f0 <cyclesCounterInit+0x18>)
1a0013de:	6813      	ldr	r3, [r2, #0]
1a0013e0:	f043 0301 	orr.w	r3, r3, #1
1a0013e4:	6013      	str	r3, [r2, #0]
   return TRUE;
}
1a0013e6:	2001      	movs	r0, #1
1a0013e8:	4770      	bx	lr
1a0013ea:	bf00      	nop
1a0013ec:	10000038 	.word	0x10000038
1a0013f0:	e0001000 	.word	0xe0001000

1a0013f4 <gpioObtainPinInit>:

static void gpioObtainPinInit( gpioMap_t pin,
                               int8_t *pinNamePort, int8_t *pinNamePin,
                               int8_t *func, int8_t *gpioPort,
                               int8_t *gpioPin )
{
1a0013f4:	b430      	push	{r4, r5}

   *pinNamePort = gpioPinsInit[pin].pinName.port;
1a0013f6:	4d0b      	ldr	r5, [pc, #44]	; (1a001424 <gpioObtainPinInit+0x30>)
1a0013f8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
1a0013fc:	182c      	adds	r4, r5, r0
1a0013fe:	5628      	ldrsb	r0, [r5, r0]
1a001400:	7008      	strb	r0, [r1, #0]
   *pinNamePin  = gpioPinsInit[pin].pinName.pin;
1a001402:	f994 1001 	ldrsb.w	r1, [r4, #1]
1a001406:	7011      	strb	r1, [r2, #0]
   *func        = gpioPinsInit[pin].func;
1a001408:	f994 2002 	ldrsb.w	r2, [r4, #2]
1a00140c:	701a      	strb	r2, [r3, #0]
   *gpioPort    = gpioPinsInit[pin].gpio.port;
1a00140e:	f994 2003 	ldrsb.w	r2, [r4, #3]
1a001412:	9b02      	ldr	r3, [sp, #8]
1a001414:	701a      	strb	r2, [r3, #0]
   *gpioPin     = gpioPinsInit[pin].gpio.pin;
1a001416:	f994 2004 	ldrsb.w	r2, [r4, #4]
1a00141a:	9b03      	ldr	r3, [sp, #12]
1a00141c:	701a      	strb	r2, [r3, #0]
}
1a00141e:	bc30      	pop	{r4, r5}
1a001420:	4770      	bx	lr
1a001422:	bf00      	nop
1a001424:	1a007490 	.word	0x1a007490

1a001428 <gpioInit>:

/*==================[external functions definition]==========================*/

bool_t gpioInit( gpioMap_t pin, gpioInit_t config )
{
   if( pin == VCC ){
1a001428:	f110 0f02 	cmn.w	r0, #2
1a00142c:	f000 80c7 	beq.w	1a0015be <gpioInit+0x196>
	  return FALSE;
   }
   if( pin == GND ){
1a001430:	f1b0 3fff 	cmp.w	r0, #4294967295
1a001434:	f000 80c5 	beq.w	1a0015c2 <gpioInit+0x19a>
{
1a001438:	b570      	push	{r4, r5, r6, lr}
1a00143a:	b084      	sub	sp, #16
1a00143c:	460c      	mov	r4, r1
	  return FALSE;
   }

   bool_t ret_val     = 1;

   int8_t pinNamePort = 0;
1a00143e:	2300      	movs	r3, #0
1a001440:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a001444:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a001448:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a00144c:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a001450:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a001454:	f10d 030b 	add.w	r3, sp, #11
1a001458:	9301      	str	r3, [sp, #4]
1a00145a:	ab03      	add	r3, sp, #12
1a00145c:	9300      	str	r3, [sp, #0]
1a00145e:	f10d 030d 	add.w	r3, sp, #13
1a001462:	f10d 020e 	add.w	r2, sp, #14
1a001466:	f10d 010f 	add.w	r1, sp, #15
1a00146a:	f7ff ffc3 	bl	1a0013f4 <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   switch(config) {
1a00146e:	2c05      	cmp	r4, #5
1a001470:	f200 80a9 	bhi.w	1a0015c6 <gpioInit+0x19e>
1a001474:	e8df f004 	tbb	[pc, r4]
1a001478:	45278109 	.word	0x45278109
1a00147c:	0363      	.short	0x0363

   case GPIO_ENABLE:
      /* Initializes GPIO */
      Chip_GPIO_Init(LPC_GPIO_PORT);
1a00147e:	4853      	ldr	r0, [pc, #332]	; (1a0015cc <gpioInit+0x1a4>)
1a001480:	f7ff fafe 	bl	1a000a80 <Chip_GPIO_Init>
   bool_t ret_val     = 1;
1a001484:	2001      	movs	r0, #1
      break;
   }

   return ret_val;

}
1a001486:	b004      	add	sp, #16
1a001488:	bd70      	pop	{r4, r5, r6, pc}
      Chip_SCU_PinMux(
1a00148a:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a00148e:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001492:	f89d 200d 	ldrb.w	r2, [sp, #13]
	LPC_SCU->SFSP[port][pin] = modefunc;
1a001496:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a00149a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a00149e:	494c      	ldr	r1, [pc, #304]	; (1a0015d0 <gpioInit+0x1a8>)
1a0014a0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a0014a4:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a0014a8:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a0014ac:	2001      	movs	r0, #1
1a0014ae:	fa00 f102 	lsl.w	r1, r0, r2
{
	if (out) {
		pGPIO->DIR[portNum] |= bitValue;
	}
	else {
		pGPIO->DIR[portNum] &= ~bitValue;
1a0014b2:	4c46      	ldr	r4, [pc, #280]	; (1a0015cc <gpioInit+0x1a4>)
1a0014b4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a0014b8:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a0014bc:	ea22 0201 	bic.w	r2, r2, r1
1a0014c0:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a0014c4:	e7df      	b.n	1a001486 <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a0014c6:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a0014ca:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a0014ce:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a0014d2:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
1a0014d6:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a0014da:	493d      	ldr	r1, [pc, #244]	; (1a0015d0 <gpioInit+0x1a8>)
1a0014dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a0014e0:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a0014e4:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a0014e8:	2001      	movs	r0, #1
1a0014ea:	fa00 f102 	lsl.w	r1, r0, r2
1a0014ee:	4c37      	ldr	r4, [pc, #220]	; (1a0015cc <gpioInit+0x1a4>)
1a0014f0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a0014f4:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a0014f8:	ea22 0201 	bic.w	r2, r2, r1
1a0014fc:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a001500:	e7c1      	b.n	1a001486 <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a001502:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001506:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a00150a:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a00150e:	f042 02d8 	orr.w	r2, r2, #216	; 0xd8
1a001512:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a001516:	492e      	ldr	r1, [pc, #184]	; (1a0015d0 <gpioInit+0x1a8>)
1a001518:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a00151c:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a001520:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001524:	2001      	movs	r0, #1
1a001526:	fa00 f102 	lsl.w	r1, r0, r2
1a00152a:	4c28      	ldr	r4, [pc, #160]	; (1a0015cc <gpioInit+0x1a4>)
1a00152c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a001530:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a001534:	ea22 0201 	bic.w	r2, r2, r1
1a001538:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a00153c:	e7a3      	b.n	1a001486 <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a00153e:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001542:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001546:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a00154a:	f042 02c8 	orr.w	r2, r2, #200	; 0xc8
1a00154e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a001552:	491f      	ldr	r1, [pc, #124]	; (1a0015d0 <gpioInit+0x1a8>)
1a001554:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a001558:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a00155c:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001560:	2001      	movs	r0, #1
1a001562:	fa00 f102 	lsl.w	r1, r0, r2
1a001566:	4c19      	ldr	r4, [pc, #100]	; (1a0015cc <gpioInit+0x1a4>)
1a001568:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a00156c:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a001570:	ea22 0201 	bic.w	r2, r2, r1
1a001574:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a001578:	e785      	b.n	1a001486 <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a00157a:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a00157e:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001582:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a001586:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a00158a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a00158e:	4910      	ldr	r1, [pc, #64]	; (1a0015d0 <gpioInit+0x1a8>)
1a001590:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_OUTPUT );
1a001594:	f89d 400c 	ldrb.w	r4, [sp, #12]
1a001598:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a00159c:	2001      	movs	r0, #1
1a00159e:	fa00 f102 	lsl.w	r1, r0, r2
		pGPIO->DIR[portNum] |= bitValue;
1a0015a2:	4b0a      	ldr	r3, [pc, #40]	; (1a0015cc <gpioInit+0x1a4>)
1a0015a4:	f504 6500 	add.w	r5, r4, #2048	; 0x800
1a0015a8:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1a0015ac:	4331      	orrs	r1, r6
1a0015ae:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
      Chip_GPIO_SetPinState( LPC_GPIO_PORT, gpioPort, gpioPin, 0);
1a0015b2:	b2d2      	uxtb	r2, r2
	pGPIO->B[port][pin] = setting;
1a0015b4:	eb03 1344 	add.w	r3, r3, r4, lsl #5
1a0015b8:	2100      	movs	r1, #0
1a0015ba:	5499      	strb	r1, [r3, r2]
1a0015bc:	e763      	b.n	1a001486 <gpioInit+0x5e>
	  return FALSE;
1a0015be:	2000      	movs	r0, #0
1a0015c0:	4770      	bx	lr
	  return FALSE;
1a0015c2:	2000      	movs	r0, #0
}
1a0015c4:	4770      	bx	lr
      ret_val = 0;
1a0015c6:	2000      	movs	r0, #0
1a0015c8:	e75d      	b.n	1a001486 <gpioInit+0x5e>
1a0015ca:	bf00      	nop
1a0015cc:	400f4000 	.word	0x400f4000
1a0015d0:	40086000 	.word	0x40086000

1a0015d4 <gpioWrite>:


bool_t gpioWrite( gpioMap_t pin, bool_t value )
{
   if( pin == VCC ){
1a0015d4:	f110 0f02 	cmn.w	r0, #2
1a0015d8:	d02d      	beq.n	1a001636 <gpioWrite+0x62>
	  return FALSE;
   }
   if( pin == GND ){
1a0015da:	f1b0 3fff 	cmp.w	r0, #4294967295
1a0015de:	d02c      	beq.n	1a00163a <gpioWrite+0x66>
{
1a0015e0:	b510      	push	{r4, lr}
1a0015e2:	b084      	sub	sp, #16
1a0015e4:	460c      	mov	r4, r1
	  return FALSE;
   }

   bool_t ret_val     = 1;

   int8_t pinNamePort = 0;
1a0015e6:	2300      	movs	r3, #0
1a0015e8:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a0015ec:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a0015f0:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a0015f4:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a0015f8:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a0015fc:	f10d 030b 	add.w	r3, sp, #11
1a001600:	9301      	str	r3, [sp, #4]
1a001602:	ab03      	add	r3, sp, #12
1a001604:	9300      	str	r3, [sp, #0]
1a001606:	f10d 030d 	add.w	r3, sp, #13
1a00160a:	f10d 020e 	add.w	r2, sp, #14
1a00160e:	f10d 010f 	add.w	r1, sp, #15
1a001612:	f7ff feef 	bl	1a0013f4 <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   Chip_GPIO_SetPinState( LPC_GPIO_PORT, gpioPort, gpioPin, value);
1a001616:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a00161a:	f89d 200b 	ldrb.w	r2, [sp, #11]
1a00161e:	1c21      	adds	r1, r4, #0
1a001620:	bf18      	it	ne
1a001622:	2101      	movne	r1, #1
1a001624:	015b      	lsls	r3, r3, #5
1a001626:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a00162a:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a00162e:	5499      	strb	r1, [r3, r2]

   return ret_val;
1a001630:	2001      	movs	r0, #1
}
1a001632:	b004      	add	sp, #16
1a001634:	bd10      	pop	{r4, pc}
	  return FALSE;
1a001636:	2000      	movs	r0, #0
1a001638:	4770      	bx	lr
	  return FALSE;
1a00163a:	2000      	movs	r0, #0
}
1a00163c:	4770      	bx	lr

1a00163e <gpioRead>:
}


bool_t gpioRead( gpioMap_t pin )
{
   if( pin == VCC ){
1a00163e:	f110 0f02 	cmn.w	r0, #2
1a001642:	d02c      	beq.n	1a00169e <gpioRead+0x60>
      return TRUE;
   }
   if( pin == GND ){
1a001644:	f1b0 3fff 	cmp.w	r0, #4294967295
1a001648:	d02b      	beq.n	1a0016a2 <gpioRead+0x64>
{
1a00164a:	b500      	push	{lr}
1a00164c:	b085      	sub	sp, #20
      return FALSE;
   }

   bool_t ret_val     = OFF;

   int8_t pinNamePort = 0;
1a00164e:	2300      	movs	r3, #0
1a001650:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a001654:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a001658:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a00165c:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a001660:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a001664:	f10d 030b 	add.w	r3, sp, #11
1a001668:	9301      	str	r3, [sp, #4]
1a00166a:	ab03      	add	r3, sp, #12
1a00166c:	9300      	str	r3, [sp, #0]
1a00166e:	f10d 030d 	add.w	r3, sp, #13
1a001672:	f10d 020e 	add.w	r2, sp, #14
1a001676:	f10d 010f 	add.w	r1, sp, #15
1a00167a:	f7ff febb 	bl	1a0013f4 <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   ret_val = (bool_t) Chip_GPIO_ReadPortBit( LPC_GPIO_PORT, gpioPort, gpioPin );
1a00167e:	f99d 300c 	ldrsb.w	r3, [sp, #12]
1a001682:	f89d 200b 	ldrb.w	r2, [sp, #11]
	return (bool) pGPIO->B[port][pin];
1a001686:	015b      	lsls	r3, r3, #5
1a001688:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a00168c:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a001690:	5c98      	ldrb	r0, [r3, r2]
1a001692:	3000      	adds	r0, #0
1a001694:	bf18      	it	ne
1a001696:	2001      	movne	r0, #1

   return ret_val;
}
1a001698:	b005      	add	sp, #20
1a00169a:	f85d fb04 	ldr.w	pc, [sp], #4
      return TRUE;
1a00169e:	2001      	movs	r0, #1
1a0016a0:	4770      	bx	lr
      return FALSE;
1a0016a2:	2000      	movs	r0, #0
}
1a0016a4:	4770      	bx	lr
1a0016a6:	Address 0x1a0016a6 is out of bounds.


1a0016a8 <tickRead>:
   #ifdef USE_FREERTOS
      return xTaskGetTickCount();
   #else
      return tickCounter;
   #endif
}
1a0016a8:	4b01      	ldr	r3, [pc, #4]	; (1a0016b0 <tickRead+0x8>)
1a0016aa:	e9d3 0100 	ldrd	r0, r1, [r3]
1a0016ae:	4770      	bx	lr
1a0016b0:	10000a08 	.word	0x10000a08

1a0016b4 <tickPowerSet>:
void tickPowerSet( bool_t power )
{
   #ifdef USE_FREERTOS
      uartWriteString( UART_USB, "Use of tickPowerSet() in a program with freeRTOS has no effect\r\n" );
   #else
      if( power ) {
1a0016b4:	b118      	cbz	r0, 1a0016be <tickPowerSet+0xa>
         // Enable SysTick IRQ and SysTick Timer
         SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk |
1a0016b6:	4b04      	ldr	r3, [pc, #16]	; (1a0016c8 <tickPowerSet+0x14>)
1a0016b8:	2207      	movs	r2, #7
1a0016ba:	601a      	str	r2, [r3, #0]
1a0016bc:	4770      	bx	lr
                         SysTick_CTRL_TICKINT_Msk   |
                         SysTick_CTRL_ENABLE_Msk;
      } else {
         // Disable SysTick IRQ and SysTick Timer
         SysTick->CTRL = 0x0000000;
1a0016be:	4b02      	ldr	r3, [pc, #8]	; (1a0016c8 <tickPowerSet+0x14>)
1a0016c0:	2200      	movs	r2, #0
1a0016c2:	601a      	str	r2, [r3, #0]
      }
   #endif
}
1a0016c4:	4770      	bx	lr
1a0016c6:	bf00      	nop
1a0016c8:	e000e010 	.word	0xe000e010

1a0016cc <tickInit>:
{
1a0016cc:	b538      	push	{r3, r4, r5, lr}
      if( tickRateMSvalue == 0 ) {
1a0016ce:	ea50 0401 	orrs.w	r4, r0, r1
1a0016d2:	d02a      	beq.n	1a00172a <tickInit+0x5e>
         if( (tickRateMSvalue >= 1) && (tickRateMSvalue <= 50) ) {
1a0016d4:	f110 32ff 	adds.w	r2, r0, #4294967295
1a0016d8:	f141 33ff 	adc.w	r3, r1, #4294967295
1a0016dc:	2b00      	cmp	r3, #0
1a0016de:	bf08      	it	eq
1a0016e0:	2a32      	cmpeq	r2, #50	; 0x32
1a0016e2:	d227      	bcs.n	1a001734 <tickInit+0x68>
            tickRateMS = tickRateMSvalue;
1a0016e4:	4b14      	ldr	r3, [pc, #80]	; (1a001738 <tickInit+0x6c>)
1a0016e6:	e9c3 0100 	strd	r0, r1, [r3]
            SysTick_Config( SystemCoreClock * tickRateMSvalue / 1000 );
1a0016ea:	4b14      	ldr	r3, [pc, #80]	; (1a00173c <tickInit+0x70>)
1a0016ec:	681b      	ldr	r3, [r3, #0]
1a0016ee:	fba3 4500 	umull	r4, r5, r3, r0
1a0016f2:	fb03 5501 	mla	r5, r3, r1, r5
1a0016f6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
1a0016fa:	2300      	movs	r3, #0
1a0016fc:	4620      	mov	r0, r4
1a0016fe:	4629      	mov	r1, r5
1a001700:	f000 fcf2 	bl	1a0020e8 <__aeabi_uldivmod>
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
1a001704:	3801      	subs	r0, #1
1a001706:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
1a00170a:	d209      	bcs.n	1a001720 <tickInit+0x54>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
1a00170c:	4b0c      	ldr	r3, [pc, #48]	; (1a001740 <tickInit+0x74>)
1a00170e:	6058      	str	r0, [r3, #4]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
1a001710:	4a0c      	ldr	r2, [pc, #48]	; (1a001744 <tickInit+0x78>)
1a001712:	21e0      	movs	r1, #224	; 0xe0
1a001714:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
1a001718:	2200      	movs	r2, #0
1a00171a:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
1a00171c:	2207      	movs	r2, #7
1a00171e:	601a      	str	r2, [r3, #0]
            tickPowerSet( ON );
1a001720:	2001      	movs	r0, #1
1a001722:	f7ff ffc7 	bl	1a0016b4 <tickPowerSet>
      bool_t ret_val = 1;
1a001726:	2001      	movs	r0, #1
}
1a001728:	bd38      	pop	{r3, r4, r5, pc}
         tickPowerSet( OFF );
1a00172a:	2000      	movs	r0, #0
1a00172c:	f7ff ffc2 	bl	1a0016b4 <tickPowerSet>
         ret_val = 0;
1a001730:	2000      	movs	r0, #0
1a001732:	e7f9      	b.n	1a001728 <tickInit+0x5c>
            ret_val = 0;
1a001734:	2000      	movs	r0, #0
1a001736:	e7f7      	b.n	1a001728 <tickInit+0x5c>
1a001738:	10000040 	.word	0x10000040
1a00173c:	10000a4c 	.word	0x10000a4c
1a001740:	e000e010 	.word	0xe000e010
1a001744:	e000ed00 	.word	0xe000ed00

1a001748 <SysTick_Handler>:

//__attribute__ ((section(".after_vectors")))

// SysTick Timer ISR Handler
void tickerCallback( void )   // Before SysTick_Handler
{
1a001748:	b508      	push	{r3, lr}
   // Increment Tick counters
   tickCounter++;
1a00174a:	4a07      	ldr	r2, [pc, #28]	; (1a001768 <SysTick_Handler+0x20>)
1a00174c:	6813      	ldr	r3, [r2, #0]
1a00174e:	6851      	ldr	r1, [r2, #4]
1a001750:	3301      	adds	r3, #1
1a001752:	f141 0100 	adc.w	r1, r1, #0
1a001756:	6013      	str	r3, [r2, #0]
1a001758:	6051      	str	r1, [r2, #4]
   // Execute Tick Hook function if pointer is not NULL
   if( (tickHookFunction != NULL) ) {
1a00175a:	4b04      	ldr	r3, [pc, #16]	; (1a00176c <SysTick_Handler+0x24>)
1a00175c:	681b      	ldr	r3, [r3, #0]
1a00175e:	b113      	cbz	r3, 1a001766 <SysTick_Handler+0x1e>
      (* tickHookFunction )( callBackFuncParams );
1a001760:	4a03      	ldr	r2, [pc, #12]	; (1a001770 <SysTick_Handler+0x28>)
1a001762:	6810      	ldr	r0, [r2, #0]
1a001764:	4798      	blx	r3
   }
}
1a001766:	bd08      	pop	{r3, pc}
1a001768:	10000a08 	.word	0x10000a08
1a00176c:	10000a10 	.word	0x10000a10
1a001770:	10000a04 	.word	0x10000a04

1a001774 <USB0_IRQHandler>:
/**
 * @brief   Handle interrupt from USB
 * @return  Nothing
 */
#ifndef USB_HOST_ONLY // Parche para envitar conflictos con biblioteca host
void USB_IRQHandler(void){
1a001774:	b508      	push	{r3, lr}
   USBD_API->hw->ISR(g_hUsb);
1a001776:	4b04      	ldr	r3, [pc, #16]	; (1a001788 <USB0_IRQHandler+0x14>)
1a001778:	681b      	ldr	r3, [r3, #0]
1a00177a:	681b      	ldr	r3, [r3, #0]
1a00177c:	68db      	ldr	r3, [r3, #12]
1a00177e:	4a03      	ldr	r2, [pc, #12]	; (1a00178c <USB0_IRQHandler+0x18>)
1a001780:	6810      	ldr	r0, [r2, #0]
1a001782:	4798      	blx	r3
}
1a001784:	bd08      	pop	{r3, pc}
1a001786:	bf00      	nop
1a001788:	10000a50 	.word	0x10000a50
1a00178c:	10000a14 	.word	0x10000a14

1a001790 <boardInit>:

/*==================[external functions definition]==========================*/

/* Set up and initialize board hardware */
void boardInit(void)
{
1a001790:	b508      	push	{r3, lr}
   // Read clock settings and update SystemCoreClock variable
   SystemCoreClockUpdate();
1a001792:	f7ff fa87 	bl	1a000ca4 <SystemCoreClockUpdate>

   cyclesCounterInit( SystemCoreClock );
1a001796:	4b1a      	ldr	r3, [pc, #104]	; (1a001800 <boardInit+0x70>)
1a001798:	6818      	ldr	r0, [r3, #0]
1a00179a:	f7ff fe1d 	bl	1a0013d8 <cyclesCounterInit>

   // Inicializar el conteo de Ticks con resolucion de 1ms (si no se usa freeRTOS)
   #ifndef USE_FREERTOS
      tickInit( 1 );
1a00179e:	2001      	movs	r0, #1
1a0017a0:	2100      	movs	r1, #0
1a0017a2:	f7ff ff93 	bl	1a0016cc <tickInit>
      //#error CIAA-NXP

   #elif BOARD==edu_ciaa_nxp

      // Inicializar GPIOs
      gpioInit( 0, GPIO_ENABLE );
1a0017a6:	2105      	movs	r1, #5
1a0017a8:	2000      	movs	r0, #0
1a0017aa:	f7ff fe3d 	bl	1a001428 <gpioInit>

      // Configuracion de pines de entrada para Teclas de la EDU-CIAA-NXP
      gpioInit( TEC1, GPIO_INPUT );
1a0017ae:	2100      	movs	r1, #0
1a0017b0:	2024      	movs	r0, #36	; 0x24
1a0017b2:	f7ff fe39 	bl	1a001428 <gpioInit>
      gpioInit( TEC2, GPIO_INPUT );
1a0017b6:	2100      	movs	r1, #0
1a0017b8:	2025      	movs	r0, #37	; 0x25
1a0017ba:	f7ff fe35 	bl	1a001428 <gpioInit>
      gpioInit( TEC3, GPIO_INPUT );
1a0017be:	2100      	movs	r1, #0
1a0017c0:	2026      	movs	r0, #38	; 0x26
1a0017c2:	f7ff fe31 	bl	1a001428 <gpioInit>
      gpioInit( TEC4, GPIO_INPUT );
1a0017c6:	2100      	movs	r1, #0
1a0017c8:	2027      	movs	r0, #39	; 0x27
1a0017ca:	f7ff fe2d 	bl	1a001428 <gpioInit>

      // Configuracion de pines de salida para Leds de la EDU-CIAA-NXP
      gpioInit( LEDR, GPIO_OUTPUT );
1a0017ce:	2101      	movs	r1, #1
1a0017d0:	2028      	movs	r0, #40	; 0x28
1a0017d2:	f7ff fe29 	bl	1a001428 <gpioInit>
      gpioInit( LEDG, GPIO_OUTPUT );
1a0017d6:	2101      	movs	r1, #1
1a0017d8:	2029      	movs	r0, #41	; 0x29
1a0017da:	f7ff fe25 	bl	1a001428 <gpioInit>
      gpioInit( LEDB, GPIO_OUTPUT );
1a0017de:	2101      	movs	r1, #1
1a0017e0:	202a      	movs	r0, #42	; 0x2a
1a0017e2:	f7ff fe21 	bl	1a001428 <gpioInit>
      gpioInit( LED1, GPIO_OUTPUT );
1a0017e6:	2101      	movs	r1, #1
1a0017e8:	202b      	movs	r0, #43	; 0x2b
1a0017ea:	f7ff fe1d 	bl	1a001428 <gpioInit>
      gpioInit( LED2, GPIO_OUTPUT );
1a0017ee:	2101      	movs	r1, #1
1a0017f0:	202c      	movs	r0, #44	; 0x2c
1a0017f2:	f7ff fe19 	bl	1a001428 <gpioInit>
      gpioInit( LED3, GPIO_OUTPUT );
1a0017f6:	2101      	movs	r1, #1
1a0017f8:	202d      	movs	r0, #45	; 0x2d
1a0017fa:	f7ff fe15 	bl	1a001428 <gpioInit>
   #else
      #error BOARD compile variable must be defined

   #endif

}
1a0017fe:	bd08      	pop	{r3, pc}
1a001800:	10000a4c 	.word	0x10000a4c

1a001804 <delay>:
/* ---- Blocking Delay ---- */

// delay( 1, DELAY_US );

void delay( tick_t duration_ms )
{
1a001804:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a001808:	4680      	mov	r8, r0
1a00180a:	4689      	mov	r9, r1
   tick_t startTime = tickRead();
1a00180c:	f7ff ff4c 	bl	1a0016a8 <tickRead>
1a001810:	4606      	mov	r6, r0
1a001812:	460f      	mov	r7, r1
   while ( (tick_t)(tickRead() - startTime) < duration_ms/tickRateMS );
1a001814:	f7ff ff48 	bl	1a0016a8 <tickRead>
1a001818:	1b84      	subs	r4, r0, r6
1a00181a:	eb61 0507 	sbc.w	r5, r1, r7
1a00181e:	4b06      	ldr	r3, [pc, #24]	; (1a001838 <delay+0x34>)
1a001820:	e9d3 2300 	ldrd	r2, r3, [r3]
1a001824:	4640      	mov	r0, r8
1a001826:	4649      	mov	r1, r9
1a001828:	f000 fc5e 	bl	1a0020e8 <__aeabi_uldivmod>
1a00182c:	428d      	cmp	r5, r1
1a00182e:	bf08      	it	eq
1a001830:	4284      	cmpeq	r4, r0
1a001832:	d3ef      	bcc.n	1a001814 <delay+0x10>
}
1a001834:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a001838:	10000040 	.word	0x10000040

1a00183c <__aeabi_drsub>:
1a00183c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
1a001840:	e002      	b.n	1a001848 <__adddf3>
1a001842:	bf00      	nop

1a001844 <__aeabi_dsub>:
1a001844:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

1a001848 <__adddf3>:
1a001848:	b530      	push	{r4, r5, lr}
1a00184a:	ea4f 0441 	mov.w	r4, r1, lsl #1
1a00184e:	ea4f 0543 	mov.w	r5, r3, lsl #1
1a001852:	ea94 0f05 	teq	r4, r5
1a001856:	bf08      	it	eq
1a001858:	ea90 0f02 	teqeq	r0, r2
1a00185c:	bf1f      	itttt	ne
1a00185e:	ea54 0c00 	orrsne.w	ip, r4, r0
1a001862:	ea55 0c02 	orrsne.w	ip, r5, r2
1a001866:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
1a00186a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1a00186e:	f000 80e2 	beq.w	1a001a36 <__adddf3+0x1ee>
1a001872:	ea4f 5454 	mov.w	r4, r4, lsr #21
1a001876:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
1a00187a:	bfb8      	it	lt
1a00187c:	426d      	neglt	r5, r5
1a00187e:	dd0c      	ble.n	1a00189a <__adddf3+0x52>
1a001880:	442c      	add	r4, r5
1a001882:	ea80 0202 	eor.w	r2, r0, r2
1a001886:	ea81 0303 	eor.w	r3, r1, r3
1a00188a:	ea82 0000 	eor.w	r0, r2, r0
1a00188e:	ea83 0101 	eor.w	r1, r3, r1
1a001892:	ea80 0202 	eor.w	r2, r0, r2
1a001896:	ea81 0303 	eor.w	r3, r1, r3
1a00189a:	2d36      	cmp	r5, #54	; 0x36
1a00189c:	bf88      	it	hi
1a00189e:	bd30      	pophi	{r4, r5, pc}
1a0018a0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
1a0018a4:	ea4f 3101 	mov.w	r1, r1, lsl #12
1a0018a8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
1a0018ac:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
1a0018b0:	d002      	beq.n	1a0018b8 <__adddf3+0x70>
1a0018b2:	4240      	negs	r0, r0
1a0018b4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1a0018b8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
1a0018bc:	ea4f 3303 	mov.w	r3, r3, lsl #12
1a0018c0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
1a0018c4:	d002      	beq.n	1a0018cc <__adddf3+0x84>
1a0018c6:	4252      	negs	r2, r2
1a0018c8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
1a0018cc:	ea94 0f05 	teq	r4, r5
1a0018d0:	f000 80a7 	beq.w	1a001a22 <__adddf3+0x1da>
1a0018d4:	f1a4 0401 	sub.w	r4, r4, #1
1a0018d8:	f1d5 0e20 	rsbs	lr, r5, #32
1a0018dc:	db0d      	blt.n	1a0018fa <__adddf3+0xb2>
1a0018de:	fa02 fc0e 	lsl.w	ip, r2, lr
1a0018e2:	fa22 f205 	lsr.w	r2, r2, r5
1a0018e6:	1880      	adds	r0, r0, r2
1a0018e8:	f141 0100 	adc.w	r1, r1, #0
1a0018ec:	fa03 f20e 	lsl.w	r2, r3, lr
1a0018f0:	1880      	adds	r0, r0, r2
1a0018f2:	fa43 f305 	asr.w	r3, r3, r5
1a0018f6:	4159      	adcs	r1, r3
1a0018f8:	e00e      	b.n	1a001918 <__adddf3+0xd0>
1a0018fa:	f1a5 0520 	sub.w	r5, r5, #32
1a0018fe:	f10e 0e20 	add.w	lr, lr, #32
1a001902:	2a01      	cmp	r2, #1
1a001904:	fa03 fc0e 	lsl.w	ip, r3, lr
1a001908:	bf28      	it	cs
1a00190a:	f04c 0c02 	orrcs.w	ip, ip, #2
1a00190e:	fa43 f305 	asr.w	r3, r3, r5
1a001912:	18c0      	adds	r0, r0, r3
1a001914:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
1a001918:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a00191c:	d507      	bpl.n	1a00192e <__adddf3+0xe6>
1a00191e:	f04f 0e00 	mov.w	lr, #0
1a001922:	f1dc 0c00 	rsbs	ip, ip, #0
1a001926:	eb7e 0000 	sbcs.w	r0, lr, r0
1a00192a:	eb6e 0101 	sbc.w	r1, lr, r1
1a00192e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
1a001932:	d31b      	bcc.n	1a00196c <__adddf3+0x124>
1a001934:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
1a001938:	d30c      	bcc.n	1a001954 <__adddf3+0x10c>
1a00193a:	0849      	lsrs	r1, r1, #1
1a00193c:	ea5f 0030 	movs.w	r0, r0, rrx
1a001940:	ea4f 0c3c 	mov.w	ip, ip, rrx
1a001944:	f104 0401 	add.w	r4, r4, #1
1a001948:	ea4f 5244 	mov.w	r2, r4, lsl #21
1a00194c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
1a001950:	f080 809a 	bcs.w	1a001a88 <__adddf3+0x240>
1a001954:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
1a001958:	bf08      	it	eq
1a00195a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1a00195e:	f150 0000 	adcs.w	r0, r0, #0
1a001962:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a001966:	ea41 0105 	orr.w	r1, r1, r5
1a00196a:	bd30      	pop	{r4, r5, pc}
1a00196c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
1a001970:	4140      	adcs	r0, r0
1a001972:	eb41 0101 	adc.w	r1, r1, r1
1a001976:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a00197a:	f1a4 0401 	sub.w	r4, r4, #1
1a00197e:	d1e9      	bne.n	1a001954 <__adddf3+0x10c>
1a001980:	f091 0f00 	teq	r1, #0
1a001984:	bf04      	itt	eq
1a001986:	4601      	moveq	r1, r0
1a001988:	2000      	moveq	r0, #0
1a00198a:	fab1 f381 	clz	r3, r1
1a00198e:	bf08      	it	eq
1a001990:	3320      	addeq	r3, #32
1a001992:	f1a3 030b 	sub.w	r3, r3, #11
1a001996:	f1b3 0220 	subs.w	r2, r3, #32
1a00199a:	da0c      	bge.n	1a0019b6 <__adddf3+0x16e>
1a00199c:	320c      	adds	r2, #12
1a00199e:	dd08      	ble.n	1a0019b2 <__adddf3+0x16a>
1a0019a0:	f102 0c14 	add.w	ip, r2, #20
1a0019a4:	f1c2 020c 	rsb	r2, r2, #12
1a0019a8:	fa01 f00c 	lsl.w	r0, r1, ip
1a0019ac:	fa21 f102 	lsr.w	r1, r1, r2
1a0019b0:	e00c      	b.n	1a0019cc <__adddf3+0x184>
1a0019b2:	f102 0214 	add.w	r2, r2, #20
1a0019b6:	bfd8      	it	le
1a0019b8:	f1c2 0c20 	rsble	ip, r2, #32
1a0019bc:	fa01 f102 	lsl.w	r1, r1, r2
1a0019c0:	fa20 fc0c 	lsr.w	ip, r0, ip
1a0019c4:	bfdc      	itt	le
1a0019c6:	ea41 010c 	orrle.w	r1, r1, ip
1a0019ca:	4090      	lslle	r0, r2
1a0019cc:	1ae4      	subs	r4, r4, r3
1a0019ce:	bfa2      	ittt	ge
1a0019d0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
1a0019d4:	4329      	orrge	r1, r5
1a0019d6:	bd30      	popge	{r4, r5, pc}
1a0019d8:	ea6f 0404 	mvn.w	r4, r4
1a0019dc:	3c1f      	subs	r4, #31
1a0019de:	da1c      	bge.n	1a001a1a <__adddf3+0x1d2>
1a0019e0:	340c      	adds	r4, #12
1a0019e2:	dc0e      	bgt.n	1a001a02 <__adddf3+0x1ba>
1a0019e4:	f104 0414 	add.w	r4, r4, #20
1a0019e8:	f1c4 0220 	rsb	r2, r4, #32
1a0019ec:	fa20 f004 	lsr.w	r0, r0, r4
1a0019f0:	fa01 f302 	lsl.w	r3, r1, r2
1a0019f4:	ea40 0003 	orr.w	r0, r0, r3
1a0019f8:	fa21 f304 	lsr.w	r3, r1, r4
1a0019fc:	ea45 0103 	orr.w	r1, r5, r3
1a001a00:	bd30      	pop	{r4, r5, pc}
1a001a02:	f1c4 040c 	rsb	r4, r4, #12
1a001a06:	f1c4 0220 	rsb	r2, r4, #32
1a001a0a:	fa20 f002 	lsr.w	r0, r0, r2
1a001a0e:	fa01 f304 	lsl.w	r3, r1, r4
1a001a12:	ea40 0003 	orr.w	r0, r0, r3
1a001a16:	4629      	mov	r1, r5
1a001a18:	bd30      	pop	{r4, r5, pc}
1a001a1a:	fa21 f004 	lsr.w	r0, r1, r4
1a001a1e:	4629      	mov	r1, r5
1a001a20:	bd30      	pop	{r4, r5, pc}
1a001a22:	f094 0f00 	teq	r4, #0
1a001a26:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
1a001a2a:	bf06      	itte	eq
1a001a2c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
1a001a30:	3401      	addeq	r4, #1
1a001a32:	3d01      	subne	r5, #1
1a001a34:	e74e      	b.n	1a0018d4 <__adddf3+0x8c>
1a001a36:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1a001a3a:	bf18      	it	ne
1a001a3c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1a001a40:	d029      	beq.n	1a001a96 <__adddf3+0x24e>
1a001a42:	ea94 0f05 	teq	r4, r5
1a001a46:	bf08      	it	eq
1a001a48:	ea90 0f02 	teqeq	r0, r2
1a001a4c:	d005      	beq.n	1a001a5a <__adddf3+0x212>
1a001a4e:	ea54 0c00 	orrs.w	ip, r4, r0
1a001a52:	bf04      	itt	eq
1a001a54:	4619      	moveq	r1, r3
1a001a56:	4610      	moveq	r0, r2
1a001a58:	bd30      	pop	{r4, r5, pc}
1a001a5a:	ea91 0f03 	teq	r1, r3
1a001a5e:	bf1e      	ittt	ne
1a001a60:	2100      	movne	r1, #0
1a001a62:	2000      	movne	r0, #0
1a001a64:	bd30      	popne	{r4, r5, pc}
1a001a66:	ea5f 5c54 	movs.w	ip, r4, lsr #21
1a001a6a:	d105      	bne.n	1a001a78 <__adddf3+0x230>
1a001a6c:	0040      	lsls	r0, r0, #1
1a001a6e:	4149      	adcs	r1, r1
1a001a70:	bf28      	it	cs
1a001a72:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
1a001a76:	bd30      	pop	{r4, r5, pc}
1a001a78:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
1a001a7c:	bf3c      	itt	cc
1a001a7e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
1a001a82:	bd30      	popcc	{r4, r5, pc}
1a001a84:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a001a88:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
1a001a8c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
1a001a90:	f04f 0000 	mov.w	r0, #0
1a001a94:	bd30      	pop	{r4, r5, pc}
1a001a96:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1a001a9a:	bf1a      	itte	ne
1a001a9c:	4619      	movne	r1, r3
1a001a9e:	4610      	movne	r0, r2
1a001aa0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
1a001aa4:	bf1c      	itt	ne
1a001aa6:	460b      	movne	r3, r1
1a001aa8:	4602      	movne	r2, r0
1a001aaa:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1a001aae:	bf06      	itte	eq
1a001ab0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
1a001ab4:	ea91 0f03 	teqeq	r1, r3
1a001ab8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
1a001abc:	bd30      	pop	{r4, r5, pc}
1a001abe:	bf00      	nop

1a001ac0 <__aeabi_ui2d>:
1a001ac0:	f090 0f00 	teq	r0, #0
1a001ac4:	bf04      	itt	eq
1a001ac6:	2100      	moveq	r1, #0
1a001ac8:	4770      	bxeq	lr
1a001aca:	b530      	push	{r4, r5, lr}
1a001acc:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001ad0:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001ad4:	f04f 0500 	mov.w	r5, #0
1a001ad8:	f04f 0100 	mov.w	r1, #0
1a001adc:	e750      	b.n	1a001980 <__adddf3+0x138>
1a001ade:	bf00      	nop

1a001ae0 <__aeabi_i2d>:
1a001ae0:	f090 0f00 	teq	r0, #0
1a001ae4:	bf04      	itt	eq
1a001ae6:	2100      	moveq	r1, #0
1a001ae8:	4770      	bxeq	lr
1a001aea:	b530      	push	{r4, r5, lr}
1a001aec:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001af0:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001af4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
1a001af8:	bf48      	it	mi
1a001afa:	4240      	negmi	r0, r0
1a001afc:	f04f 0100 	mov.w	r1, #0
1a001b00:	e73e      	b.n	1a001980 <__adddf3+0x138>
1a001b02:	bf00      	nop

1a001b04 <__aeabi_f2d>:
1a001b04:	0042      	lsls	r2, r0, #1
1a001b06:	ea4f 01e2 	mov.w	r1, r2, asr #3
1a001b0a:	ea4f 0131 	mov.w	r1, r1, rrx
1a001b0e:	ea4f 7002 	mov.w	r0, r2, lsl #28
1a001b12:	bf1f      	itttt	ne
1a001b14:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
1a001b18:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
1a001b1c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
1a001b20:	4770      	bxne	lr
1a001b22:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
1a001b26:	bf08      	it	eq
1a001b28:	4770      	bxeq	lr
1a001b2a:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
1a001b2e:	bf04      	itt	eq
1a001b30:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
1a001b34:	4770      	bxeq	lr
1a001b36:	b530      	push	{r4, r5, lr}
1a001b38:	f44f 7460 	mov.w	r4, #896	; 0x380
1a001b3c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a001b40:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a001b44:	e71c      	b.n	1a001980 <__adddf3+0x138>
1a001b46:	bf00      	nop

1a001b48 <__aeabi_ul2d>:
1a001b48:	ea50 0201 	orrs.w	r2, r0, r1
1a001b4c:	bf08      	it	eq
1a001b4e:	4770      	bxeq	lr
1a001b50:	b530      	push	{r4, r5, lr}
1a001b52:	f04f 0500 	mov.w	r5, #0
1a001b56:	e00a      	b.n	1a001b6e <__aeabi_l2d+0x16>

1a001b58 <__aeabi_l2d>:
1a001b58:	ea50 0201 	orrs.w	r2, r0, r1
1a001b5c:	bf08      	it	eq
1a001b5e:	4770      	bxeq	lr
1a001b60:	b530      	push	{r4, r5, lr}
1a001b62:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
1a001b66:	d502      	bpl.n	1a001b6e <__aeabi_l2d+0x16>
1a001b68:	4240      	negs	r0, r0
1a001b6a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1a001b6e:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001b72:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001b76:	ea5f 5c91 	movs.w	ip, r1, lsr #22
1a001b7a:	f43f aed8 	beq.w	1a00192e <__adddf3+0xe6>
1a001b7e:	f04f 0203 	mov.w	r2, #3
1a001b82:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1a001b86:	bf18      	it	ne
1a001b88:	3203      	addne	r2, #3
1a001b8a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1a001b8e:	bf18      	it	ne
1a001b90:	3203      	addne	r2, #3
1a001b92:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
1a001b96:	f1c2 0320 	rsb	r3, r2, #32
1a001b9a:	fa00 fc03 	lsl.w	ip, r0, r3
1a001b9e:	fa20 f002 	lsr.w	r0, r0, r2
1a001ba2:	fa01 fe03 	lsl.w	lr, r1, r3
1a001ba6:	ea40 000e 	orr.w	r0, r0, lr
1a001baa:	fa21 f102 	lsr.w	r1, r1, r2
1a001bae:	4414      	add	r4, r2
1a001bb0:	e6bd      	b.n	1a00192e <__adddf3+0xe6>
1a001bb2:	bf00      	nop

1a001bb4 <__aeabi_dmul>:
1a001bb4:	b570      	push	{r4, r5, r6, lr}
1a001bb6:	f04f 0cff 	mov.w	ip, #255	; 0xff
1a001bba:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1a001bbe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1a001bc2:	bf1d      	ittte	ne
1a001bc4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1a001bc8:	ea94 0f0c 	teqne	r4, ip
1a001bcc:	ea95 0f0c 	teqne	r5, ip
1a001bd0:	f000 f8de 	bleq	1a001d90 <__aeabi_dmul+0x1dc>
1a001bd4:	442c      	add	r4, r5
1a001bd6:	ea81 0603 	eor.w	r6, r1, r3
1a001bda:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
1a001bde:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1a001be2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1a001be6:	bf18      	it	ne
1a001be8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
1a001bec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a001bf0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
1a001bf4:	d038      	beq.n	1a001c68 <__aeabi_dmul+0xb4>
1a001bf6:	fba0 ce02 	umull	ip, lr, r0, r2
1a001bfa:	f04f 0500 	mov.w	r5, #0
1a001bfe:	fbe1 e502 	umlal	lr, r5, r1, r2
1a001c02:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
1a001c06:	fbe0 e503 	umlal	lr, r5, r0, r3
1a001c0a:	f04f 0600 	mov.w	r6, #0
1a001c0e:	fbe1 5603 	umlal	r5, r6, r1, r3
1a001c12:	f09c 0f00 	teq	ip, #0
1a001c16:	bf18      	it	ne
1a001c18:	f04e 0e01 	orrne.w	lr, lr, #1
1a001c1c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
1a001c20:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
1a001c24:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
1a001c28:	d204      	bcs.n	1a001c34 <__aeabi_dmul+0x80>
1a001c2a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
1a001c2e:	416d      	adcs	r5, r5
1a001c30:	eb46 0606 	adc.w	r6, r6, r6
1a001c34:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
1a001c38:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
1a001c3c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
1a001c40:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
1a001c44:	ea4f 2ece 	mov.w	lr, lr, lsl #11
1a001c48:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
1a001c4c:	bf88      	it	hi
1a001c4e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1a001c52:	d81e      	bhi.n	1a001c92 <__aeabi_dmul+0xde>
1a001c54:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
1a001c58:	bf08      	it	eq
1a001c5a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1a001c5e:	f150 0000 	adcs.w	r0, r0, #0
1a001c62:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a001c66:	bd70      	pop	{r4, r5, r6, pc}
1a001c68:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
1a001c6c:	ea46 0101 	orr.w	r1, r6, r1
1a001c70:	ea40 0002 	orr.w	r0, r0, r2
1a001c74:	ea81 0103 	eor.w	r1, r1, r3
1a001c78:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
1a001c7c:	bfc2      	ittt	gt
1a001c7e:	ebd4 050c 	rsbsgt	r5, r4, ip
1a001c82:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1a001c86:	bd70      	popgt	{r4, r5, r6, pc}
1a001c88:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a001c8c:	f04f 0e00 	mov.w	lr, #0
1a001c90:	3c01      	subs	r4, #1
1a001c92:	f300 80ab 	bgt.w	1a001dec <__aeabi_dmul+0x238>
1a001c96:	f114 0f36 	cmn.w	r4, #54	; 0x36
1a001c9a:	bfde      	ittt	le
1a001c9c:	2000      	movle	r0, #0
1a001c9e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
1a001ca2:	bd70      	pople	{r4, r5, r6, pc}
1a001ca4:	f1c4 0400 	rsb	r4, r4, #0
1a001ca8:	3c20      	subs	r4, #32
1a001caa:	da35      	bge.n	1a001d18 <__aeabi_dmul+0x164>
1a001cac:	340c      	adds	r4, #12
1a001cae:	dc1b      	bgt.n	1a001ce8 <__aeabi_dmul+0x134>
1a001cb0:	f104 0414 	add.w	r4, r4, #20
1a001cb4:	f1c4 0520 	rsb	r5, r4, #32
1a001cb8:	fa00 f305 	lsl.w	r3, r0, r5
1a001cbc:	fa20 f004 	lsr.w	r0, r0, r4
1a001cc0:	fa01 f205 	lsl.w	r2, r1, r5
1a001cc4:	ea40 0002 	orr.w	r0, r0, r2
1a001cc8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
1a001ccc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a001cd0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1a001cd4:	fa21 f604 	lsr.w	r6, r1, r4
1a001cd8:	eb42 0106 	adc.w	r1, r2, r6
1a001cdc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a001ce0:	bf08      	it	eq
1a001ce2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a001ce6:	bd70      	pop	{r4, r5, r6, pc}
1a001ce8:	f1c4 040c 	rsb	r4, r4, #12
1a001cec:	f1c4 0520 	rsb	r5, r4, #32
1a001cf0:	fa00 f304 	lsl.w	r3, r0, r4
1a001cf4:	fa20 f005 	lsr.w	r0, r0, r5
1a001cf8:	fa01 f204 	lsl.w	r2, r1, r4
1a001cfc:	ea40 0002 	orr.w	r0, r0, r2
1a001d00:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001d04:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1a001d08:	f141 0100 	adc.w	r1, r1, #0
1a001d0c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a001d10:	bf08      	it	eq
1a001d12:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a001d16:	bd70      	pop	{r4, r5, r6, pc}
1a001d18:	f1c4 0520 	rsb	r5, r4, #32
1a001d1c:	fa00 f205 	lsl.w	r2, r0, r5
1a001d20:	ea4e 0e02 	orr.w	lr, lr, r2
1a001d24:	fa20 f304 	lsr.w	r3, r0, r4
1a001d28:	fa01 f205 	lsl.w	r2, r1, r5
1a001d2c:	ea43 0302 	orr.w	r3, r3, r2
1a001d30:	fa21 f004 	lsr.w	r0, r1, r4
1a001d34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001d38:	fa21 f204 	lsr.w	r2, r1, r4
1a001d3c:	ea20 0002 	bic.w	r0, r0, r2
1a001d40:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
1a001d44:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a001d48:	bf08      	it	eq
1a001d4a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a001d4e:	bd70      	pop	{r4, r5, r6, pc}
1a001d50:	f094 0f00 	teq	r4, #0
1a001d54:	d10f      	bne.n	1a001d76 <__aeabi_dmul+0x1c2>
1a001d56:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
1a001d5a:	0040      	lsls	r0, r0, #1
1a001d5c:	eb41 0101 	adc.w	r1, r1, r1
1a001d60:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a001d64:	bf08      	it	eq
1a001d66:	3c01      	subeq	r4, #1
1a001d68:	d0f7      	beq.n	1a001d5a <__aeabi_dmul+0x1a6>
1a001d6a:	ea41 0106 	orr.w	r1, r1, r6
1a001d6e:	f095 0f00 	teq	r5, #0
1a001d72:	bf18      	it	ne
1a001d74:	4770      	bxne	lr
1a001d76:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
1a001d7a:	0052      	lsls	r2, r2, #1
1a001d7c:	eb43 0303 	adc.w	r3, r3, r3
1a001d80:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
1a001d84:	bf08      	it	eq
1a001d86:	3d01      	subeq	r5, #1
1a001d88:	d0f7      	beq.n	1a001d7a <__aeabi_dmul+0x1c6>
1a001d8a:	ea43 0306 	orr.w	r3, r3, r6
1a001d8e:	4770      	bx	lr
1a001d90:	ea94 0f0c 	teq	r4, ip
1a001d94:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1a001d98:	bf18      	it	ne
1a001d9a:	ea95 0f0c 	teqne	r5, ip
1a001d9e:	d00c      	beq.n	1a001dba <__aeabi_dmul+0x206>
1a001da0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a001da4:	bf18      	it	ne
1a001da6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a001daa:	d1d1      	bne.n	1a001d50 <__aeabi_dmul+0x19c>
1a001dac:	ea81 0103 	eor.w	r1, r1, r3
1a001db0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001db4:	f04f 0000 	mov.w	r0, #0
1a001db8:	bd70      	pop	{r4, r5, r6, pc}
1a001dba:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a001dbe:	bf06      	itte	eq
1a001dc0:	4610      	moveq	r0, r2
1a001dc2:	4619      	moveq	r1, r3
1a001dc4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a001dc8:	d019      	beq.n	1a001dfe <__aeabi_dmul+0x24a>
1a001dca:	ea94 0f0c 	teq	r4, ip
1a001dce:	d102      	bne.n	1a001dd6 <__aeabi_dmul+0x222>
1a001dd0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
1a001dd4:	d113      	bne.n	1a001dfe <__aeabi_dmul+0x24a>
1a001dd6:	ea95 0f0c 	teq	r5, ip
1a001dda:	d105      	bne.n	1a001de8 <__aeabi_dmul+0x234>
1a001ddc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
1a001de0:	bf1c      	itt	ne
1a001de2:	4610      	movne	r0, r2
1a001de4:	4619      	movne	r1, r3
1a001de6:	d10a      	bne.n	1a001dfe <__aeabi_dmul+0x24a>
1a001de8:	ea81 0103 	eor.w	r1, r1, r3
1a001dec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001df0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1a001df4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
1a001df8:	f04f 0000 	mov.w	r0, #0
1a001dfc:	bd70      	pop	{r4, r5, r6, pc}
1a001dfe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1a001e02:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
1a001e06:	bd70      	pop	{r4, r5, r6, pc}

1a001e08 <__aeabi_ddiv>:
1a001e08:	b570      	push	{r4, r5, r6, lr}
1a001e0a:	f04f 0cff 	mov.w	ip, #255	; 0xff
1a001e0e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1a001e12:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1a001e16:	bf1d      	ittte	ne
1a001e18:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1a001e1c:	ea94 0f0c 	teqne	r4, ip
1a001e20:	ea95 0f0c 	teqne	r5, ip
1a001e24:	f000 f8a7 	bleq	1a001f76 <__aeabi_ddiv+0x16e>
1a001e28:	eba4 0405 	sub.w	r4, r4, r5
1a001e2c:	ea81 0e03 	eor.w	lr, r1, r3
1a001e30:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1a001e34:	ea4f 3101 	mov.w	r1, r1, lsl #12
1a001e38:	f000 8088 	beq.w	1a001f4c <__aeabi_ddiv+0x144>
1a001e3c:	ea4f 3303 	mov.w	r3, r3, lsl #12
1a001e40:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
1a001e44:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
1a001e48:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
1a001e4c:	ea4f 2202 	mov.w	r2, r2, lsl #8
1a001e50:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
1a001e54:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
1a001e58:	ea4f 2600 	mov.w	r6, r0, lsl #8
1a001e5c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
1a001e60:	429d      	cmp	r5, r3
1a001e62:	bf08      	it	eq
1a001e64:	4296      	cmpeq	r6, r2
1a001e66:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
1a001e6a:	f504 7440 	add.w	r4, r4, #768	; 0x300
1a001e6e:	d202      	bcs.n	1a001e76 <__aeabi_ddiv+0x6e>
1a001e70:	085b      	lsrs	r3, r3, #1
1a001e72:	ea4f 0232 	mov.w	r2, r2, rrx
1a001e76:	1ab6      	subs	r6, r6, r2
1a001e78:	eb65 0503 	sbc.w	r5, r5, r3
1a001e7c:	085b      	lsrs	r3, r3, #1
1a001e7e:	ea4f 0232 	mov.w	r2, r2, rrx
1a001e82:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
1a001e86:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
1a001e8a:	ebb6 0e02 	subs.w	lr, r6, r2
1a001e8e:	eb75 0e03 	sbcs.w	lr, r5, r3
1a001e92:	bf22      	ittt	cs
1a001e94:	1ab6      	subcs	r6, r6, r2
1a001e96:	4675      	movcs	r5, lr
1a001e98:	ea40 000c 	orrcs.w	r0, r0, ip
1a001e9c:	085b      	lsrs	r3, r3, #1
1a001e9e:	ea4f 0232 	mov.w	r2, r2, rrx
1a001ea2:	ebb6 0e02 	subs.w	lr, r6, r2
1a001ea6:	eb75 0e03 	sbcs.w	lr, r5, r3
1a001eaa:	bf22      	ittt	cs
1a001eac:	1ab6      	subcs	r6, r6, r2
1a001eae:	4675      	movcs	r5, lr
1a001eb0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
1a001eb4:	085b      	lsrs	r3, r3, #1
1a001eb6:	ea4f 0232 	mov.w	r2, r2, rrx
1a001eba:	ebb6 0e02 	subs.w	lr, r6, r2
1a001ebe:	eb75 0e03 	sbcs.w	lr, r5, r3
1a001ec2:	bf22      	ittt	cs
1a001ec4:	1ab6      	subcs	r6, r6, r2
1a001ec6:	4675      	movcs	r5, lr
1a001ec8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
1a001ecc:	085b      	lsrs	r3, r3, #1
1a001ece:	ea4f 0232 	mov.w	r2, r2, rrx
1a001ed2:	ebb6 0e02 	subs.w	lr, r6, r2
1a001ed6:	eb75 0e03 	sbcs.w	lr, r5, r3
1a001eda:	bf22      	ittt	cs
1a001edc:	1ab6      	subcs	r6, r6, r2
1a001ede:	4675      	movcs	r5, lr
1a001ee0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
1a001ee4:	ea55 0e06 	orrs.w	lr, r5, r6
1a001ee8:	d018      	beq.n	1a001f1c <__aeabi_ddiv+0x114>
1a001eea:	ea4f 1505 	mov.w	r5, r5, lsl #4
1a001eee:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
1a001ef2:	ea4f 1606 	mov.w	r6, r6, lsl #4
1a001ef6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
1a001efa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
1a001efe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
1a001f02:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
1a001f06:	d1c0      	bne.n	1a001e8a <__aeabi_ddiv+0x82>
1a001f08:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a001f0c:	d10b      	bne.n	1a001f26 <__aeabi_ddiv+0x11e>
1a001f0e:	ea41 0100 	orr.w	r1, r1, r0
1a001f12:	f04f 0000 	mov.w	r0, #0
1a001f16:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
1a001f1a:	e7b6      	b.n	1a001e8a <__aeabi_ddiv+0x82>
1a001f1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a001f20:	bf04      	itt	eq
1a001f22:	4301      	orreq	r1, r0
1a001f24:	2000      	moveq	r0, #0
1a001f26:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
1a001f2a:	bf88      	it	hi
1a001f2c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1a001f30:	f63f aeaf 	bhi.w	1a001c92 <__aeabi_dmul+0xde>
1a001f34:	ebb5 0c03 	subs.w	ip, r5, r3
1a001f38:	bf04      	itt	eq
1a001f3a:	ebb6 0c02 	subseq.w	ip, r6, r2
1a001f3e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1a001f42:	f150 0000 	adcs.w	r0, r0, #0
1a001f46:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a001f4a:	bd70      	pop	{r4, r5, r6, pc}
1a001f4c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
1a001f50:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
1a001f54:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
1a001f58:	bfc2      	ittt	gt
1a001f5a:	ebd4 050c 	rsbsgt	r5, r4, ip
1a001f5e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1a001f62:	bd70      	popgt	{r4, r5, r6, pc}
1a001f64:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a001f68:	f04f 0e00 	mov.w	lr, #0
1a001f6c:	3c01      	subs	r4, #1
1a001f6e:	e690      	b.n	1a001c92 <__aeabi_dmul+0xde>
1a001f70:	ea45 0e06 	orr.w	lr, r5, r6
1a001f74:	e68d      	b.n	1a001c92 <__aeabi_dmul+0xde>
1a001f76:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1a001f7a:	ea94 0f0c 	teq	r4, ip
1a001f7e:	bf08      	it	eq
1a001f80:	ea95 0f0c 	teqeq	r5, ip
1a001f84:	f43f af3b 	beq.w	1a001dfe <__aeabi_dmul+0x24a>
1a001f88:	ea94 0f0c 	teq	r4, ip
1a001f8c:	d10a      	bne.n	1a001fa4 <__aeabi_ddiv+0x19c>
1a001f8e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1a001f92:	f47f af34 	bne.w	1a001dfe <__aeabi_dmul+0x24a>
1a001f96:	ea95 0f0c 	teq	r5, ip
1a001f9a:	f47f af25 	bne.w	1a001de8 <__aeabi_dmul+0x234>
1a001f9e:	4610      	mov	r0, r2
1a001fa0:	4619      	mov	r1, r3
1a001fa2:	e72c      	b.n	1a001dfe <__aeabi_dmul+0x24a>
1a001fa4:	ea95 0f0c 	teq	r5, ip
1a001fa8:	d106      	bne.n	1a001fb8 <__aeabi_ddiv+0x1b0>
1a001faa:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1a001fae:	f43f aefd 	beq.w	1a001dac <__aeabi_dmul+0x1f8>
1a001fb2:	4610      	mov	r0, r2
1a001fb4:	4619      	mov	r1, r3
1a001fb6:	e722      	b.n	1a001dfe <__aeabi_dmul+0x24a>
1a001fb8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a001fbc:	bf18      	it	ne
1a001fbe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a001fc2:	f47f aec5 	bne.w	1a001d50 <__aeabi_dmul+0x19c>
1a001fc6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
1a001fca:	f47f af0d 	bne.w	1a001de8 <__aeabi_dmul+0x234>
1a001fce:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
1a001fd2:	f47f aeeb 	bne.w	1a001dac <__aeabi_dmul+0x1f8>
1a001fd6:	e712      	b.n	1a001dfe <__aeabi_dmul+0x24a>

1a001fd8 <__gedf2>:
1a001fd8:	f04f 3cff 	mov.w	ip, #4294967295
1a001fdc:	e006      	b.n	1a001fec <__cmpdf2+0x4>
1a001fde:	bf00      	nop

1a001fe0 <__ledf2>:
1a001fe0:	f04f 0c01 	mov.w	ip, #1
1a001fe4:	e002      	b.n	1a001fec <__cmpdf2+0x4>
1a001fe6:	bf00      	nop

1a001fe8 <__cmpdf2>:
1a001fe8:	f04f 0c01 	mov.w	ip, #1
1a001fec:	f84d cd04 	str.w	ip, [sp, #-4]!
1a001ff0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a001ff4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a001ff8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a001ffc:	bf18      	it	ne
1a001ffe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
1a002002:	d01b      	beq.n	1a00203c <__cmpdf2+0x54>
1a002004:	b001      	add	sp, #4
1a002006:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
1a00200a:	bf0c      	ite	eq
1a00200c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
1a002010:	ea91 0f03 	teqne	r1, r3
1a002014:	bf02      	ittt	eq
1a002016:	ea90 0f02 	teqeq	r0, r2
1a00201a:	2000      	moveq	r0, #0
1a00201c:	4770      	bxeq	lr
1a00201e:	f110 0f00 	cmn.w	r0, #0
1a002022:	ea91 0f03 	teq	r1, r3
1a002026:	bf58      	it	pl
1a002028:	4299      	cmppl	r1, r3
1a00202a:	bf08      	it	eq
1a00202c:	4290      	cmpeq	r0, r2
1a00202e:	bf2c      	ite	cs
1a002030:	17d8      	asrcs	r0, r3, #31
1a002032:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
1a002036:	f040 0001 	orr.w	r0, r0, #1
1a00203a:	4770      	bx	lr
1a00203c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a002040:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a002044:	d102      	bne.n	1a00204c <__cmpdf2+0x64>
1a002046:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1a00204a:	d107      	bne.n	1a00205c <__cmpdf2+0x74>
1a00204c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a002050:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a002054:	d1d6      	bne.n	1a002004 <__cmpdf2+0x1c>
1a002056:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1a00205a:	d0d3      	beq.n	1a002004 <__cmpdf2+0x1c>
1a00205c:	f85d 0b04 	ldr.w	r0, [sp], #4
1a002060:	4770      	bx	lr
1a002062:	bf00      	nop

1a002064 <__aeabi_cdrcmple>:
1a002064:	4684      	mov	ip, r0
1a002066:	4610      	mov	r0, r2
1a002068:	4662      	mov	r2, ip
1a00206a:	468c      	mov	ip, r1
1a00206c:	4619      	mov	r1, r3
1a00206e:	4663      	mov	r3, ip
1a002070:	e000      	b.n	1a002074 <__aeabi_cdcmpeq>
1a002072:	bf00      	nop

1a002074 <__aeabi_cdcmpeq>:
1a002074:	b501      	push	{r0, lr}
1a002076:	f7ff ffb7 	bl	1a001fe8 <__cmpdf2>
1a00207a:	2800      	cmp	r0, #0
1a00207c:	bf48      	it	mi
1a00207e:	f110 0f00 	cmnmi.w	r0, #0
1a002082:	bd01      	pop	{r0, pc}

1a002084 <__aeabi_dcmpeq>:
1a002084:	f84d ed08 	str.w	lr, [sp, #-8]!
1a002088:	f7ff fff4 	bl	1a002074 <__aeabi_cdcmpeq>
1a00208c:	bf0c      	ite	eq
1a00208e:	2001      	moveq	r0, #1
1a002090:	2000      	movne	r0, #0
1a002092:	f85d fb08 	ldr.w	pc, [sp], #8
1a002096:	bf00      	nop

1a002098 <__aeabi_dcmplt>:
1a002098:	f84d ed08 	str.w	lr, [sp, #-8]!
1a00209c:	f7ff ffea 	bl	1a002074 <__aeabi_cdcmpeq>
1a0020a0:	bf34      	ite	cc
1a0020a2:	2001      	movcc	r0, #1
1a0020a4:	2000      	movcs	r0, #0
1a0020a6:	f85d fb08 	ldr.w	pc, [sp], #8
1a0020aa:	bf00      	nop

1a0020ac <__aeabi_dcmple>:
1a0020ac:	f84d ed08 	str.w	lr, [sp, #-8]!
1a0020b0:	f7ff ffe0 	bl	1a002074 <__aeabi_cdcmpeq>
1a0020b4:	bf94      	ite	ls
1a0020b6:	2001      	movls	r0, #1
1a0020b8:	2000      	movhi	r0, #0
1a0020ba:	f85d fb08 	ldr.w	pc, [sp], #8
1a0020be:	bf00      	nop

1a0020c0 <__aeabi_dcmpge>:
1a0020c0:	f84d ed08 	str.w	lr, [sp, #-8]!
1a0020c4:	f7ff ffce 	bl	1a002064 <__aeabi_cdrcmple>
1a0020c8:	bf94      	ite	ls
1a0020ca:	2001      	movls	r0, #1
1a0020cc:	2000      	movhi	r0, #0
1a0020ce:	f85d fb08 	ldr.w	pc, [sp], #8
1a0020d2:	bf00      	nop

1a0020d4 <__aeabi_dcmpgt>:
1a0020d4:	f84d ed08 	str.w	lr, [sp, #-8]!
1a0020d8:	f7ff ffc4 	bl	1a002064 <__aeabi_cdrcmple>
1a0020dc:	bf34      	ite	cc
1a0020de:	2001      	movcc	r0, #1
1a0020e0:	2000      	movcs	r0, #0
1a0020e2:	f85d fb08 	ldr.w	pc, [sp], #8
1a0020e6:	bf00      	nop

1a0020e8 <__aeabi_uldivmod>:
1a0020e8:	b953      	cbnz	r3, 1a002100 <__aeabi_uldivmod+0x18>
1a0020ea:	b94a      	cbnz	r2, 1a002100 <__aeabi_uldivmod+0x18>
1a0020ec:	2900      	cmp	r1, #0
1a0020ee:	bf08      	it	eq
1a0020f0:	2800      	cmpeq	r0, #0
1a0020f2:	bf1c      	itt	ne
1a0020f4:	f04f 31ff 	movne.w	r1, #4294967295
1a0020f8:	f04f 30ff 	movne.w	r0, #4294967295
1a0020fc:	f000 b974 	b.w	1a0023e8 <__aeabi_idiv0>
1a002100:	f1ad 0c08 	sub.w	ip, sp, #8
1a002104:	e96d ce04 	strd	ip, lr, [sp, #-16]!
1a002108:	f000 f806 	bl	1a002118 <__udivmoddi4>
1a00210c:	f8dd e004 	ldr.w	lr, [sp, #4]
1a002110:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a002114:	b004      	add	sp, #16
1a002116:	4770      	bx	lr

1a002118 <__udivmoddi4>:
1a002118:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a00211c:	9e08      	ldr	r6, [sp, #32]
1a00211e:	4604      	mov	r4, r0
1a002120:	4688      	mov	r8, r1
1a002122:	2b00      	cmp	r3, #0
1a002124:	f040 8085 	bne.w	1a002232 <__udivmoddi4+0x11a>
1a002128:	428a      	cmp	r2, r1
1a00212a:	4615      	mov	r5, r2
1a00212c:	d948      	bls.n	1a0021c0 <__udivmoddi4+0xa8>
1a00212e:	fab2 f282 	clz	r2, r2
1a002132:	b14a      	cbz	r2, 1a002148 <__udivmoddi4+0x30>
1a002134:	f1c2 0720 	rsb	r7, r2, #32
1a002138:	fa01 f302 	lsl.w	r3, r1, r2
1a00213c:	fa20 f707 	lsr.w	r7, r0, r7
1a002140:	4095      	lsls	r5, r2
1a002142:	ea47 0803 	orr.w	r8, r7, r3
1a002146:	4094      	lsls	r4, r2
1a002148:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a00214c:	0c23      	lsrs	r3, r4, #16
1a00214e:	fbb8 f7fe 	udiv	r7, r8, lr
1a002152:	fa1f fc85 	uxth.w	ip, r5
1a002156:	fb0e 8817 	mls	r8, lr, r7, r8
1a00215a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
1a00215e:	fb07 f10c 	mul.w	r1, r7, ip
1a002162:	4299      	cmp	r1, r3
1a002164:	d909      	bls.n	1a00217a <__udivmoddi4+0x62>
1a002166:	18eb      	adds	r3, r5, r3
1a002168:	f107 30ff 	add.w	r0, r7, #4294967295
1a00216c:	f080 80e3 	bcs.w	1a002336 <__udivmoddi4+0x21e>
1a002170:	4299      	cmp	r1, r3
1a002172:	f240 80e0 	bls.w	1a002336 <__udivmoddi4+0x21e>
1a002176:	3f02      	subs	r7, #2
1a002178:	442b      	add	r3, r5
1a00217a:	1a5b      	subs	r3, r3, r1
1a00217c:	b2a4      	uxth	r4, r4
1a00217e:	fbb3 f0fe 	udiv	r0, r3, lr
1a002182:	fb0e 3310 	mls	r3, lr, r0, r3
1a002186:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
1a00218a:	fb00 fc0c 	mul.w	ip, r0, ip
1a00218e:	45a4      	cmp	ip, r4
1a002190:	d909      	bls.n	1a0021a6 <__udivmoddi4+0x8e>
1a002192:	192c      	adds	r4, r5, r4
1a002194:	f100 33ff 	add.w	r3, r0, #4294967295
1a002198:	f080 80cb 	bcs.w	1a002332 <__udivmoddi4+0x21a>
1a00219c:	45a4      	cmp	ip, r4
1a00219e:	f240 80c8 	bls.w	1a002332 <__udivmoddi4+0x21a>
1a0021a2:	3802      	subs	r0, #2
1a0021a4:	442c      	add	r4, r5
1a0021a6:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
1a0021aa:	eba4 040c 	sub.w	r4, r4, ip
1a0021ae:	2700      	movs	r7, #0
1a0021b0:	b11e      	cbz	r6, 1a0021ba <__udivmoddi4+0xa2>
1a0021b2:	40d4      	lsrs	r4, r2
1a0021b4:	2300      	movs	r3, #0
1a0021b6:	e9c6 4300 	strd	r4, r3, [r6]
1a0021ba:	4639      	mov	r1, r7
1a0021bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a0021c0:	2a00      	cmp	r2, #0
1a0021c2:	d053      	beq.n	1a00226c <__udivmoddi4+0x154>
1a0021c4:	fab2 f282 	clz	r2, r2
1a0021c8:	2a00      	cmp	r2, #0
1a0021ca:	f040 80b6 	bne.w	1a00233a <__udivmoddi4+0x222>
1a0021ce:	1b49      	subs	r1, r1, r5
1a0021d0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a0021d4:	fa1f f885 	uxth.w	r8, r5
1a0021d8:	2701      	movs	r7, #1
1a0021da:	fbb1 fcfe 	udiv	ip, r1, lr
1a0021de:	0c23      	lsrs	r3, r4, #16
1a0021e0:	fb0e 111c 	mls	r1, lr, ip, r1
1a0021e4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a0021e8:	fb08 f10c 	mul.w	r1, r8, ip
1a0021ec:	4299      	cmp	r1, r3
1a0021ee:	d907      	bls.n	1a002200 <__udivmoddi4+0xe8>
1a0021f0:	18eb      	adds	r3, r5, r3
1a0021f2:	f10c 30ff 	add.w	r0, ip, #4294967295
1a0021f6:	d202      	bcs.n	1a0021fe <__udivmoddi4+0xe6>
1a0021f8:	4299      	cmp	r1, r3
1a0021fa:	f200 80ec 	bhi.w	1a0023d6 <__udivmoddi4+0x2be>
1a0021fe:	4684      	mov	ip, r0
1a002200:	1a59      	subs	r1, r3, r1
1a002202:	b2a3      	uxth	r3, r4
1a002204:	fbb1 f0fe 	udiv	r0, r1, lr
1a002208:	fb0e 1410 	mls	r4, lr, r0, r1
1a00220c:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
1a002210:	fb08 f800 	mul.w	r8, r8, r0
1a002214:	45a0      	cmp	r8, r4
1a002216:	d907      	bls.n	1a002228 <__udivmoddi4+0x110>
1a002218:	192c      	adds	r4, r5, r4
1a00221a:	f100 33ff 	add.w	r3, r0, #4294967295
1a00221e:	d202      	bcs.n	1a002226 <__udivmoddi4+0x10e>
1a002220:	45a0      	cmp	r8, r4
1a002222:	f200 80dc 	bhi.w	1a0023de <__udivmoddi4+0x2c6>
1a002226:	4618      	mov	r0, r3
1a002228:	eba4 0408 	sub.w	r4, r4, r8
1a00222c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
1a002230:	e7be      	b.n	1a0021b0 <__udivmoddi4+0x98>
1a002232:	428b      	cmp	r3, r1
1a002234:	d908      	bls.n	1a002248 <__udivmoddi4+0x130>
1a002236:	2e00      	cmp	r6, #0
1a002238:	d078      	beq.n	1a00232c <__udivmoddi4+0x214>
1a00223a:	2700      	movs	r7, #0
1a00223c:	e9c6 0100 	strd	r0, r1, [r6]
1a002240:	4638      	mov	r0, r7
1a002242:	4639      	mov	r1, r7
1a002244:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a002248:	fab3 f783 	clz	r7, r3
1a00224c:	b97f      	cbnz	r7, 1a00226e <__udivmoddi4+0x156>
1a00224e:	428b      	cmp	r3, r1
1a002250:	d302      	bcc.n	1a002258 <__udivmoddi4+0x140>
1a002252:	4282      	cmp	r2, r0
1a002254:	f200 80bd 	bhi.w	1a0023d2 <__udivmoddi4+0x2ba>
1a002258:	1a84      	subs	r4, r0, r2
1a00225a:	eb61 0303 	sbc.w	r3, r1, r3
1a00225e:	2001      	movs	r0, #1
1a002260:	4698      	mov	r8, r3
1a002262:	2e00      	cmp	r6, #0
1a002264:	d0a9      	beq.n	1a0021ba <__udivmoddi4+0xa2>
1a002266:	e9c6 4800 	strd	r4, r8, [r6]
1a00226a:	e7a6      	b.n	1a0021ba <__udivmoddi4+0xa2>
1a00226c:	deff      	udf	#255	; 0xff
1a00226e:	f1c7 0520 	rsb	r5, r7, #32
1a002272:	40bb      	lsls	r3, r7
1a002274:	fa22 fc05 	lsr.w	ip, r2, r5
1a002278:	ea4c 0c03 	orr.w	ip, ip, r3
1a00227c:	fa01 f407 	lsl.w	r4, r1, r7
1a002280:	fa20 f805 	lsr.w	r8, r0, r5
1a002284:	fa21 f305 	lsr.w	r3, r1, r5
1a002288:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
1a00228c:	ea48 0404 	orr.w	r4, r8, r4
1a002290:	fbb3 f9fe 	udiv	r9, r3, lr
1a002294:	0c21      	lsrs	r1, r4, #16
1a002296:	fb0e 3319 	mls	r3, lr, r9, r3
1a00229a:	fa1f f88c 	uxth.w	r8, ip
1a00229e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
1a0022a2:	fb09 fa08 	mul.w	sl, r9, r8
1a0022a6:	459a      	cmp	sl, r3
1a0022a8:	fa02 f207 	lsl.w	r2, r2, r7
1a0022ac:	fa00 f107 	lsl.w	r1, r0, r7
1a0022b0:	d90b      	bls.n	1a0022ca <__udivmoddi4+0x1b2>
1a0022b2:	eb1c 0303 	adds.w	r3, ip, r3
1a0022b6:	f109 30ff 	add.w	r0, r9, #4294967295
1a0022ba:	f080 8088 	bcs.w	1a0023ce <__udivmoddi4+0x2b6>
1a0022be:	459a      	cmp	sl, r3
1a0022c0:	f240 8085 	bls.w	1a0023ce <__udivmoddi4+0x2b6>
1a0022c4:	f1a9 0902 	sub.w	r9, r9, #2
1a0022c8:	4463      	add	r3, ip
1a0022ca:	eba3 030a 	sub.w	r3, r3, sl
1a0022ce:	b2a4      	uxth	r4, r4
1a0022d0:	fbb3 f0fe 	udiv	r0, r3, lr
1a0022d4:	fb0e 3310 	mls	r3, lr, r0, r3
1a0022d8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
1a0022dc:	fb00 f808 	mul.w	r8, r0, r8
1a0022e0:	45a0      	cmp	r8, r4
1a0022e2:	d908      	bls.n	1a0022f6 <__udivmoddi4+0x1de>
1a0022e4:	eb1c 0404 	adds.w	r4, ip, r4
1a0022e8:	f100 33ff 	add.w	r3, r0, #4294967295
1a0022ec:	d26b      	bcs.n	1a0023c6 <__udivmoddi4+0x2ae>
1a0022ee:	45a0      	cmp	r8, r4
1a0022f0:	d969      	bls.n	1a0023c6 <__udivmoddi4+0x2ae>
1a0022f2:	3802      	subs	r0, #2
1a0022f4:	4464      	add	r4, ip
1a0022f6:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
1a0022fa:	eba4 0408 	sub.w	r4, r4, r8
1a0022fe:	fba0 8902 	umull	r8, r9, r0, r2
1a002302:	454c      	cmp	r4, r9
1a002304:	46c6      	mov	lr, r8
1a002306:	464b      	mov	r3, r9
1a002308:	d354      	bcc.n	1a0023b4 <__udivmoddi4+0x29c>
1a00230a:	d051      	beq.n	1a0023b0 <__udivmoddi4+0x298>
1a00230c:	2e00      	cmp	r6, #0
1a00230e:	d069      	beq.n	1a0023e4 <__udivmoddi4+0x2cc>
1a002310:	ebb1 020e 	subs.w	r2, r1, lr
1a002314:	eb64 0403 	sbc.w	r4, r4, r3
1a002318:	fa04 f505 	lsl.w	r5, r4, r5
1a00231c:	fa22 f307 	lsr.w	r3, r2, r7
1a002320:	40fc      	lsrs	r4, r7
1a002322:	431d      	orrs	r5, r3
1a002324:	e9c6 5400 	strd	r5, r4, [r6]
1a002328:	2700      	movs	r7, #0
1a00232a:	e746      	b.n	1a0021ba <__udivmoddi4+0xa2>
1a00232c:	4637      	mov	r7, r6
1a00232e:	4630      	mov	r0, r6
1a002330:	e743      	b.n	1a0021ba <__udivmoddi4+0xa2>
1a002332:	4618      	mov	r0, r3
1a002334:	e737      	b.n	1a0021a6 <__udivmoddi4+0x8e>
1a002336:	4607      	mov	r7, r0
1a002338:	e71f      	b.n	1a00217a <__udivmoddi4+0x62>
1a00233a:	f1c2 0320 	rsb	r3, r2, #32
1a00233e:	fa20 f703 	lsr.w	r7, r0, r3
1a002342:	4095      	lsls	r5, r2
1a002344:	fa01 f002 	lsl.w	r0, r1, r2
1a002348:	fa21 f303 	lsr.w	r3, r1, r3
1a00234c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002350:	4338      	orrs	r0, r7
1a002352:	0c01      	lsrs	r1, r0, #16
1a002354:	fbb3 f7fe 	udiv	r7, r3, lr
1a002358:	fa1f f885 	uxth.w	r8, r5
1a00235c:	fb0e 3317 	mls	r3, lr, r7, r3
1a002360:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1a002364:	fb07 f308 	mul.w	r3, r7, r8
1a002368:	428b      	cmp	r3, r1
1a00236a:	fa04 f402 	lsl.w	r4, r4, r2
1a00236e:	d907      	bls.n	1a002380 <__udivmoddi4+0x268>
1a002370:	1869      	adds	r1, r5, r1
1a002372:	f107 3cff 	add.w	ip, r7, #4294967295
1a002376:	d228      	bcs.n	1a0023ca <__udivmoddi4+0x2b2>
1a002378:	428b      	cmp	r3, r1
1a00237a:	d926      	bls.n	1a0023ca <__udivmoddi4+0x2b2>
1a00237c:	3f02      	subs	r7, #2
1a00237e:	4429      	add	r1, r5
1a002380:	1acb      	subs	r3, r1, r3
1a002382:	b281      	uxth	r1, r0
1a002384:	fbb3 f0fe 	udiv	r0, r3, lr
1a002388:	fb0e 3310 	mls	r3, lr, r0, r3
1a00238c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1a002390:	fb00 f308 	mul.w	r3, r0, r8
1a002394:	428b      	cmp	r3, r1
1a002396:	d907      	bls.n	1a0023a8 <__udivmoddi4+0x290>
1a002398:	1869      	adds	r1, r5, r1
1a00239a:	f100 3cff 	add.w	ip, r0, #4294967295
1a00239e:	d210      	bcs.n	1a0023c2 <__udivmoddi4+0x2aa>
1a0023a0:	428b      	cmp	r3, r1
1a0023a2:	d90e      	bls.n	1a0023c2 <__udivmoddi4+0x2aa>
1a0023a4:	3802      	subs	r0, #2
1a0023a6:	4429      	add	r1, r5
1a0023a8:	1ac9      	subs	r1, r1, r3
1a0023aa:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
1a0023ae:	e714      	b.n	1a0021da <__udivmoddi4+0xc2>
1a0023b0:	4541      	cmp	r1, r8
1a0023b2:	d2ab      	bcs.n	1a00230c <__udivmoddi4+0x1f4>
1a0023b4:	ebb8 0e02 	subs.w	lr, r8, r2
1a0023b8:	eb69 020c 	sbc.w	r2, r9, ip
1a0023bc:	3801      	subs	r0, #1
1a0023be:	4613      	mov	r3, r2
1a0023c0:	e7a4      	b.n	1a00230c <__udivmoddi4+0x1f4>
1a0023c2:	4660      	mov	r0, ip
1a0023c4:	e7f0      	b.n	1a0023a8 <__udivmoddi4+0x290>
1a0023c6:	4618      	mov	r0, r3
1a0023c8:	e795      	b.n	1a0022f6 <__udivmoddi4+0x1de>
1a0023ca:	4667      	mov	r7, ip
1a0023cc:	e7d8      	b.n	1a002380 <__udivmoddi4+0x268>
1a0023ce:	4681      	mov	r9, r0
1a0023d0:	e77b      	b.n	1a0022ca <__udivmoddi4+0x1b2>
1a0023d2:	4638      	mov	r0, r7
1a0023d4:	e745      	b.n	1a002262 <__udivmoddi4+0x14a>
1a0023d6:	f1ac 0c02 	sub.w	ip, ip, #2
1a0023da:	442b      	add	r3, r5
1a0023dc:	e710      	b.n	1a002200 <__udivmoddi4+0xe8>
1a0023de:	3802      	subs	r0, #2
1a0023e0:	442c      	add	r4, r5
1a0023e2:	e721      	b.n	1a002228 <__udivmoddi4+0x110>
1a0023e4:	4637      	mov	r7, r6
1a0023e6:	e6e8      	b.n	1a0021ba <__udivmoddi4+0xa2>

1a0023e8 <__aeabi_idiv0>:
1a0023e8:	4770      	bx	lr
1a0023ea:	bf00      	nop

1a0023ec <_fclose_r>:
1a0023ec:	b570      	push	{r4, r5, r6, lr}
1a0023ee:	2900      	cmp	r1, #0
1a0023f0:	d04a      	beq.n	1a002488 <_fclose_r+0x9c>
1a0023f2:	4605      	mov	r5, r0
1a0023f4:	460c      	mov	r4, r1
1a0023f6:	b110      	cbz	r0, 1a0023fe <_fclose_r+0x12>
1a0023f8:	6b83      	ldr	r3, [r0, #56]	; 0x38
1a0023fa:	2b00      	cmp	r3, #0
1a0023fc:	d047      	beq.n	1a00248e <_fclose_r+0xa2>
1a0023fe:	6e63      	ldr	r3, [r4, #100]	; 0x64
1a002400:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a002404:	07d8      	lsls	r0, r3, #31
1a002406:	d532      	bpl.n	1a00246e <_fclose_r+0x82>
1a002408:	2a00      	cmp	r2, #0
1a00240a:	d03d      	beq.n	1a002488 <_fclose_r+0x9c>
1a00240c:	4621      	mov	r1, r4
1a00240e:	4628      	mov	r0, r5
1a002410:	f000 f854 	bl	1a0024bc <__sflush_r>
1a002414:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1a002416:	4606      	mov	r6, r0
1a002418:	b133      	cbz	r3, 1a002428 <_fclose_r+0x3c>
1a00241a:	69e1      	ldr	r1, [r4, #28]
1a00241c:	4628      	mov	r0, r5
1a00241e:	4798      	blx	r3
1a002420:	2800      	cmp	r0, #0
1a002422:	bfb8      	it	lt
1a002424:	f04f 36ff 	movlt.w	r6, #4294967295
1a002428:	89a3      	ldrh	r3, [r4, #12]
1a00242a:	061a      	lsls	r2, r3, #24
1a00242c:	d43c      	bmi.n	1a0024a8 <_fclose_r+0xbc>
1a00242e:	6b21      	ldr	r1, [r4, #48]	; 0x30
1a002430:	b141      	cbz	r1, 1a002444 <_fclose_r+0x58>
1a002432:	f104 0340 	add.w	r3, r4, #64	; 0x40
1a002436:	4299      	cmp	r1, r3
1a002438:	d002      	beq.n	1a002440 <_fclose_r+0x54>
1a00243a:	4628      	mov	r0, r5
1a00243c:	f000 f9c6 	bl	1a0027cc <_free_r>
1a002440:	2300      	movs	r3, #0
1a002442:	6323      	str	r3, [r4, #48]	; 0x30
1a002444:	6c61      	ldr	r1, [r4, #68]	; 0x44
1a002446:	b121      	cbz	r1, 1a002452 <_fclose_r+0x66>
1a002448:	4628      	mov	r0, r5
1a00244a:	f000 f9bf 	bl	1a0027cc <_free_r>
1a00244e:	2300      	movs	r3, #0
1a002450:	6463      	str	r3, [r4, #68]	; 0x44
1a002452:	f000 f95f 	bl	1a002714 <__sfp_lock_acquire>
1a002456:	6e63      	ldr	r3, [r4, #100]	; 0x64
1a002458:	2200      	movs	r2, #0
1a00245a:	07db      	lsls	r3, r3, #31
1a00245c:	81a2      	strh	r2, [r4, #12]
1a00245e:	d528      	bpl.n	1a0024b2 <_fclose_r+0xc6>
1a002460:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a002462:	f000 faf9 	bl	1a002a58 <__retarget_lock_close_recursive>
1a002466:	f000 f95b 	bl	1a002720 <__sfp_lock_release>
1a00246a:	4630      	mov	r0, r6
1a00246c:	bd70      	pop	{r4, r5, r6, pc}
1a00246e:	0591      	lsls	r1, r2, #22
1a002470:	d4cc      	bmi.n	1a00240c <_fclose_r+0x20>
1a002472:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a002474:	f000 faf2 	bl	1a002a5c <__retarget_lock_acquire_recursive>
1a002478:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a00247c:	2b00      	cmp	r3, #0
1a00247e:	d1c5      	bne.n	1a00240c <_fclose_r+0x20>
1a002480:	6e66      	ldr	r6, [r4, #100]	; 0x64
1a002482:	f016 0601 	ands.w	r6, r6, #1
1a002486:	d00a      	beq.n	1a00249e <_fclose_r+0xb2>
1a002488:	2600      	movs	r6, #0
1a00248a:	4630      	mov	r0, r6
1a00248c:	bd70      	pop	{r4, r5, r6, pc}
1a00248e:	f000 f917 	bl	1a0026c0 <__sinit>
1a002492:	6e63      	ldr	r3, [r4, #100]	; 0x64
1a002494:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a002498:	07d8      	lsls	r0, r3, #31
1a00249a:	d4b5      	bmi.n	1a002408 <_fclose_r+0x1c>
1a00249c:	e7e7      	b.n	1a00246e <_fclose_r+0x82>
1a00249e:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a0024a0:	f000 fade 	bl	1a002a60 <__retarget_lock_release_recursive>
1a0024a4:	4630      	mov	r0, r6
1a0024a6:	bd70      	pop	{r4, r5, r6, pc}
1a0024a8:	6921      	ldr	r1, [r4, #16]
1a0024aa:	4628      	mov	r0, r5
1a0024ac:	f000 f98e 	bl	1a0027cc <_free_r>
1a0024b0:	e7bd      	b.n	1a00242e <_fclose_r+0x42>
1a0024b2:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a0024b4:	f000 fad4 	bl	1a002a60 <__retarget_lock_release_recursive>
1a0024b8:	e7d2      	b.n	1a002460 <_fclose_r+0x74>
1a0024ba:	bf00      	nop

1a0024bc <__sflush_r>:
1a0024bc:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
1a0024c0:	b29a      	uxth	r2, r3
1a0024c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0024c6:	460c      	mov	r4, r1
1a0024c8:	0711      	lsls	r1, r2, #28
1a0024ca:	4680      	mov	r8, r0
1a0024cc:	d448      	bmi.n	1a002560 <__sflush_r+0xa4>
1a0024ce:	6862      	ldr	r2, [r4, #4]
1a0024d0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a0024d4:	2a00      	cmp	r2, #0
1a0024d6:	81a3      	strh	r3, [r4, #12]
1a0024d8:	dd5d      	ble.n	1a002596 <__sflush_r+0xda>
1a0024da:	6aa5      	ldr	r5, [r4, #40]	; 0x28
1a0024dc:	2d00      	cmp	r5, #0
1a0024de:	d057      	beq.n	1a002590 <__sflush_r+0xd4>
1a0024e0:	2200      	movs	r2, #0
1a0024e2:	b29b      	uxth	r3, r3
1a0024e4:	f8d8 6000 	ldr.w	r6, [r8]
1a0024e8:	69e1      	ldr	r1, [r4, #28]
1a0024ea:	f8c8 2000 	str.w	r2, [r8]
1a0024ee:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
1a0024f2:	d154      	bne.n	1a00259e <__sflush_r+0xe2>
1a0024f4:	2301      	movs	r3, #1
1a0024f6:	4640      	mov	r0, r8
1a0024f8:	47a8      	blx	r5
1a0024fa:	1c43      	adds	r3, r0, #1
1a0024fc:	4602      	mov	r2, r0
1a0024fe:	d065      	beq.n	1a0025cc <__sflush_r+0x110>
1a002500:	89a3      	ldrh	r3, [r4, #12]
1a002502:	6aa5      	ldr	r5, [r4, #40]	; 0x28
1a002504:	69e1      	ldr	r1, [r4, #28]
1a002506:	075f      	lsls	r7, r3, #29
1a002508:	d505      	bpl.n	1a002516 <__sflush_r+0x5a>
1a00250a:	6860      	ldr	r0, [r4, #4]
1a00250c:	6b23      	ldr	r3, [r4, #48]	; 0x30
1a00250e:	1a12      	subs	r2, r2, r0
1a002510:	b10b      	cbz	r3, 1a002516 <__sflush_r+0x5a>
1a002512:	6be3      	ldr	r3, [r4, #60]	; 0x3c
1a002514:	1ad2      	subs	r2, r2, r3
1a002516:	2300      	movs	r3, #0
1a002518:	4640      	mov	r0, r8
1a00251a:	47a8      	blx	r5
1a00251c:	1c45      	adds	r5, r0, #1
1a00251e:	d148      	bne.n	1a0025b2 <__sflush_r+0xf6>
1a002520:	f8d8 2000 	ldr.w	r2, [r8]
1a002524:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a002528:	2a00      	cmp	r2, #0
1a00252a:	d05c      	beq.n	1a0025e6 <__sflush_r+0x12a>
1a00252c:	2a1d      	cmp	r2, #29
1a00252e:	d001      	beq.n	1a002534 <__sflush_r+0x78>
1a002530:	2a16      	cmp	r2, #22
1a002532:	d164      	bne.n	1a0025fe <__sflush_r+0x142>
1a002534:	6922      	ldr	r2, [r4, #16]
1a002536:	2100      	movs	r1, #0
1a002538:	e9c4 2100 	strd	r2, r1, [r4]
1a00253c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
1a002540:	81a3      	strh	r3, [r4, #12]
1a002542:	6b21      	ldr	r1, [r4, #48]	; 0x30
1a002544:	f8c8 6000 	str.w	r6, [r8]
1a002548:	b311      	cbz	r1, 1a002590 <__sflush_r+0xd4>
1a00254a:	f104 0340 	add.w	r3, r4, #64	; 0x40
1a00254e:	4299      	cmp	r1, r3
1a002550:	d002      	beq.n	1a002558 <__sflush_r+0x9c>
1a002552:	4640      	mov	r0, r8
1a002554:	f000 f93a 	bl	1a0027cc <_free_r>
1a002558:	2000      	movs	r0, #0
1a00255a:	6320      	str	r0, [r4, #48]	; 0x30
1a00255c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002560:	6926      	ldr	r6, [r4, #16]
1a002562:	b1ae      	cbz	r6, 1a002590 <__sflush_r+0xd4>
1a002564:	6825      	ldr	r5, [r4, #0]
1a002566:	6026      	str	r6, [r4, #0]
1a002568:	0791      	lsls	r1, r2, #30
1a00256a:	bf0c      	ite	eq
1a00256c:	6963      	ldreq	r3, [r4, #20]
1a00256e:	2300      	movne	r3, #0
1a002570:	1bad      	subs	r5, r5, r6
1a002572:	60a3      	str	r3, [r4, #8]
1a002574:	e00a      	b.n	1a00258c <__sflush_r+0xd0>
1a002576:	462b      	mov	r3, r5
1a002578:	4632      	mov	r2, r6
1a00257a:	6a67      	ldr	r7, [r4, #36]	; 0x24
1a00257c:	69e1      	ldr	r1, [r4, #28]
1a00257e:	4640      	mov	r0, r8
1a002580:	47b8      	blx	r7
1a002582:	2800      	cmp	r0, #0
1a002584:	eba5 0500 	sub.w	r5, r5, r0
1a002588:	4406      	add	r6, r0
1a00258a:	dd0a      	ble.n	1a0025a2 <__sflush_r+0xe6>
1a00258c:	2d00      	cmp	r5, #0
1a00258e:	dcf2      	bgt.n	1a002576 <__sflush_r+0xba>
1a002590:	2000      	movs	r0, #0
1a002592:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002596:	6be2      	ldr	r2, [r4, #60]	; 0x3c
1a002598:	2a00      	cmp	r2, #0
1a00259a:	dc9e      	bgt.n	1a0024da <__sflush_r+0x1e>
1a00259c:	e7f8      	b.n	1a002590 <__sflush_r+0xd4>
1a00259e:	6d22      	ldr	r2, [r4, #80]	; 0x50
1a0025a0:	e7b1      	b.n	1a002506 <__sflush_r+0x4a>
1a0025a2:	89a3      	ldrh	r3, [r4, #12]
1a0025a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a0025a8:	81a3      	strh	r3, [r4, #12]
1a0025aa:	f04f 30ff 	mov.w	r0, #4294967295
1a0025ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a0025b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a0025b6:	6922      	ldr	r2, [r4, #16]
1a0025b8:	6022      	str	r2, [r4, #0]
1a0025ba:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
1a0025be:	2200      	movs	r2, #0
1a0025c0:	6062      	str	r2, [r4, #4]
1a0025c2:	04da      	lsls	r2, r3, #19
1a0025c4:	81a3      	strh	r3, [r4, #12]
1a0025c6:	d5bc      	bpl.n	1a002542 <__sflush_r+0x86>
1a0025c8:	6520      	str	r0, [r4, #80]	; 0x50
1a0025ca:	e7ba      	b.n	1a002542 <__sflush_r+0x86>
1a0025cc:	f8d8 3000 	ldr.w	r3, [r8]
1a0025d0:	2b00      	cmp	r3, #0
1a0025d2:	d095      	beq.n	1a002500 <__sflush_r+0x44>
1a0025d4:	2b1d      	cmp	r3, #29
1a0025d6:	d00f      	beq.n	1a0025f8 <__sflush_r+0x13c>
1a0025d8:	2b16      	cmp	r3, #22
1a0025da:	d00d      	beq.n	1a0025f8 <__sflush_r+0x13c>
1a0025dc:	89a3      	ldrh	r3, [r4, #12]
1a0025de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a0025e2:	81a3      	strh	r3, [r4, #12]
1a0025e4:	e7d5      	b.n	1a002592 <__sflush_r+0xd6>
1a0025e6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
1a0025ea:	6921      	ldr	r1, [r4, #16]
1a0025ec:	81a3      	strh	r3, [r4, #12]
1a0025ee:	04db      	lsls	r3, r3, #19
1a0025f0:	e9c4 1200 	strd	r1, r2, [r4]
1a0025f4:	d5a5      	bpl.n	1a002542 <__sflush_r+0x86>
1a0025f6:	e7e7      	b.n	1a0025c8 <__sflush_r+0x10c>
1a0025f8:	f8c8 6000 	str.w	r6, [r8]
1a0025fc:	e7c8      	b.n	1a002590 <__sflush_r+0xd4>
1a0025fe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a002602:	81a3      	strh	r3, [r4, #12]
1a002604:	e7c5      	b.n	1a002592 <__sflush_r+0xd6>
1a002606:	bf00      	nop

1a002608 <_fflush_r>:
1a002608:	b538      	push	{r3, r4, r5, lr}
1a00260a:	460d      	mov	r5, r1
1a00260c:	4604      	mov	r4, r0
1a00260e:	b108      	cbz	r0, 1a002614 <_fflush_r+0xc>
1a002610:	6b83      	ldr	r3, [r0, #56]	; 0x38
1a002612:	b1a3      	cbz	r3, 1a00263e <_fflush_r+0x36>
1a002614:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
1a002618:	b1b8      	cbz	r0, 1a00264a <_fflush_r+0x42>
1a00261a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
1a00261c:	07db      	lsls	r3, r3, #31
1a00261e:	d401      	bmi.n	1a002624 <_fflush_r+0x1c>
1a002620:	0581      	lsls	r1, r0, #22
1a002622:	d515      	bpl.n	1a002650 <_fflush_r+0x48>
1a002624:	4620      	mov	r0, r4
1a002626:	4629      	mov	r1, r5
1a002628:	f7ff ff48 	bl	1a0024bc <__sflush_r>
1a00262c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
1a00262e:	07da      	lsls	r2, r3, #31
1a002630:	4604      	mov	r4, r0
1a002632:	d402      	bmi.n	1a00263a <_fflush_r+0x32>
1a002634:	89ab      	ldrh	r3, [r5, #12]
1a002636:	059b      	lsls	r3, r3, #22
1a002638:	d50e      	bpl.n	1a002658 <_fflush_r+0x50>
1a00263a:	4620      	mov	r0, r4
1a00263c:	bd38      	pop	{r3, r4, r5, pc}
1a00263e:	f000 f83f 	bl	1a0026c0 <__sinit>
1a002642:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
1a002646:	2800      	cmp	r0, #0
1a002648:	d1e7      	bne.n	1a00261a <_fflush_r+0x12>
1a00264a:	4604      	mov	r4, r0
1a00264c:	4620      	mov	r0, r4
1a00264e:	bd38      	pop	{r3, r4, r5, pc}
1a002650:	6da8      	ldr	r0, [r5, #88]	; 0x58
1a002652:	f000 fa03 	bl	1a002a5c <__retarget_lock_acquire_recursive>
1a002656:	e7e5      	b.n	1a002624 <_fflush_r+0x1c>
1a002658:	6da8      	ldr	r0, [r5, #88]	; 0x58
1a00265a:	f000 fa01 	bl	1a002a60 <__retarget_lock_release_recursive>
1a00265e:	4620      	mov	r0, r4
1a002660:	bd38      	pop	{r3, r4, r5, pc}
1a002662:	bf00      	nop

1a002664 <std>:
1a002664:	b510      	push	{r4, lr}
1a002666:	2300      	movs	r3, #0
1a002668:	4604      	mov	r4, r0
1a00266a:	8181      	strh	r1, [r0, #12]
1a00266c:	81c2      	strh	r2, [r0, #14]
1a00266e:	e9c0 3300 	strd	r3, r3, [r0]
1a002672:	6083      	str	r3, [r0, #8]
1a002674:	6643      	str	r3, [r0, #100]	; 0x64
1a002676:	e9c0 3304 	strd	r3, r3, [r0, #16]
1a00267a:	6183      	str	r3, [r0, #24]
1a00267c:	4619      	mov	r1, r3
1a00267e:	2208      	movs	r2, #8
1a002680:	305c      	adds	r0, #92	; 0x5c
1a002682:	f000 fd41 	bl	1a003108 <memset>
1a002686:	4807      	ldr	r0, [pc, #28]	; (1a0026a4 <std+0x40>)
1a002688:	4907      	ldr	r1, [pc, #28]	; (1a0026a8 <std+0x44>)
1a00268a:	4a08      	ldr	r2, [pc, #32]	; (1a0026ac <std+0x48>)
1a00268c:	4b08      	ldr	r3, [pc, #32]	; (1a0026b0 <std+0x4c>)
1a00268e:	62e3      	str	r3, [r4, #44]	; 0x2c
1a002690:	e9c4 4007 	strd	r4, r0, [r4, #28]
1a002694:	e9c4 1209 	strd	r1, r2, [r4, #36]	; 0x24
1a002698:	f104 0058 	add.w	r0, r4, #88	; 0x58
1a00269c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1a0026a0:	f000 b9d8 	b.w	1a002a54 <__retarget_lock_init_recursive>
1a0026a4:	1a0031e9 	.word	0x1a0031e9
1a0026a8:	1a00320d 	.word	0x1a00320d
1a0026ac:	1a00324d 	.word	0x1a00324d
1a0026b0:	1a00326d 	.word	0x1a00326d

1a0026b4 <_cleanup_r>:
1a0026b4:	4901      	ldr	r1, [pc, #4]	; (1a0026bc <_cleanup_r+0x8>)
1a0026b6:	f000 b97f 	b.w	1a0029b8 <_fwalk_reent>
1a0026ba:	bf00      	nop
1a0026bc:	1a0023ed 	.word	0x1a0023ed

1a0026c0 <__sinit>:
1a0026c0:	b510      	push	{r4, lr}
1a0026c2:	4604      	mov	r4, r0
1a0026c4:	4811      	ldr	r0, [pc, #68]	; (1a00270c <__sinit+0x4c>)
1a0026c6:	f000 f9c9 	bl	1a002a5c <__retarget_lock_acquire_recursive>
1a0026ca:	6ba2      	ldr	r2, [r4, #56]	; 0x38
1a0026cc:	b9c2      	cbnz	r2, 1a002700 <__sinit+0x40>
1a0026ce:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
1a0026d2:	480f      	ldr	r0, [pc, #60]	; (1a002710 <__sinit+0x50>)
1a0026d4:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
1a0026d8:	2103      	movs	r1, #3
1a0026da:	e9c4 13b9 	strd	r1, r3, [r4, #740]	; 0x2e4
1a0026de:	63e0      	str	r0, [r4, #60]	; 0x3c
1a0026e0:	2104      	movs	r1, #4
1a0026e2:	6860      	ldr	r0, [r4, #4]
1a0026e4:	f7ff ffbe 	bl	1a002664 <std>
1a0026e8:	2201      	movs	r2, #1
1a0026ea:	2109      	movs	r1, #9
1a0026ec:	68a0      	ldr	r0, [r4, #8]
1a0026ee:	f7ff ffb9 	bl	1a002664 <std>
1a0026f2:	2202      	movs	r2, #2
1a0026f4:	2112      	movs	r1, #18
1a0026f6:	68e0      	ldr	r0, [r4, #12]
1a0026f8:	f7ff ffb4 	bl	1a002664 <std>
1a0026fc:	2301      	movs	r3, #1
1a0026fe:	63a3      	str	r3, [r4, #56]	; 0x38
1a002700:	4802      	ldr	r0, [pc, #8]	; (1a00270c <__sinit+0x4c>)
1a002702:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1a002706:	f000 b9ab 	b.w	1a002a60 <__retarget_lock_release_recursive>
1a00270a:	bf00      	nop
1a00270c:	10000a60 	.word	0x10000a60
1a002710:	1a0026b5 	.word	0x1a0026b5

1a002714 <__sfp_lock_acquire>:
1a002714:	4801      	ldr	r0, [pc, #4]	; (1a00271c <__sfp_lock_acquire+0x8>)
1a002716:	f000 b9a1 	b.w	1a002a5c <__retarget_lock_acquire_recursive>
1a00271a:	bf00      	nop
1a00271c:	10000a74 	.word	0x10000a74

1a002720 <__sfp_lock_release>:
1a002720:	4801      	ldr	r0, [pc, #4]	; (1a002728 <__sfp_lock_release+0x8>)
1a002722:	f000 b99d 	b.w	1a002a60 <__retarget_lock_release_recursive>
1a002726:	bf00      	nop
1a002728:	10000a74 	.word	0x10000a74

1a00272c <_malloc_trim_r>:
1a00272c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a00272e:	4f24      	ldr	r7, [pc, #144]	; (1a0027c0 <_malloc_trim_r+0x94>)
1a002730:	460c      	mov	r4, r1
1a002732:	4606      	mov	r6, r0
1a002734:	f000 fd38 	bl	1a0031a8 <__malloc_lock>
1a002738:	68bb      	ldr	r3, [r7, #8]
1a00273a:	685d      	ldr	r5, [r3, #4]
1a00273c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
1a002740:	310f      	adds	r1, #15
1a002742:	f025 0503 	bic.w	r5, r5, #3
1a002746:	4429      	add	r1, r5
1a002748:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
1a00274c:	f021 010f 	bic.w	r1, r1, #15
1a002750:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
1a002754:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
1a002758:	db07      	blt.n	1a00276a <_malloc_trim_r+0x3e>
1a00275a:	2100      	movs	r1, #0
1a00275c:	4630      	mov	r0, r6
1a00275e:	f7fd ff97 	bl	1a000690 <_sbrk_r>
1a002762:	68bb      	ldr	r3, [r7, #8]
1a002764:	442b      	add	r3, r5
1a002766:	4298      	cmp	r0, r3
1a002768:	d004      	beq.n	1a002774 <_malloc_trim_r+0x48>
1a00276a:	4630      	mov	r0, r6
1a00276c:	f000 fd22 	bl	1a0031b4 <__malloc_unlock>
1a002770:	2000      	movs	r0, #0
1a002772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a002774:	4261      	negs	r1, r4
1a002776:	4630      	mov	r0, r6
1a002778:	f7fd ff8a 	bl	1a000690 <_sbrk_r>
1a00277c:	3001      	adds	r0, #1
1a00277e:	d00d      	beq.n	1a00279c <_malloc_trim_r+0x70>
1a002780:	4b10      	ldr	r3, [pc, #64]	; (1a0027c4 <_malloc_trim_r+0x98>)
1a002782:	68ba      	ldr	r2, [r7, #8]
1a002784:	6819      	ldr	r1, [r3, #0]
1a002786:	1b2d      	subs	r5, r5, r4
1a002788:	f045 0501 	orr.w	r5, r5, #1
1a00278c:	4630      	mov	r0, r6
1a00278e:	1b09      	subs	r1, r1, r4
1a002790:	6055      	str	r5, [r2, #4]
1a002792:	6019      	str	r1, [r3, #0]
1a002794:	f000 fd0e 	bl	1a0031b4 <__malloc_unlock>
1a002798:	2001      	movs	r0, #1
1a00279a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a00279c:	2100      	movs	r1, #0
1a00279e:	4630      	mov	r0, r6
1a0027a0:	f7fd ff76 	bl	1a000690 <_sbrk_r>
1a0027a4:	68ba      	ldr	r2, [r7, #8]
1a0027a6:	1a83      	subs	r3, r0, r2
1a0027a8:	2b0f      	cmp	r3, #15
1a0027aa:	ddde      	ble.n	1a00276a <_malloc_trim_r+0x3e>
1a0027ac:	4c06      	ldr	r4, [pc, #24]	; (1a0027c8 <_malloc_trim_r+0x9c>)
1a0027ae:	4905      	ldr	r1, [pc, #20]	; (1a0027c4 <_malloc_trim_r+0x98>)
1a0027b0:	6824      	ldr	r4, [r4, #0]
1a0027b2:	f043 0301 	orr.w	r3, r3, #1
1a0027b6:	1b00      	subs	r0, r0, r4
1a0027b8:	6053      	str	r3, [r2, #4]
1a0027ba:	6008      	str	r0, [r1, #0]
1a0027bc:	e7d5      	b.n	1a00276a <_malloc_trim_r+0x3e>
1a0027be:	bf00      	nop
1a0027c0:	10000478 	.word	0x10000478
1a0027c4:	10000a18 	.word	0x10000a18
1a0027c8:	10000880 	.word	0x10000880

1a0027cc <_free_r>:
1a0027cc:	2900      	cmp	r1, #0
1a0027ce:	d05d      	beq.n	1a00288c <_free_r+0xc0>
1a0027d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a0027d2:	460f      	mov	r7, r1
1a0027d4:	4606      	mov	r6, r0
1a0027d6:	f000 fce7 	bl	1a0031a8 <__malloc_lock>
1a0027da:	f857 cc04 	ldr.w	ip, [r7, #-4]
1a0027de:	4c73      	ldr	r4, [pc, #460]	; (1a0029ac <_free_r+0x1e0>)
1a0027e0:	f02c 0301 	bic.w	r3, ip, #1
1a0027e4:	f1a7 0008 	sub.w	r0, r7, #8
1a0027e8:	18c2      	adds	r2, r0, r3
1a0027ea:	68a1      	ldr	r1, [r4, #8]
1a0027ec:	6855      	ldr	r5, [r2, #4]
1a0027ee:	4291      	cmp	r1, r2
1a0027f0:	f025 0503 	bic.w	r5, r5, #3
1a0027f4:	d07f      	beq.n	1a0028f6 <_free_r+0x12a>
1a0027f6:	f01c 0f01 	tst.w	ip, #1
1a0027fa:	6055      	str	r5, [r2, #4]
1a0027fc:	eb02 0105 	add.w	r1, r2, r5
1a002800:	d133      	bne.n	1a00286a <_free_r+0x9e>
1a002802:	f857 ec08 	ldr.w	lr, [r7, #-8]
1a002806:	6849      	ldr	r1, [r1, #4]
1a002808:	eba0 000e 	sub.w	r0, r0, lr
1a00280c:	f104 0c08 	add.w	ip, r4, #8
1a002810:	6887      	ldr	r7, [r0, #8]
1a002812:	4567      	cmp	r7, ip
1a002814:	4473      	add	r3, lr
1a002816:	f001 0101 	and.w	r1, r1, #1
1a00281a:	d060      	beq.n	1a0028de <_free_r+0x112>
1a00281c:	f8d0 e00c 	ldr.w	lr, [r0, #12]
1a002820:	f8c7 e00c 	str.w	lr, [r7, #12]
1a002824:	f8ce 7008 	str.w	r7, [lr, #8]
1a002828:	2900      	cmp	r1, #0
1a00282a:	f000 8089 	beq.w	1a002940 <_free_r+0x174>
1a00282e:	f043 0101 	orr.w	r1, r3, #1
1a002832:	6041      	str	r1, [r0, #4]
1a002834:	6013      	str	r3, [r2, #0]
1a002836:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
1a00283a:	d230      	bcs.n	1a00289e <_free_r+0xd2>
1a00283c:	08db      	lsrs	r3, r3, #3
1a00283e:	1c59      	adds	r1, r3, #1
1a002840:	6865      	ldr	r5, [r4, #4]
1a002842:	109a      	asrs	r2, r3, #2
1a002844:	2301      	movs	r3, #1
1a002846:	4093      	lsls	r3, r2
1a002848:	432b      	orrs	r3, r5
1a00284a:	eb04 02c1 	add.w	r2, r4, r1, lsl #3
1a00284e:	f854 5031 	ldr.w	r5, [r4, r1, lsl #3]
1a002852:	6063      	str	r3, [r4, #4]
1a002854:	3a08      	subs	r2, #8
1a002856:	e9c0 5202 	strd	r5, r2, [r0, #8]
1a00285a:	f844 0031 	str.w	r0, [r4, r1, lsl #3]
1a00285e:	60e8      	str	r0, [r5, #12]
1a002860:	4630      	mov	r0, r6
1a002862:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1a002866:	f000 bca5 	b.w	1a0031b4 <__malloc_unlock>
1a00286a:	6849      	ldr	r1, [r1, #4]
1a00286c:	07c9      	lsls	r1, r1, #31
1a00286e:	d40e      	bmi.n	1a00288e <_free_r+0xc2>
1a002870:	442b      	add	r3, r5
1a002872:	f104 0c08 	add.w	ip, r4, #8
1a002876:	6891      	ldr	r1, [r2, #8]
1a002878:	4561      	cmp	r1, ip
1a00287a:	f043 0501 	orr.w	r5, r3, #1
1a00287e:	d067      	beq.n	1a002950 <_free_r+0x184>
1a002880:	68d2      	ldr	r2, [r2, #12]
1a002882:	60ca      	str	r2, [r1, #12]
1a002884:	6091      	str	r1, [r2, #8]
1a002886:	6045      	str	r5, [r0, #4]
1a002888:	50c3      	str	r3, [r0, r3]
1a00288a:	e7d4      	b.n	1a002836 <_free_r+0x6a>
1a00288c:	4770      	bx	lr
1a00288e:	f043 0101 	orr.w	r1, r3, #1
1a002892:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
1a002896:	f847 1c04 	str.w	r1, [r7, #-4]
1a00289a:	6013      	str	r3, [r2, #0]
1a00289c:	d3ce      	bcc.n	1a00283c <_free_r+0x70>
1a00289e:	0a5a      	lsrs	r2, r3, #9
1a0028a0:	2a04      	cmp	r2, #4
1a0028a2:	d842      	bhi.n	1a00292a <_free_r+0x15e>
1a0028a4:	099a      	lsrs	r2, r3, #6
1a0028a6:	f102 0739 	add.w	r7, r2, #57	; 0x39
1a0028aa:	00ff      	lsls	r7, r7, #3
1a0028ac:	f102 0138 	add.w	r1, r2, #56	; 0x38
1a0028b0:	19e5      	adds	r5, r4, r7
1a0028b2:	59e2      	ldr	r2, [r4, r7]
1a0028b4:	3d08      	subs	r5, #8
1a0028b6:	4295      	cmp	r5, r2
1a0028b8:	d051      	beq.n	1a00295e <_free_r+0x192>
1a0028ba:	6851      	ldr	r1, [r2, #4]
1a0028bc:	f021 0103 	bic.w	r1, r1, #3
1a0028c0:	4299      	cmp	r1, r3
1a0028c2:	d902      	bls.n	1a0028ca <_free_r+0xfe>
1a0028c4:	6892      	ldr	r2, [r2, #8]
1a0028c6:	4295      	cmp	r5, r2
1a0028c8:	d1f7      	bne.n	1a0028ba <_free_r+0xee>
1a0028ca:	68d5      	ldr	r5, [r2, #12]
1a0028cc:	e9c0 2502 	strd	r2, r5, [r0, #8]
1a0028d0:	60a8      	str	r0, [r5, #8]
1a0028d2:	60d0      	str	r0, [r2, #12]
1a0028d4:	4630      	mov	r0, r6
1a0028d6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1a0028da:	f000 bc6b 	b.w	1a0031b4 <__malloc_unlock>
1a0028de:	2900      	cmp	r1, #0
1a0028e0:	d15e      	bne.n	1a0029a0 <_free_r+0x1d4>
1a0028e2:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
1a0028e6:	442b      	add	r3, r5
1a0028e8:	f043 0401 	orr.w	r4, r3, #1
1a0028ec:	60ca      	str	r2, [r1, #12]
1a0028ee:	6091      	str	r1, [r2, #8]
1a0028f0:	6044      	str	r4, [r0, #4]
1a0028f2:	50c3      	str	r3, [r0, r3]
1a0028f4:	e7b4      	b.n	1a002860 <_free_r+0x94>
1a0028f6:	f01c 0f01 	tst.w	ip, #1
1a0028fa:	442b      	add	r3, r5
1a0028fc:	d107      	bne.n	1a00290e <_free_r+0x142>
1a0028fe:	f857 2c08 	ldr.w	r2, [r7, #-8]
1a002902:	1a80      	subs	r0, r0, r2
1a002904:	4413      	add	r3, r2
1a002906:	e9d0 1202 	ldrd	r1, r2, [r0, #8]
1a00290a:	60ca      	str	r2, [r1, #12]
1a00290c:	6091      	str	r1, [r2, #8]
1a00290e:	4a28      	ldr	r2, [pc, #160]	; (1a0029b0 <_free_r+0x1e4>)
1a002910:	6812      	ldr	r2, [r2, #0]
1a002912:	f043 0101 	orr.w	r1, r3, #1
1a002916:	429a      	cmp	r2, r3
1a002918:	6041      	str	r1, [r0, #4]
1a00291a:	60a0      	str	r0, [r4, #8]
1a00291c:	d8a0      	bhi.n	1a002860 <_free_r+0x94>
1a00291e:	4b25      	ldr	r3, [pc, #148]	; (1a0029b4 <_free_r+0x1e8>)
1a002920:	4630      	mov	r0, r6
1a002922:	6819      	ldr	r1, [r3, #0]
1a002924:	f7ff ff02 	bl	1a00272c <_malloc_trim_r>
1a002928:	e79a      	b.n	1a002860 <_free_r+0x94>
1a00292a:	2a14      	cmp	r2, #20
1a00292c:	d90a      	bls.n	1a002944 <_free_r+0x178>
1a00292e:	2a54      	cmp	r2, #84	; 0x54
1a002930:	d81d      	bhi.n	1a00296e <_free_r+0x1a2>
1a002932:	0b1a      	lsrs	r2, r3, #12
1a002934:	f102 076f 	add.w	r7, r2, #111	; 0x6f
1a002938:	00ff      	lsls	r7, r7, #3
1a00293a:	f102 016e 	add.w	r1, r2, #110	; 0x6e
1a00293e:	e7b7      	b.n	1a0028b0 <_free_r+0xe4>
1a002940:	442b      	add	r3, r5
1a002942:	e798      	b.n	1a002876 <_free_r+0xaa>
1a002944:	f102 075c 	add.w	r7, r2, #92	; 0x5c
1a002948:	00ff      	lsls	r7, r7, #3
1a00294a:	f102 015b 	add.w	r1, r2, #91	; 0x5b
1a00294e:	e7af      	b.n	1a0028b0 <_free_r+0xe4>
1a002950:	e9c4 0004 	strd	r0, r0, [r4, #16]
1a002954:	e9c0 cc02 	strd	ip, ip, [r0, #8]
1a002958:	6045      	str	r5, [r0, #4]
1a00295a:	50c3      	str	r3, [r0, r3]
1a00295c:	e780      	b.n	1a002860 <_free_r+0x94>
1a00295e:	6863      	ldr	r3, [r4, #4]
1a002960:	1089      	asrs	r1, r1, #2
1a002962:	2701      	movs	r7, #1
1a002964:	fa07 f101 	lsl.w	r1, r7, r1
1a002968:	4319      	orrs	r1, r3
1a00296a:	6061      	str	r1, [r4, #4]
1a00296c:	e7ae      	b.n	1a0028cc <_free_r+0x100>
1a00296e:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
1a002972:	d806      	bhi.n	1a002982 <_free_r+0x1b6>
1a002974:	0bda      	lsrs	r2, r3, #15
1a002976:	f102 0778 	add.w	r7, r2, #120	; 0x78
1a00297a:	00ff      	lsls	r7, r7, #3
1a00297c:	f102 0177 	add.w	r1, r2, #119	; 0x77
1a002980:	e796      	b.n	1a0028b0 <_free_r+0xe4>
1a002982:	f240 5154 	movw	r1, #1364	; 0x554
1a002986:	428a      	cmp	r2, r1
1a002988:	d806      	bhi.n	1a002998 <_free_r+0x1cc>
1a00298a:	0c9a      	lsrs	r2, r3, #18
1a00298c:	f102 077d 	add.w	r7, r2, #125	; 0x7d
1a002990:	00ff      	lsls	r7, r7, #3
1a002992:	f102 017c 	add.w	r1, r2, #124	; 0x7c
1a002996:	e78b      	b.n	1a0028b0 <_free_r+0xe4>
1a002998:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
1a00299c:	217e      	movs	r1, #126	; 0x7e
1a00299e:	e787      	b.n	1a0028b0 <_free_r+0xe4>
1a0029a0:	f043 0101 	orr.w	r1, r3, #1
1a0029a4:	6041      	str	r1, [r0, #4]
1a0029a6:	6013      	str	r3, [r2, #0]
1a0029a8:	e75a      	b.n	1a002860 <_free_r+0x94>
1a0029aa:	bf00      	nop
1a0029ac:	10000478 	.word	0x10000478
1a0029b0:	10000884 	.word	0x10000884
1a0029b4:	10000a48 	.word	0x10000a48

1a0029b8 <_fwalk_reent>:
1a0029b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a0029bc:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
1a0029c0:	d01f      	beq.n	1a002a02 <_fwalk_reent+0x4a>
1a0029c2:	4688      	mov	r8, r1
1a0029c4:	4606      	mov	r6, r0
1a0029c6:	f04f 0900 	mov.w	r9, #0
1a0029ca:	e9d7 5401 	ldrd	r5, r4, [r7, #4]
1a0029ce:	3d01      	subs	r5, #1
1a0029d0:	d411      	bmi.n	1a0029f6 <_fwalk_reent+0x3e>
1a0029d2:	89a3      	ldrh	r3, [r4, #12]
1a0029d4:	2b01      	cmp	r3, #1
1a0029d6:	f105 35ff 	add.w	r5, r5, #4294967295
1a0029da:	d908      	bls.n	1a0029ee <_fwalk_reent+0x36>
1a0029dc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
1a0029e0:	3301      	adds	r3, #1
1a0029e2:	4621      	mov	r1, r4
1a0029e4:	4630      	mov	r0, r6
1a0029e6:	d002      	beq.n	1a0029ee <_fwalk_reent+0x36>
1a0029e8:	47c0      	blx	r8
1a0029ea:	ea49 0900 	orr.w	r9, r9, r0
1a0029ee:	1c6b      	adds	r3, r5, #1
1a0029f0:	f104 0468 	add.w	r4, r4, #104	; 0x68
1a0029f4:	d1ed      	bne.n	1a0029d2 <_fwalk_reent+0x1a>
1a0029f6:	683f      	ldr	r7, [r7, #0]
1a0029f8:	2f00      	cmp	r7, #0
1a0029fa:	d1e6      	bne.n	1a0029ca <_fwalk_reent+0x12>
1a0029fc:	4648      	mov	r0, r9
1a0029fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a002a02:	46b9      	mov	r9, r7
1a002a04:	4648      	mov	r0, r9
1a002a06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a002a0a:	bf00      	nop

1a002a0c <__libc_init_array>:
1a002a0c:	b570      	push	{r4, r5, r6, lr}
1a002a0e:	4e0d      	ldr	r6, [pc, #52]	; (1a002a44 <__libc_init_array+0x38>)
1a002a10:	4d0d      	ldr	r5, [pc, #52]	; (1a002a48 <__libc_init_array+0x3c>)
1a002a12:	1b76      	subs	r6, r6, r5
1a002a14:	10b6      	asrs	r6, r6, #2
1a002a16:	d006      	beq.n	1a002a26 <__libc_init_array+0x1a>
1a002a18:	2400      	movs	r4, #0
1a002a1a:	3401      	adds	r4, #1
1a002a1c:	f855 3b04 	ldr.w	r3, [r5], #4
1a002a20:	4798      	blx	r3
1a002a22:	42a6      	cmp	r6, r4
1a002a24:	d1f9      	bne.n	1a002a1a <__libc_init_array+0xe>
1a002a26:	4e09      	ldr	r6, [pc, #36]	; (1a002a4c <__libc_init_array+0x40>)
1a002a28:	4d09      	ldr	r5, [pc, #36]	; (1a002a50 <__libc_init_array+0x44>)
1a002a2a:	1b76      	subs	r6, r6, r5
1a002a2c:	f7fd fddb 	bl	1a0005e6 <_init>
1a002a30:	10b6      	asrs	r6, r6, #2
1a002a32:	d006      	beq.n	1a002a42 <__libc_init_array+0x36>
1a002a34:	2400      	movs	r4, #0
1a002a36:	3401      	adds	r4, #1
1a002a38:	f855 3b04 	ldr.w	r3, [r5], #4
1a002a3c:	4798      	blx	r3
1a002a3e:	42a6      	cmp	r6, r4
1a002a40:	d1f9      	bne.n	1a002a36 <__libc_init_array+0x2a>
1a002a42:	bd70      	pop	{r4, r5, r6, pc}
1a002a44:	1a0077fc 	.word	0x1a0077fc
1a002a48:	1a0077fc 	.word	0x1a0077fc
1a002a4c:	1a007800 	.word	0x1a007800
1a002a50:	1a0077fc 	.word	0x1a0077fc

1a002a54 <__retarget_lock_init_recursive>:
1a002a54:	4770      	bx	lr
1a002a56:	bf00      	nop

1a002a58 <__retarget_lock_close_recursive>:
1a002a58:	4770      	bx	lr
1a002a5a:	bf00      	nop

1a002a5c <__retarget_lock_acquire_recursive>:
1a002a5c:	4770      	bx	lr
1a002a5e:	bf00      	nop

1a002a60 <__retarget_lock_release_recursive>:
1a002a60:	4770      	bx	lr
1a002a62:	bf00      	nop

1a002a64 <_malloc_r>:
1a002a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a002a68:	f101 050b 	add.w	r5, r1, #11
1a002a6c:	2d16      	cmp	r5, #22
1a002a6e:	b083      	sub	sp, #12
1a002a70:	4606      	mov	r6, r0
1a002a72:	d823      	bhi.n	1a002abc <_malloc_r+0x58>
1a002a74:	2910      	cmp	r1, #16
1a002a76:	f200 80b9 	bhi.w	1a002bec <_malloc_r+0x188>
1a002a7a:	f000 fb95 	bl	1a0031a8 <__malloc_lock>
1a002a7e:	2510      	movs	r5, #16
1a002a80:	2318      	movs	r3, #24
1a002a82:	2002      	movs	r0, #2
1a002a84:	4fba      	ldr	r7, [pc, #744]	; (1a002d70 <_malloc_r+0x30c>)
1a002a86:	443b      	add	r3, r7
1a002a88:	f1a3 0208 	sub.w	r2, r3, #8
1a002a8c:	685c      	ldr	r4, [r3, #4]
1a002a8e:	4294      	cmp	r4, r2
1a002a90:	f000 80b9 	beq.w	1a002c06 <_malloc_r+0x1a2>
1a002a94:	6863      	ldr	r3, [r4, #4]
1a002a96:	f023 0303 	bic.w	r3, r3, #3
1a002a9a:	4423      	add	r3, r4
1a002a9c:	e9d4 5102 	ldrd	r5, r1, [r4, #8]
1a002aa0:	685a      	ldr	r2, [r3, #4]
1a002aa2:	60e9      	str	r1, [r5, #12]
1a002aa4:	f042 0201 	orr.w	r2, r2, #1
1a002aa8:	4630      	mov	r0, r6
1a002aaa:	608d      	str	r5, [r1, #8]
1a002aac:	605a      	str	r2, [r3, #4]
1a002aae:	f000 fb81 	bl	1a0031b4 <__malloc_unlock>
1a002ab2:	3408      	adds	r4, #8
1a002ab4:	4620      	mov	r0, r4
1a002ab6:	b003      	add	sp, #12
1a002ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a002abc:	f035 0507 	bics.w	r5, r5, #7
1a002ac0:	f100 8094 	bmi.w	1a002bec <_malloc_r+0x188>
1a002ac4:	42a9      	cmp	r1, r5
1a002ac6:	f200 8091 	bhi.w	1a002bec <_malloc_r+0x188>
1a002aca:	f000 fb6d 	bl	1a0031a8 <__malloc_lock>
1a002ace:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
1a002ad2:	f0c0 81a2 	bcc.w	1a002e1a <_malloc_r+0x3b6>
1a002ad6:	0a6b      	lsrs	r3, r5, #9
1a002ad8:	f000 808f 	beq.w	1a002bfa <_malloc_r+0x196>
1a002adc:	2b04      	cmp	r3, #4
1a002ade:	f200 8178 	bhi.w	1a002dd2 <_malloc_r+0x36e>
1a002ae2:	09ab      	lsrs	r3, r5, #6
1a002ae4:	f103 0039 	add.w	r0, r3, #57	; 0x39
1a002ae8:	f103 0c38 	add.w	ip, r3, #56	; 0x38
1a002aec:	00c3      	lsls	r3, r0, #3
1a002aee:	4fa0      	ldr	r7, [pc, #640]	; (1a002d70 <_malloc_r+0x30c>)
1a002af0:	443b      	add	r3, r7
1a002af2:	f1a3 0108 	sub.w	r1, r3, #8
1a002af6:	685c      	ldr	r4, [r3, #4]
1a002af8:	42a1      	cmp	r1, r4
1a002afa:	d106      	bne.n	1a002b0a <_malloc_r+0xa6>
1a002afc:	e00c      	b.n	1a002b18 <_malloc_r+0xb4>
1a002afe:	2a00      	cmp	r2, #0
1a002b00:	f280 8127 	bge.w	1a002d52 <_malloc_r+0x2ee>
1a002b04:	68e4      	ldr	r4, [r4, #12]
1a002b06:	42a1      	cmp	r1, r4
1a002b08:	d006      	beq.n	1a002b18 <_malloc_r+0xb4>
1a002b0a:	6863      	ldr	r3, [r4, #4]
1a002b0c:	f023 0303 	bic.w	r3, r3, #3
1a002b10:	1b5a      	subs	r2, r3, r5
1a002b12:	2a0f      	cmp	r2, #15
1a002b14:	ddf3      	ble.n	1a002afe <_malloc_r+0x9a>
1a002b16:	4660      	mov	r0, ip
1a002b18:	693c      	ldr	r4, [r7, #16]
1a002b1a:	f8df c268 	ldr.w	ip, [pc, #616]	; 1a002d84 <_malloc_r+0x320>
1a002b1e:	4564      	cmp	r4, ip
1a002b20:	d07c      	beq.n	1a002c1c <_malloc_r+0x1b8>
1a002b22:	6863      	ldr	r3, [r4, #4]
1a002b24:	f023 0303 	bic.w	r3, r3, #3
1a002b28:	1b5a      	subs	r2, r3, r5
1a002b2a:	2a0f      	cmp	r2, #15
1a002b2c:	f300 8183 	bgt.w	1a002e36 <_malloc_r+0x3d2>
1a002b30:	2a00      	cmp	r2, #0
1a002b32:	e9c7 cc04 	strd	ip, ip, [r7, #16]
1a002b36:	f280 8174 	bge.w	1a002e22 <_malloc_r+0x3be>
1a002b3a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
1a002b3e:	f080 8125 	bcs.w	1a002d8c <_malloc_r+0x328>
1a002b42:	08db      	lsrs	r3, r3, #3
1a002b44:	1c59      	adds	r1, r3, #1
1a002b46:	687a      	ldr	r2, [r7, #4]
1a002b48:	f857 8031 	ldr.w	r8, [r7, r1, lsl #3]
1a002b4c:	f8c4 8008 	str.w	r8, [r4, #8]
1a002b50:	f04f 0e01 	mov.w	lr, #1
1a002b54:	109b      	asrs	r3, r3, #2
1a002b56:	fa0e f303 	lsl.w	r3, lr, r3
1a002b5a:	eb07 0ec1 	add.w	lr, r7, r1, lsl #3
1a002b5e:	4313      	orrs	r3, r2
1a002b60:	f1ae 0208 	sub.w	r2, lr, #8
1a002b64:	60e2      	str	r2, [r4, #12]
1a002b66:	607b      	str	r3, [r7, #4]
1a002b68:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
1a002b6c:	f8c8 400c 	str.w	r4, [r8, #12]
1a002b70:	1082      	asrs	r2, r0, #2
1a002b72:	2401      	movs	r4, #1
1a002b74:	4094      	lsls	r4, r2
1a002b76:	429c      	cmp	r4, r3
1a002b78:	d856      	bhi.n	1a002c28 <_malloc_r+0x1c4>
1a002b7a:	421c      	tst	r4, r3
1a002b7c:	d106      	bne.n	1a002b8c <_malloc_r+0x128>
1a002b7e:	f020 0003 	bic.w	r0, r0, #3
1a002b82:	0064      	lsls	r4, r4, #1
1a002b84:	421c      	tst	r4, r3
1a002b86:	f100 0004 	add.w	r0, r0, #4
1a002b8a:	d0fa      	beq.n	1a002b82 <_malloc_r+0x11e>
1a002b8c:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
1a002b90:	46ce      	mov	lr, r9
1a002b92:	4680      	mov	r8, r0
1a002b94:	f8de 300c 	ldr.w	r3, [lr, #12]
1a002b98:	459e      	cmp	lr, r3
1a002b9a:	d107      	bne.n	1a002bac <_malloc_r+0x148>
1a002b9c:	e125      	b.n	1a002dea <_malloc_r+0x386>
1a002b9e:	2a00      	cmp	r2, #0
1a002ba0:	f280 812c 	bge.w	1a002dfc <_malloc_r+0x398>
1a002ba4:	68db      	ldr	r3, [r3, #12]
1a002ba6:	459e      	cmp	lr, r3
1a002ba8:	f000 811f 	beq.w	1a002dea <_malloc_r+0x386>
1a002bac:	6859      	ldr	r1, [r3, #4]
1a002bae:	f021 0103 	bic.w	r1, r1, #3
1a002bb2:	1b4a      	subs	r2, r1, r5
1a002bb4:	2a0f      	cmp	r2, #15
1a002bb6:	ddf2      	ble.n	1a002b9e <_malloc_r+0x13a>
1a002bb8:	e9d3 8e02 	ldrd	r8, lr, [r3, #8]
1a002bbc:	195c      	adds	r4, r3, r5
1a002bbe:	f045 0501 	orr.w	r5, r5, #1
1a002bc2:	605d      	str	r5, [r3, #4]
1a002bc4:	f042 0501 	orr.w	r5, r2, #1
1a002bc8:	f8c8 e00c 	str.w	lr, [r8, #12]
1a002bcc:	4630      	mov	r0, r6
1a002bce:	f8ce 8008 	str.w	r8, [lr, #8]
1a002bd2:	e9c7 4404 	strd	r4, r4, [r7, #16]
1a002bd6:	e9c4 cc02 	strd	ip, ip, [r4, #8]
1a002bda:	6065      	str	r5, [r4, #4]
1a002bdc:	505a      	str	r2, [r3, r1]
1a002bde:	9300      	str	r3, [sp, #0]
1a002be0:	f000 fae8 	bl	1a0031b4 <__malloc_unlock>
1a002be4:	9b00      	ldr	r3, [sp, #0]
1a002be6:	f103 0408 	add.w	r4, r3, #8
1a002bea:	e002      	b.n	1a002bf2 <_malloc_r+0x18e>
1a002bec:	230c      	movs	r3, #12
1a002bee:	6033      	str	r3, [r6, #0]
1a002bf0:	2400      	movs	r4, #0
1a002bf2:	4620      	mov	r0, r4
1a002bf4:	b003      	add	sp, #12
1a002bf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a002bfa:	f44f 7300 	mov.w	r3, #512	; 0x200
1a002bfe:	2040      	movs	r0, #64	; 0x40
1a002c00:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
1a002c04:	e773      	b.n	1a002aee <_malloc_r+0x8a>
1a002c06:	68dc      	ldr	r4, [r3, #12]
1a002c08:	42a3      	cmp	r3, r4
1a002c0a:	bf08      	it	eq
1a002c0c:	3002      	addeq	r0, #2
1a002c0e:	f47f af41 	bne.w	1a002a94 <_malloc_r+0x30>
1a002c12:	693c      	ldr	r4, [r7, #16]
1a002c14:	f8df c16c 	ldr.w	ip, [pc, #364]	; 1a002d84 <_malloc_r+0x320>
1a002c18:	4564      	cmp	r4, ip
1a002c1a:	d182      	bne.n	1a002b22 <_malloc_r+0xbe>
1a002c1c:	687b      	ldr	r3, [r7, #4]
1a002c1e:	1082      	asrs	r2, r0, #2
1a002c20:	2401      	movs	r4, #1
1a002c22:	4094      	lsls	r4, r2
1a002c24:	429c      	cmp	r4, r3
1a002c26:	d9a8      	bls.n	1a002b7a <_malloc_r+0x116>
1a002c28:	68bc      	ldr	r4, [r7, #8]
1a002c2a:	6863      	ldr	r3, [r4, #4]
1a002c2c:	f023 0803 	bic.w	r8, r3, #3
1a002c30:	45a8      	cmp	r8, r5
1a002c32:	d303      	bcc.n	1a002c3c <_malloc_r+0x1d8>
1a002c34:	eba8 0305 	sub.w	r3, r8, r5
1a002c38:	2b0f      	cmp	r3, #15
1a002c3a:	dc7a      	bgt.n	1a002d32 <_malloc_r+0x2ce>
1a002c3c:	f8df 9148 	ldr.w	r9, [pc, #328]	; 1a002d88 <_malloc_r+0x324>
1a002c40:	4b4c      	ldr	r3, [pc, #304]	; (1a002d74 <_malloc_r+0x310>)
1a002c42:	f8d9 2000 	ldr.w	r2, [r9]
1a002c46:	681b      	ldr	r3, [r3, #0]
1a002c48:	3201      	adds	r2, #1
1a002c4a:	442b      	add	r3, r5
1a002c4c:	eb04 0a08 	add.w	sl, r4, r8
1a002c50:	f000 813c 	beq.w	1a002ecc <_malloc_r+0x468>
1a002c54:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
1a002c58:	330f      	adds	r3, #15
1a002c5a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
1a002c5e:	f02b 0b0f 	bic.w	fp, fp, #15
1a002c62:	4659      	mov	r1, fp
1a002c64:	4630      	mov	r0, r6
1a002c66:	f7fd fd13 	bl	1a000690 <_sbrk_r>
1a002c6a:	1c41      	adds	r1, r0, #1
1a002c6c:	4602      	mov	r2, r0
1a002c6e:	f000 80fc 	beq.w	1a002e6a <_malloc_r+0x406>
1a002c72:	4582      	cmp	sl, r0
1a002c74:	f200 80f7 	bhi.w	1a002e66 <_malloc_r+0x402>
1a002c78:	4b3f      	ldr	r3, [pc, #252]	; (1a002d78 <_malloc_r+0x314>)
1a002c7a:	6818      	ldr	r0, [r3, #0]
1a002c7c:	4458      	add	r0, fp
1a002c7e:	6018      	str	r0, [r3, #0]
1a002c80:	4601      	mov	r1, r0
1a002c82:	f000 8157 	beq.w	1a002f34 <_malloc_r+0x4d0>
1a002c86:	f8d9 0000 	ldr.w	r0, [r9]
1a002c8a:	9301      	str	r3, [sp, #4]
1a002c8c:	3001      	adds	r0, #1
1a002c8e:	bf1b      	ittet	ne
1a002c90:	eba2 0a0a 	subne.w	sl, r2, sl
1a002c94:	4451      	addne	r1, sl
1a002c96:	f8c9 2000 	streq.w	r2, [r9]
1a002c9a:	6019      	strne	r1, [r3, #0]
1a002c9c:	f012 0a07 	ands.w	sl, r2, #7
1a002ca0:	f000 8120 	beq.w	1a002ee4 <_malloc_r+0x480>
1a002ca4:	f1ca 0108 	rsb	r1, sl, #8
1a002ca8:	440a      	add	r2, r1
1a002caa:	f5ca 5180 	rsb	r1, sl, #4096	; 0x1000
1a002cae:	4493      	add	fp, r2
1a002cb0:	3108      	adds	r1, #8
1a002cb2:	eba1 010b 	sub.w	r1, r1, fp
1a002cb6:	f3c1 090b 	ubfx	r9, r1, #0, #12
1a002cba:	4649      	mov	r1, r9
1a002cbc:	4630      	mov	r0, r6
1a002cbe:	9200      	str	r2, [sp, #0]
1a002cc0:	f7fd fce6 	bl	1a000690 <_sbrk_r>
1a002cc4:	1c42      	adds	r2, r0, #1
1a002cc6:	e9dd 2300 	ldrd	r2, r3, [sp]
1a002cca:	f000 8158 	beq.w	1a002f7e <_malloc_r+0x51a>
1a002cce:	1a80      	subs	r0, r0, r2
1a002cd0:	eb00 0b09 	add.w	fp, r0, r9
1a002cd4:	6818      	ldr	r0, [r3, #0]
1a002cd6:	60ba      	str	r2, [r7, #8]
1a002cd8:	f04b 0101 	orr.w	r1, fp, #1
1a002cdc:	4448      	add	r0, r9
1a002cde:	42bc      	cmp	r4, r7
1a002ce0:	6051      	str	r1, [r2, #4]
1a002ce2:	6018      	str	r0, [r3, #0]
1a002ce4:	f000 8132 	beq.w	1a002f4c <_malloc_r+0x4e8>
1a002ce8:	f1b8 0f0f 	cmp.w	r8, #15
1a002cec:	f240 8130 	bls.w	1a002f50 <_malloc_r+0x4ec>
1a002cf0:	6861      	ldr	r1, [r4, #4]
1a002cf2:	f1a8 0c0c 	sub.w	ip, r8, #12
1a002cf6:	f02c 0c07 	bic.w	ip, ip, #7
1a002cfa:	f001 0101 	and.w	r1, r1, #1
1a002cfe:	eb04 0e0c 	add.w	lr, r4, ip
1a002d02:	ea41 010c 	orr.w	r1, r1, ip
1a002d06:	f04f 0805 	mov.w	r8, #5
1a002d0a:	f1bc 0f0f 	cmp.w	ip, #15
1a002d0e:	6061      	str	r1, [r4, #4]
1a002d10:	e9ce 8801 	strd	r8, r8, [lr, #4]
1a002d14:	f200 813b 	bhi.w	1a002f8e <_malloc_r+0x52a>
1a002d18:	6851      	ldr	r1, [r2, #4]
1a002d1a:	4614      	mov	r4, r2
1a002d1c:	4b17      	ldr	r3, [pc, #92]	; (1a002d7c <_malloc_r+0x318>)
1a002d1e:	681a      	ldr	r2, [r3, #0]
1a002d20:	4282      	cmp	r2, r0
1a002d22:	bf38      	it	cc
1a002d24:	6018      	strcc	r0, [r3, #0]
1a002d26:	4b16      	ldr	r3, [pc, #88]	; (1a002d80 <_malloc_r+0x31c>)
1a002d28:	681a      	ldr	r2, [r3, #0]
1a002d2a:	4282      	cmp	r2, r0
1a002d2c:	bf38      	it	cc
1a002d2e:	6018      	strcc	r0, [r3, #0]
1a002d30:	e09d      	b.n	1a002e6e <_malloc_r+0x40a>
1a002d32:	1962      	adds	r2, r4, r5
1a002d34:	f043 0301 	orr.w	r3, r3, #1
1a002d38:	f045 0501 	orr.w	r5, r5, #1
1a002d3c:	6065      	str	r5, [r4, #4]
1a002d3e:	4630      	mov	r0, r6
1a002d40:	60ba      	str	r2, [r7, #8]
1a002d42:	6053      	str	r3, [r2, #4]
1a002d44:	f000 fa36 	bl	1a0031b4 <__malloc_unlock>
1a002d48:	3408      	adds	r4, #8
1a002d4a:	4620      	mov	r0, r4
1a002d4c:	b003      	add	sp, #12
1a002d4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a002d52:	4423      	add	r3, r4
1a002d54:	68e1      	ldr	r1, [r4, #12]
1a002d56:	685a      	ldr	r2, [r3, #4]
1a002d58:	68a5      	ldr	r5, [r4, #8]
1a002d5a:	f042 0201 	orr.w	r2, r2, #1
1a002d5e:	60e9      	str	r1, [r5, #12]
1a002d60:	4630      	mov	r0, r6
1a002d62:	608d      	str	r5, [r1, #8]
1a002d64:	605a      	str	r2, [r3, #4]
1a002d66:	f000 fa25 	bl	1a0031b4 <__malloc_unlock>
1a002d6a:	3408      	adds	r4, #8
1a002d6c:	e741      	b.n	1a002bf2 <_malloc_r+0x18e>
1a002d6e:	bf00      	nop
1a002d70:	10000478 	.word	0x10000478
1a002d74:	10000a48 	.word	0x10000a48
1a002d78:	10000a18 	.word	0x10000a18
1a002d7c:	10000a40 	.word	0x10000a40
1a002d80:	10000a44 	.word	0x10000a44
1a002d84:	10000480 	.word	0x10000480
1a002d88:	10000880 	.word	0x10000880
1a002d8c:	0a5a      	lsrs	r2, r3, #9
1a002d8e:	2a04      	cmp	r2, #4
1a002d90:	d963      	bls.n	1a002e5a <_malloc_r+0x3f6>
1a002d92:	2a14      	cmp	r2, #20
1a002d94:	f200 80b7 	bhi.w	1a002f06 <_malloc_r+0x4a2>
1a002d98:	f102 015c 	add.w	r1, r2, #92	; 0x5c
1a002d9c:	00c9      	lsls	r1, r1, #3
1a002d9e:	325b      	adds	r2, #91	; 0x5b
1a002da0:	eb07 0e01 	add.w	lr, r7, r1
1a002da4:	5879      	ldr	r1, [r7, r1]
1a002da6:	f1ae 0e08 	sub.w	lr, lr, #8
1a002daa:	458e      	cmp	lr, r1
1a002dac:	f000 8091 	beq.w	1a002ed2 <_malloc_r+0x46e>
1a002db0:	684a      	ldr	r2, [r1, #4]
1a002db2:	f022 0203 	bic.w	r2, r2, #3
1a002db6:	429a      	cmp	r2, r3
1a002db8:	d902      	bls.n	1a002dc0 <_malloc_r+0x35c>
1a002dba:	6889      	ldr	r1, [r1, #8]
1a002dbc:	458e      	cmp	lr, r1
1a002dbe:	d1f7      	bne.n	1a002db0 <_malloc_r+0x34c>
1a002dc0:	f8d1 e00c 	ldr.w	lr, [r1, #12]
1a002dc4:	687b      	ldr	r3, [r7, #4]
1a002dc6:	e9c4 1e02 	strd	r1, lr, [r4, #8]
1a002dca:	f8ce 4008 	str.w	r4, [lr, #8]
1a002dce:	60cc      	str	r4, [r1, #12]
1a002dd0:	e6ce      	b.n	1a002b70 <_malloc_r+0x10c>
1a002dd2:	2b14      	cmp	r3, #20
1a002dd4:	d959      	bls.n	1a002e8a <_malloc_r+0x426>
1a002dd6:	2b54      	cmp	r3, #84	; 0x54
1a002dd8:	f200 809d 	bhi.w	1a002f16 <_malloc_r+0x4b2>
1a002ddc:	0b2b      	lsrs	r3, r5, #12
1a002dde:	f103 006f 	add.w	r0, r3, #111	; 0x6f
1a002de2:	f103 0c6e 	add.w	ip, r3, #110	; 0x6e
1a002de6:	00c3      	lsls	r3, r0, #3
1a002de8:	e681      	b.n	1a002aee <_malloc_r+0x8a>
1a002dea:	f108 0801 	add.w	r8, r8, #1
1a002dee:	f018 0f03 	tst.w	r8, #3
1a002df2:	f10e 0e08 	add.w	lr, lr, #8
1a002df6:	f47f aecd 	bne.w	1a002b94 <_malloc_r+0x130>
1a002dfa:	e051      	b.n	1a002ea0 <_malloc_r+0x43c>
1a002dfc:	4419      	add	r1, r3
1a002dfe:	461c      	mov	r4, r3
1a002e00:	684a      	ldr	r2, [r1, #4]
1a002e02:	68db      	ldr	r3, [r3, #12]
1a002e04:	f854 5f08 	ldr.w	r5, [r4, #8]!
1a002e08:	f042 0201 	orr.w	r2, r2, #1
1a002e0c:	604a      	str	r2, [r1, #4]
1a002e0e:	4630      	mov	r0, r6
1a002e10:	60eb      	str	r3, [r5, #12]
1a002e12:	609d      	str	r5, [r3, #8]
1a002e14:	f000 f9ce 	bl	1a0031b4 <__malloc_unlock>
1a002e18:	e6eb      	b.n	1a002bf2 <_malloc_r+0x18e>
1a002e1a:	08e8      	lsrs	r0, r5, #3
1a002e1c:	f105 0308 	add.w	r3, r5, #8
1a002e20:	e630      	b.n	1a002a84 <_malloc_r+0x20>
1a002e22:	4423      	add	r3, r4
1a002e24:	4630      	mov	r0, r6
1a002e26:	685a      	ldr	r2, [r3, #4]
1a002e28:	f042 0201 	orr.w	r2, r2, #1
1a002e2c:	605a      	str	r2, [r3, #4]
1a002e2e:	3408      	adds	r4, #8
1a002e30:	f000 f9c0 	bl	1a0031b4 <__malloc_unlock>
1a002e34:	e6dd      	b.n	1a002bf2 <_malloc_r+0x18e>
1a002e36:	1961      	adds	r1, r4, r5
1a002e38:	f045 0e01 	orr.w	lr, r5, #1
1a002e3c:	f042 0501 	orr.w	r5, r2, #1
1a002e40:	f8c4 e004 	str.w	lr, [r4, #4]
1a002e44:	4630      	mov	r0, r6
1a002e46:	e9c7 1104 	strd	r1, r1, [r7, #16]
1a002e4a:	e9c1 cc02 	strd	ip, ip, [r1, #8]
1a002e4e:	604d      	str	r5, [r1, #4]
1a002e50:	50e2      	str	r2, [r4, r3]
1a002e52:	f000 f9af 	bl	1a0031b4 <__malloc_unlock>
1a002e56:	3408      	adds	r4, #8
1a002e58:	e6cb      	b.n	1a002bf2 <_malloc_r+0x18e>
1a002e5a:	099a      	lsrs	r2, r3, #6
1a002e5c:	f102 0139 	add.w	r1, r2, #57	; 0x39
1a002e60:	00c9      	lsls	r1, r1, #3
1a002e62:	3238      	adds	r2, #56	; 0x38
1a002e64:	e79c      	b.n	1a002da0 <_malloc_r+0x33c>
1a002e66:	42bc      	cmp	r4, r7
1a002e68:	d05f      	beq.n	1a002f2a <_malloc_r+0x4c6>
1a002e6a:	68bc      	ldr	r4, [r7, #8]
1a002e6c:	6861      	ldr	r1, [r4, #4]
1a002e6e:	f021 0b03 	bic.w	fp, r1, #3
1a002e72:	45ab      	cmp	fp, r5
1a002e74:	ebab 0305 	sub.w	r3, fp, r5
1a002e78:	d302      	bcc.n	1a002e80 <_malloc_r+0x41c>
1a002e7a:	2b0f      	cmp	r3, #15
1a002e7c:	f73f af59 	bgt.w	1a002d32 <_malloc_r+0x2ce>
1a002e80:	4630      	mov	r0, r6
1a002e82:	f000 f997 	bl	1a0031b4 <__malloc_unlock>
1a002e86:	2400      	movs	r4, #0
1a002e88:	e6b3      	b.n	1a002bf2 <_malloc_r+0x18e>
1a002e8a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
1a002e8e:	f103 0c5b 	add.w	ip, r3, #91	; 0x5b
1a002e92:	00c3      	lsls	r3, r0, #3
1a002e94:	e62b      	b.n	1a002aee <_malloc_r+0x8a>
1a002e96:	f859 3908 	ldr.w	r3, [r9], #-8
1a002e9a:	454b      	cmp	r3, r9
1a002e9c:	f040 8096 	bne.w	1a002fcc <_malloc_r+0x568>
1a002ea0:	f010 0f03 	tst.w	r0, #3
1a002ea4:	f100 30ff 	add.w	r0, r0, #4294967295
1a002ea8:	d1f5      	bne.n	1a002e96 <_malloc_r+0x432>
1a002eaa:	687b      	ldr	r3, [r7, #4]
1a002eac:	ea23 0304 	bic.w	r3, r3, r4
1a002eb0:	607b      	str	r3, [r7, #4]
1a002eb2:	0064      	lsls	r4, r4, #1
1a002eb4:	429c      	cmp	r4, r3
1a002eb6:	f63f aeb7 	bhi.w	1a002c28 <_malloc_r+0x1c4>
1a002eba:	b91c      	cbnz	r4, 1a002ec4 <_malloc_r+0x460>
1a002ebc:	e6b4      	b.n	1a002c28 <_malloc_r+0x1c4>
1a002ebe:	0064      	lsls	r4, r4, #1
1a002ec0:	f108 0804 	add.w	r8, r8, #4
1a002ec4:	421c      	tst	r4, r3
1a002ec6:	d0fa      	beq.n	1a002ebe <_malloc_r+0x45a>
1a002ec8:	4640      	mov	r0, r8
1a002eca:	e65f      	b.n	1a002b8c <_malloc_r+0x128>
1a002ecc:	f103 0b10 	add.w	fp, r3, #16
1a002ed0:	e6c7      	b.n	1a002c62 <_malloc_r+0x1fe>
1a002ed2:	687b      	ldr	r3, [r7, #4]
1a002ed4:	1092      	asrs	r2, r2, #2
1a002ed6:	f04f 0801 	mov.w	r8, #1
1a002eda:	fa08 f202 	lsl.w	r2, r8, r2
1a002ede:	4313      	orrs	r3, r2
1a002ee0:	607b      	str	r3, [r7, #4]
1a002ee2:	e770      	b.n	1a002dc6 <_malloc_r+0x362>
1a002ee4:	eb02 000b 	add.w	r0, r2, fp
1a002ee8:	4240      	negs	r0, r0
1a002eea:	f3c0 090b 	ubfx	r9, r0, #0, #12
1a002eee:	4649      	mov	r1, r9
1a002ef0:	4630      	mov	r0, r6
1a002ef2:	9200      	str	r2, [sp, #0]
1a002ef4:	f7fd fbcc 	bl	1a000690 <_sbrk_r>
1a002ef8:	1c43      	adds	r3, r0, #1
1a002efa:	e9dd 2300 	ldrd	r2, r3, [sp]
1a002efe:	f47f aee6 	bne.w	1a002cce <_malloc_r+0x26a>
1a002f02:	46d1      	mov	r9, sl
1a002f04:	e6e6      	b.n	1a002cd4 <_malloc_r+0x270>
1a002f06:	2a54      	cmp	r2, #84	; 0x54
1a002f08:	d825      	bhi.n	1a002f56 <_malloc_r+0x4f2>
1a002f0a:	0b1a      	lsrs	r2, r3, #12
1a002f0c:	f102 016f 	add.w	r1, r2, #111	; 0x6f
1a002f10:	00c9      	lsls	r1, r1, #3
1a002f12:	326e      	adds	r2, #110	; 0x6e
1a002f14:	e744      	b.n	1a002da0 <_malloc_r+0x33c>
1a002f16:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
1a002f1a:	d825      	bhi.n	1a002f68 <_malloc_r+0x504>
1a002f1c:	0beb      	lsrs	r3, r5, #15
1a002f1e:	f103 0078 	add.w	r0, r3, #120	; 0x78
1a002f22:	f103 0c77 	add.w	ip, r3, #119	; 0x77
1a002f26:	00c3      	lsls	r3, r0, #3
1a002f28:	e5e1      	b.n	1a002aee <_malloc_r+0x8a>
1a002f2a:	4b29      	ldr	r3, [pc, #164]	; (1a002fd0 <_malloc_r+0x56c>)
1a002f2c:	6819      	ldr	r1, [r3, #0]
1a002f2e:	4459      	add	r1, fp
1a002f30:	6019      	str	r1, [r3, #0]
1a002f32:	e6a8      	b.n	1a002c86 <_malloc_r+0x222>
1a002f34:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
1a002f38:	f1bc 0f00 	cmp.w	ip, #0
1a002f3c:	f47f aea3 	bne.w	1a002c86 <_malloc_r+0x222>
1a002f40:	44c3      	add	fp, r8
1a002f42:	68bc      	ldr	r4, [r7, #8]
1a002f44:	f04b 0101 	orr.w	r1, fp, #1
1a002f48:	6061      	str	r1, [r4, #4]
1a002f4a:	e6e7      	b.n	1a002d1c <_malloc_r+0x2b8>
1a002f4c:	4614      	mov	r4, r2
1a002f4e:	e6e5      	b.n	1a002d1c <_malloc_r+0x2b8>
1a002f50:	2301      	movs	r3, #1
1a002f52:	6053      	str	r3, [r2, #4]
1a002f54:	e794      	b.n	1a002e80 <_malloc_r+0x41c>
1a002f56:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
1a002f5a:	d823      	bhi.n	1a002fa4 <_malloc_r+0x540>
1a002f5c:	0bda      	lsrs	r2, r3, #15
1a002f5e:	f102 0178 	add.w	r1, r2, #120	; 0x78
1a002f62:	00c9      	lsls	r1, r1, #3
1a002f64:	3277      	adds	r2, #119	; 0x77
1a002f66:	e71b      	b.n	1a002da0 <_malloc_r+0x33c>
1a002f68:	f240 5254 	movw	r2, #1364	; 0x554
1a002f6c:	4293      	cmp	r3, r2
1a002f6e:	d823      	bhi.n	1a002fb8 <_malloc_r+0x554>
1a002f70:	0cab      	lsrs	r3, r5, #18
1a002f72:	f103 007d 	add.w	r0, r3, #125	; 0x7d
1a002f76:	f103 0c7c 	add.w	ip, r3, #124	; 0x7c
1a002f7a:	00c3      	lsls	r3, r0, #3
1a002f7c:	e5b7      	b.n	1a002aee <_malloc_r+0x8a>
1a002f7e:	f1aa 0a08 	sub.w	sl, sl, #8
1a002f82:	44d3      	add	fp, sl
1a002f84:	ebab 0b02 	sub.w	fp, fp, r2
1a002f88:	f04f 0900 	mov.w	r9, #0
1a002f8c:	e6a2      	b.n	1a002cd4 <_malloc_r+0x270>
1a002f8e:	f104 0108 	add.w	r1, r4, #8
1a002f92:	4630      	mov	r0, r6
1a002f94:	9300      	str	r3, [sp, #0]
1a002f96:	f7ff fc19 	bl	1a0027cc <_free_r>
1a002f9a:	68bc      	ldr	r4, [r7, #8]
1a002f9c:	9b00      	ldr	r3, [sp, #0]
1a002f9e:	6861      	ldr	r1, [r4, #4]
1a002fa0:	6818      	ldr	r0, [r3, #0]
1a002fa2:	e6bb      	b.n	1a002d1c <_malloc_r+0x2b8>
1a002fa4:	f240 5154 	movw	r1, #1364	; 0x554
1a002fa8:	428a      	cmp	r2, r1
1a002faa:	d80b      	bhi.n	1a002fc4 <_malloc_r+0x560>
1a002fac:	0c9a      	lsrs	r2, r3, #18
1a002fae:	f102 017d 	add.w	r1, r2, #125	; 0x7d
1a002fb2:	00c9      	lsls	r1, r1, #3
1a002fb4:	327c      	adds	r2, #124	; 0x7c
1a002fb6:	e6f3      	b.n	1a002da0 <_malloc_r+0x33c>
1a002fb8:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
1a002fbc:	207f      	movs	r0, #127	; 0x7f
1a002fbe:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
1a002fc2:	e594      	b.n	1a002aee <_malloc_r+0x8a>
1a002fc4:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
1a002fc8:	227e      	movs	r2, #126	; 0x7e
1a002fca:	e6e9      	b.n	1a002da0 <_malloc_r+0x33c>
1a002fcc:	687b      	ldr	r3, [r7, #4]
1a002fce:	e770      	b.n	1a002eb2 <_malloc_r+0x44e>
1a002fd0:	10000a18 	.word	0x10000a18

1a002fd4 <memcpy>:
1a002fd4:	4684      	mov	ip, r0
1a002fd6:	ea41 0300 	orr.w	r3, r1, r0
1a002fda:	f013 0303 	ands.w	r3, r3, #3
1a002fde:	d16d      	bne.n	1a0030bc <memcpy+0xe8>
1a002fe0:	3a40      	subs	r2, #64	; 0x40
1a002fe2:	d341      	bcc.n	1a003068 <memcpy+0x94>
1a002fe4:	f851 3b04 	ldr.w	r3, [r1], #4
1a002fe8:	f840 3b04 	str.w	r3, [r0], #4
1a002fec:	f851 3b04 	ldr.w	r3, [r1], #4
1a002ff0:	f840 3b04 	str.w	r3, [r0], #4
1a002ff4:	f851 3b04 	ldr.w	r3, [r1], #4
1a002ff8:	f840 3b04 	str.w	r3, [r0], #4
1a002ffc:	f851 3b04 	ldr.w	r3, [r1], #4
1a003000:	f840 3b04 	str.w	r3, [r0], #4
1a003004:	f851 3b04 	ldr.w	r3, [r1], #4
1a003008:	f840 3b04 	str.w	r3, [r0], #4
1a00300c:	f851 3b04 	ldr.w	r3, [r1], #4
1a003010:	f840 3b04 	str.w	r3, [r0], #4
1a003014:	f851 3b04 	ldr.w	r3, [r1], #4
1a003018:	f840 3b04 	str.w	r3, [r0], #4
1a00301c:	f851 3b04 	ldr.w	r3, [r1], #4
1a003020:	f840 3b04 	str.w	r3, [r0], #4
1a003024:	f851 3b04 	ldr.w	r3, [r1], #4
1a003028:	f840 3b04 	str.w	r3, [r0], #4
1a00302c:	f851 3b04 	ldr.w	r3, [r1], #4
1a003030:	f840 3b04 	str.w	r3, [r0], #4
1a003034:	f851 3b04 	ldr.w	r3, [r1], #4
1a003038:	f840 3b04 	str.w	r3, [r0], #4
1a00303c:	f851 3b04 	ldr.w	r3, [r1], #4
1a003040:	f840 3b04 	str.w	r3, [r0], #4
1a003044:	f851 3b04 	ldr.w	r3, [r1], #4
1a003048:	f840 3b04 	str.w	r3, [r0], #4
1a00304c:	f851 3b04 	ldr.w	r3, [r1], #4
1a003050:	f840 3b04 	str.w	r3, [r0], #4
1a003054:	f851 3b04 	ldr.w	r3, [r1], #4
1a003058:	f840 3b04 	str.w	r3, [r0], #4
1a00305c:	f851 3b04 	ldr.w	r3, [r1], #4
1a003060:	f840 3b04 	str.w	r3, [r0], #4
1a003064:	3a40      	subs	r2, #64	; 0x40
1a003066:	d2bd      	bcs.n	1a002fe4 <memcpy+0x10>
1a003068:	3230      	adds	r2, #48	; 0x30
1a00306a:	d311      	bcc.n	1a003090 <memcpy+0xbc>
1a00306c:	f851 3b04 	ldr.w	r3, [r1], #4
1a003070:	f840 3b04 	str.w	r3, [r0], #4
1a003074:	f851 3b04 	ldr.w	r3, [r1], #4
1a003078:	f840 3b04 	str.w	r3, [r0], #4
1a00307c:	f851 3b04 	ldr.w	r3, [r1], #4
1a003080:	f840 3b04 	str.w	r3, [r0], #4
1a003084:	f851 3b04 	ldr.w	r3, [r1], #4
1a003088:	f840 3b04 	str.w	r3, [r0], #4
1a00308c:	3a10      	subs	r2, #16
1a00308e:	d2ed      	bcs.n	1a00306c <memcpy+0x98>
1a003090:	320c      	adds	r2, #12
1a003092:	d305      	bcc.n	1a0030a0 <memcpy+0xcc>
1a003094:	f851 3b04 	ldr.w	r3, [r1], #4
1a003098:	f840 3b04 	str.w	r3, [r0], #4
1a00309c:	3a04      	subs	r2, #4
1a00309e:	d2f9      	bcs.n	1a003094 <memcpy+0xc0>
1a0030a0:	3204      	adds	r2, #4
1a0030a2:	d008      	beq.n	1a0030b6 <memcpy+0xe2>
1a0030a4:	07d2      	lsls	r2, r2, #31
1a0030a6:	bf1c      	itt	ne
1a0030a8:	f811 3b01 	ldrbne.w	r3, [r1], #1
1a0030ac:	f800 3b01 	strbne.w	r3, [r0], #1
1a0030b0:	d301      	bcc.n	1a0030b6 <memcpy+0xe2>
1a0030b2:	880b      	ldrh	r3, [r1, #0]
1a0030b4:	8003      	strh	r3, [r0, #0]
1a0030b6:	4660      	mov	r0, ip
1a0030b8:	4770      	bx	lr
1a0030ba:	bf00      	nop
1a0030bc:	2a08      	cmp	r2, #8
1a0030be:	d313      	bcc.n	1a0030e8 <memcpy+0x114>
1a0030c0:	078b      	lsls	r3, r1, #30
1a0030c2:	d08d      	beq.n	1a002fe0 <memcpy+0xc>
1a0030c4:	f010 0303 	ands.w	r3, r0, #3
1a0030c8:	d08a      	beq.n	1a002fe0 <memcpy+0xc>
1a0030ca:	f1c3 0304 	rsb	r3, r3, #4
1a0030ce:	1ad2      	subs	r2, r2, r3
1a0030d0:	07db      	lsls	r3, r3, #31
1a0030d2:	bf1c      	itt	ne
1a0030d4:	f811 3b01 	ldrbne.w	r3, [r1], #1
1a0030d8:	f800 3b01 	strbne.w	r3, [r0], #1
1a0030dc:	d380      	bcc.n	1a002fe0 <memcpy+0xc>
1a0030de:	f831 3b02 	ldrh.w	r3, [r1], #2
1a0030e2:	f820 3b02 	strh.w	r3, [r0], #2
1a0030e6:	e77b      	b.n	1a002fe0 <memcpy+0xc>
1a0030e8:	3a04      	subs	r2, #4
1a0030ea:	d3d9      	bcc.n	1a0030a0 <memcpy+0xcc>
1a0030ec:	3a01      	subs	r2, #1
1a0030ee:	f811 3b01 	ldrb.w	r3, [r1], #1
1a0030f2:	f800 3b01 	strb.w	r3, [r0], #1
1a0030f6:	d2f9      	bcs.n	1a0030ec <memcpy+0x118>
1a0030f8:	780b      	ldrb	r3, [r1, #0]
1a0030fa:	7003      	strb	r3, [r0, #0]
1a0030fc:	784b      	ldrb	r3, [r1, #1]
1a0030fe:	7043      	strb	r3, [r0, #1]
1a003100:	788b      	ldrb	r3, [r1, #2]
1a003102:	7083      	strb	r3, [r0, #2]
1a003104:	4660      	mov	r0, ip
1a003106:	4770      	bx	lr

1a003108 <memset>:
1a003108:	b4f0      	push	{r4, r5, r6, r7}
1a00310a:	0786      	lsls	r6, r0, #30
1a00310c:	d046      	beq.n	1a00319c <memset+0x94>
1a00310e:	1e54      	subs	r4, r2, #1
1a003110:	2a00      	cmp	r2, #0
1a003112:	d03c      	beq.n	1a00318e <memset+0x86>
1a003114:	b2ca      	uxtb	r2, r1
1a003116:	4603      	mov	r3, r0
1a003118:	e002      	b.n	1a003120 <memset+0x18>
1a00311a:	f114 34ff 	adds.w	r4, r4, #4294967295
1a00311e:	d336      	bcc.n	1a00318e <memset+0x86>
1a003120:	f803 2b01 	strb.w	r2, [r3], #1
1a003124:	079d      	lsls	r5, r3, #30
1a003126:	d1f8      	bne.n	1a00311a <memset+0x12>
1a003128:	2c03      	cmp	r4, #3
1a00312a:	d929      	bls.n	1a003180 <memset+0x78>
1a00312c:	b2cd      	uxtb	r5, r1
1a00312e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
1a003132:	2c0f      	cmp	r4, #15
1a003134:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
1a003138:	d933      	bls.n	1a0031a2 <memset+0x9a>
1a00313a:	f1a4 0610 	sub.w	r6, r4, #16
1a00313e:	0936      	lsrs	r6, r6, #4
1a003140:	f103 0720 	add.w	r7, r3, #32
1a003144:	eb07 1706 	add.w	r7, r7, r6, lsl #4
1a003148:	f103 0210 	add.w	r2, r3, #16
1a00314c:	e942 5504 	strd	r5, r5, [r2, #-16]
1a003150:	e942 5502 	strd	r5, r5, [r2, #-8]
1a003154:	3210      	adds	r2, #16
1a003156:	42ba      	cmp	r2, r7
1a003158:	d1f8      	bne.n	1a00314c <memset+0x44>
1a00315a:	1c72      	adds	r2, r6, #1
1a00315c:	f014 0f0c 	tst.w	r4, #12
1a003160:	eb03 1202 	add.w	r2, r3, r2, lsl #4
1a003164:	f004 060f 	and.w	r6, r4, #15
1a003168:	d013      	beq.n	1a003192 <memset+0x8a>
1a00316a:	1f33      	subs	r3, r6, #4
1a00316c:	f023 0303 	bic.w	r3, r3, #3
1a003170:	3304      	adds	r3, #4
1a003172:	4413      	add	r3, r2
1a003174:	f842 5b04 	str.w	r5, [r2], #4
1a003178:	4293      	cmp	r3, r2
1a00317a:	d1fb      	bne.n	1a003174 <memset+0x6c>
1a00317c:	f006 0403 	and.w	r4, r6, #3
1a003180:	b12c      	cbz	r4, 1a00318e <memset+0x86>
1a003182:	b2c9      	uxtb	r1, r1
1a003184:	441c      	add	r4, r3
1a003186:	f803 1b01 	strb.w	r1, [r3], #1
1a00318a:	429c      	cmp	r4, r3
1a00318c:	d1fb      	bne.n	1a003186 <memset+0x7e>
1a00318e:	bcf0      	pop	{r4, r5, r6, r7}
1a003190:	4770      	bx	lr
1a003192:	4634      	mov	r4, r6
1a003194:	4613      	mov	r3, r2
1a003196:	2c00      	cmp	r4, #0
1a003198:	d1f3      	bne.n	1a003182 <memset+0x7a>
1a00319a:	e7f8      	b.n	1a00318e <memset+0x86>
1a00319c:	4614      	mov	r4, r2
1a00319e:	4603      	mov	r3, r0
1a0031a0:	e7c2      	b.n	1a003128 <memset+0x20>
1a0031a2:	461a      	mov	r2, r3
1a0031a4:	4626      	mov	r6, r4
1a0031a6:	e7e0      	b.n	1a00316a <memset+0x62>

1a0031a8 <__malloc_lock>:
1a0031a8:	4801      	ldr	r0, [pc, #4]	; (1a0031b0 <__malloc_lock+0x8>)
1a0031aa:	f7ff bc57 	b.w	1a002a5c <__retarget_lock_acquire_recursive>
1a0031ae:	bf00      	nop
1a0031b0:	10000a64 	.word	0x10000a64

1a0031b4 <__malloc_unlock>:
1a0031b4:	4801      	ldr	r0, [pc, #4]	; (1a0031bc <__malloc_unlock+0x8>)
1a0031b6:	f7ff bc53 	b.w	1a002a60 <__retarget_lock_release_recursive>
1a0031ba:	bf00      	nop
1a0031bc:	10000a64 	.word	0x10000a64

1a0031c0 <printf>:
1a0031c0:	b40f      	push	{r0, r1, r2, r3}
1a0031c2:	b500      	push	{lr}
1a0031c4:	4907      	ldr	r1, [pc, #28]	; (1a0031e4 <printf+0x24>)
1a0031c6:	b083      	sub	sp, #12
1a0031c8:	ab04      	add	r3, sp, #16
1a0031ca:	6808      	ldr	r0, [r1, #0]
1a0031cc:	f853 2b04 	ldr.w	r2, [r3], #4
1a0031d0:	6881      	ldr	r1, [r0, #8]
1a0031d2:	9301      	str	r3, [sp, #4]
1a0031d4:	f000 f8c4 	bl	1a003360 <_vfprintf_r>
1a0031d8:	b003      	add	sp, #12
1a0031da:	f85d eb04 	ldr.w	lr, [sp], #4
1a0031de:	b004      	add	sp, #16
1a0031e0:	4770      	bx	lr
1a0031e2:	bf00      	nop
1a0031e4:	10000048 	.word	0x10000048

1a0031e8 <__sread>:
1a0031e8:	b510      	push	{r4, lr}
1a0031ea:	460c      	mov	r4, r1
1a0031ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a0031f0:	f7fd fa12 	bl	1a000618 <_read_r>
1a0031f4:	2800      	cmp	r0, #0
1a0031f6:	db03      	blt.n	1a003200 <__sread+0x18>
1a0031f8:	6d23      	ldr	r3, [r4, #80]	; 0x50
1a0031fa:	4403      	add	r3, r0
1a0031fc:	6523      	str	r3, [r4, #80]	; 0x50
1a0031fe:	bd10      	pop	{r4, pc}
1a003200:	89a3      	ldrh	r3, [r4, #12]
1a003202:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
1a003206:	81a3      	strh	r3, [r4, #12]
1a003208:	bd10      	pop	{r4, pc}
1a00320a:	bf00      	nop

1a00320c <__swrite>:
1a00320c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a003210:	4616      	mov	r6, r2
1a003212:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
1a003216:	461f      	mov	r7, r3
1a003218:	05d3      	lsls	r3, r2, #23
1a00321a:	460c      	mov	r4, r1
1a00321c:	4605      	mov	r5, r0
1a00321e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a003222:	d409      	bmi.n	1a003238 <__swrite+0x2c>
1a003224:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
1a003228:	81a2      	strh	r2, [r4, #12]
1a00322a:	463b      	mov	r3, r7
1a00322c:	4632      	mov	r2, r6
1a00322e:	4628      	mov	r0, r5
1a003230:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
1a003234:	f7fd ba17 	b.w	1a000666 <_write_r>
1a003238:	2200      	movs	r2, #0
1a00323a:	2302      	movs	r3, #2
1a00323c:	f7fd f9e7 	bl	1a00060e <_lseek_r>
1a003240:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a003244:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1a003248:	e7ec      	b.n	1a003224 <__swrite+0x18>
1a00324a:	bf00      	nop

1a00324c <__sseek>:
1a00324c:	b510      	push	{r4, lr}
1a00324e:	460c      	mov	r4, r1
1a003250:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a003254:	f7fd f9db 	bl	1a00060e <_lseek_r>
1a003258:	89a3      	ldrh	r3, [r4, #12]
1a00325a:	1c42      	adds	r2, r0, #1
1a00325c:	bf0e      	itee	eq
1a00325e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
1a003262:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
1a003266:	6520      	strne	r0, [r4, #80]	; 0x50
1a003268:	81a3      	strh	r3, [r4, #12]
1a00326a:	bd10      	pop	{r4, pc}

1a00326c <__sclose>:
1a00326c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a003270:	f7fd b9ba 	b.w	1a0005e8 <_close_r>
1a003274:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a003278:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00327c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a003280 <strlen>:
1a003280:	f890 f000 	pld	[r0]
1a003284:	e96d 4502 	strd	r4, r5, [sp, #-8]!
1a003288:	f020 0107 	bic.w	r1, r0, #7
1a00328c:	f06f 0c00 	mvn.w	ip, #0
1a003290:	f010 0407 	ands.w	r4, r0, #7
1a003294:	f891 f020 	pld	[r1, #32]
1a003298:	f040 8049 	bne.w	1a00332e <strlen+0xae>
1a00329c:	f04f 0400 	mov.w	r4, #0
1a0032a0:	f06f 0007 	mvn.w	r0, #7
1a0032a4:	e9d1 2300 	ldrd	r2, r3, [r1]
1a0032a8:	f891 f040 	pld	[r1, #64]	; 0x40
1a0032ac:	f100 0008 	add.w	r0, r0, #8
1a0032b0:	fa82 f24c 	uadd8	r2, r2, ip
1a0032b4:	faa4 f28c 	sel	r2, r4, ip
1a0032b8:	fa83 f34c 	uadd8	r3, r3, ip
1a0032bc:	faa2 f38c 	sel	r3, r2, ip
1a0032c0:	bb4b      	cbnz	r3, 1a003316 <strlen+0x96>
1a0032c2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
1a0032c6:	fa82 f24c 	uadd8	r2, r2, ip
1a0032ca:	f100 0008 	add.w	r0, r0, #8
1a0032ce:	faa4 f28c 	sel	r2, r4, ip
1a0032d2:	fa83 f34c 	uadd8	r3, r3, ip
1a0032d6:	faa2 f38c 	sel	r3, r2, ip
1a0032da:	b9e3      	cbnz	r3, 1a003316 <strlen+0x96>
1a0032dc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1a0032e0:	fa82 f24c 	uadd8	r2, r2, ip
1a0032e4:	f100 0008 	add.w	r0, r0, #8
1a0032e8:	faa4 f28c 	sel	r2, r4, ip
1a0032ec:	fa83 f34c 	uadd8	r3, r3, ip
1a0032f0:	faa2 f38c 	sel	r3, r2, ip
1a0032f4:	b97b      	cbnz	r3, 1a003316 <strlen+0x96>
1a0032f6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
1a0032fa:	f101 0120 	add.w	r1, r1, #32
1a0032fe:	fa82 f24c 	uadd8	r2, r2, ip
1a003302:	f100 0008 	add.w	r0, r0, #8
1a003306:	faa4 f28c 	sel	r2, r4, ip
1a00330a:	fa83 f34c 	uadd8	r3, r3, ip
1a00330e:	faa2 f38c 	sel	r3, r2, ip
1a003312:	2b00      	cmp	r3, #0
1a003314:	d0c6      	beq.n	1a0032a4 <strlen+0x24>
1a003316:	2a00      	cmp	r2, #0
1a003318:	bf04      	itt	eq
1a00331a:	3004      	addeq	r0, #4
1a00331c:	461a      	moveq	r2, r3
1a00331e:	ba12      	rev	r2, r2
1a003320:	fab2 f282 	clz	r2, r2
1a003324:	e8fd 4502 	ldrd	r4, r5, [sp], #8
1a003328:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
1a00332c:	4770      	bx	lr
1a00332e:	e9d1 2300 	ldrd	r2, r3, [r1]
1a003332:	f004 0503 	and.w	r5, r4, #3
1a003336:	f1c4 0000 	rsb	r0, r4, #0
1a00333a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
1a00333e:	f014 0f04 	tst.w	r4, #4
1a003342:	f891 f040 	pld	[r1, #64]	; 0x40
1a003346:	fa0c f505 	lsl.w	r5, ip, r5
1a00334a:	ea62 0205 	orn	r2, r2, r5
1a00334e:	bf1c      	itt	ne
1a003350:	ea63 0305 	ornne	r3, r3, r5
1a003354:	4662      	movne	r2, ip
1a003356:	f04f 0400 	mov.w	r4, #0
1a00335a:	e7a9      	b.n	1a0032b0 <strlen+0x30>
1a00335c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a003360 <_vfprintf_r>:
1a003360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a003364:	b0d5      	sub	sp, #340	; 0x154
1a003366:	461c      	mov	r4, r3
1a003368:	4689      	mov	r9, r1
1a00336a:	4617      	mov	r7, r2
1a00336c:	4605      	mov	r5, r0
1a00336e:	9005      	str	r0, [sp, #20]
1a003370:	f002 ff8c 	bl	1a00628c <_localeconv_r>
1a003374:	6803      	ldr	r3, [r0, #0]
1a003376:	9315      	str	r3, [sp, #84]	; 0x54
1a003378:	4618      	mov	r0, r3
1a00337a:	f7ff ff81 	bl	1a003280 <strlen>
1a00337e:	9408      	str	r4, [sp, #32]
1a003380:	9013      	str	r0, [sp, #76]	; 0x4c
1a003382:	b11d      	cbz	r5, 1a00338c <_vfprintf_r+0x2c>
1a003384:	6bab      	ldr	r3, [r5, #56]	; 0x38
1a003386:	2b00      	cmp	r3, #0
1a003388:	f000 8411 	beq.w	1a003bae <_vfprintf_r+0x84e>
1a00338c:	f8d9 1064 	ldr.w	r1, [r9, #100]	; 0x64
1a003390:	f9b9 200c 	ldrsh.w	r2, [r9, #12]
1a003394:	07cd      	lsls	r5, r1, #31
1a003396:	b293      	uxth	r3, r2
1a003398:	d402      	bmi.n	1a0033a0 <_vfprintf_r+0x40>
1a00339a:	0598      	lsls	r0, r3, #22
1a00339c:	f140 8754 	bpl.w	1a004248 <_vfprintf_r+0xee8>
1a0033a0:	0499      	lsls	r1, r3, #18
1a0033a2:	d40a      	bmi.n	1a0033ba <_vfprintf_r+0x5a>
1a0033a4:	f8d9 1064 	ldr.w	r1, [r9, #100]	; 0x64
1a0033a8:	f442 5300 	orr.w	r3, r2, #8192	; 0x2000
1a0033ac:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
1a0033b0:	f8a9 300c 	strh.w	r3, [r9, #12]
1a0033b4:	f8c9 1064 	str.w	r1, [r9, #100]	; 0x64
1a0033b8:	b29b      	uxth	r3, r3
1a0033ba:	071a      	lsls	r2, r3, #28
1a0033bc:	f140 80bf 	bpl.w	1a00353e <_vfprintf_r+0x1de>
1a0033c0:	f8d9 2010 	ldr.w	r2, [r9, #16]
1a0033c4:	2a00      	cmp	r2, #0
1a0033c6:	f000 80ba 	beq.w	1a00353e <_vfprintf_r+0x1de>
1a0033ca:	f003 021a 	and.w	r2, r3, #26
1a0033ce:	2a0a      	cmp	r2, #10
1a0033d0:	f000 80c3 	beq.w	1a00355a <_vfprintf_r+0x1fa>
1a0033d4:	2300      	movs	r3, #0
1a0033d6:	ed9f 7b9c 	vldr	d7, [pc, #624]	; 1a003648 <_vfprintf_r+0x2e8>
1a0033da:	9312      	str	r3, [sp, #72]	; 0x48
1a0033dc:	e9cd 3329 	strd	r3, r3, [sp, #164]	; 0xa4
1a0033e0:	9314      	str	r3, [sp, #80]	; 0x50
1a0033e2:	9316      	str	r3, [sp, #88]	; 0x58
1a0033e4:	e9cd 3318 	strd	r3, r3, [sp, #96]	; 0x60
1a0033e8:	9317      	str	r3, [sp, #92]	; 0x5c
1a0033ea:	9304      	str	r3, [sp, #16]
1a0033ec:	ab2b      	add	r3, sp, #172	; 0xac
1a0033ee:	9328      	str	r3, [sp, #160]	; 0xa0
1a0033f0:	469b      	mov	fp, r3
1a0033f2:	783b      	ldrb	r3, [r7, #0]
1a0033f4:	f8cd 901c 	str.w	r9, [sp, #28]
1a0033f8:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
1a0033fc:	2b00      	cmp	r3, #0
1a0033fe:	f000 8267 	beq.w	1a0038d0 <_vfprintf_r+0x570>
1a003402:	2b25      	cmp	r3, #37	; 0x25
1a003404:	f001 80ab 	beq.w	1a00455e <_vfprintf_r+0x11fe>
1a003408:	463d      	mov	r5, r7
1a00340a:	e003      	b.n	1a003414 <_vfprintf_r+0xb4>
1a00340c:	2b25      	cmp	r3, #37	; 0x25
1a00340e:	f000 80bb 	beq.w	1a003588 <_vfprintf_r+0x228>
1a003412:	4625      	mov	r5, r4
1a003414:	786b      	ldrb	r3, [r5, #1]
1a003416:	1c6c      	adds	r4, r5, #1
1a003418:	2b00      	cmp	r3, #0
1a00341a:	d1f7      	bne.n	1a00340c <_vfprintf_r+0xac>
1a00341c:	1be6      	subs	r6, r4, r7
1a00341e:	f000 8257 	beq.w	1a0038d0 <_vfprintf_r+0x570>
1a003422:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
1a003426:	3301      	adds	r3, #1
1a003428:	4432      	add	r2, r6
1a00342a:	2b07      	cmp	r3, #7
1a00342c:	f8cb 7000 	str.w	r7, [fp]
1a003430:	f8cb 6004 	str.w	r6, [fp, #4]
1a003434:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
1a003438:	f300 80aa 	bgt.w	1a003590 <_vfprintf_r+0x230>
1a00343c:	f10b 0b08 	add.w	fp, fp, #8
1a003440:	9a04      	ldr	r2, [sp, #16]
1a003442:	786b      	ldrb	r3, [r5, #1]
1a003444:	4432      	add	r2, r6
1a003446:	9204      	str	r2, [sp, #16]
1a003448:	2b00      	cmp	r3, #0
1a00344a:	f000 8241 	beq.w	1a0038d0 <_vfprintf_r+0x570>
1a00344e:	2300      	movs	r3, #0
1a003450:	f894 8001 	ldrb.w	r8, [r4, #1]
1a003454:	9306      	str	r3, [sp, #24]
1a003456:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
1a00345a:	9302      	str	r3, [sp, #8]
1a00345c:	f104 0a01 	add.w	sl, r4, #1
1a003460:	f04f 39ff 	mov.w	r9, #4294967295
1a003464:	262b      	movs	r6, #43	; 0x2b
1a003466:	2120      	movs	r1, #32
1a003468:	f10a 0a01 	add.w	sl, sl, #1
1a00346c:	f1a8 0320 	sub.w	r3, r8, #32
1a003470:	2b5a      	cmp	r3, #90	; 0x5a
1a003472:	f200 83a1 	bhi.w	1a003bb8 <_vfprintf_r+0x858>
1a003476:	e8df f013 	tbh	[pc, r3, lsl #1]
1a00347a:	0282      	.short	0x0282
1a00347c:	039f039f 	.word	0x039f039f
1a003480:	039f027b 	.word	0x039f027b
1a003484:	039f039f 	.word	0x039f039f
1a003488:	039f0301 	.word	0x039f0301
1a00348c:	02f6039f 	.word	0x02f6039f
1a003490:	039f00df 	.word	0x039f00df
1a003494:	032b00c4 	.word	0x032b00c4
1a003498:	0324039f 	.word	0x0324039f
1a00349c:	00960096 	.word	0x00960096
1a0034a0:	00960096 	.word	0x00960096
1a0034a4:	00960096 	.word	0x00960096
1a0034a8:	00960096 	.word	0x00960096
1a0034ac:	039f0096 	.word	0x039f0096
1a0034b0:	039f039f 	.word	0x039f039f
1a0034b4:	039f039f 	.word	0x039f039f
1a0034b8:	039f039f 	.word	0x039f039f
1a0034bc:	039f0345 	.word	0x039f0345
1a0034c0:	016201a8 	.word	0x016201a8
1a0034c4:	03450345 	.word	0x03450345
1a0034c8:	039f0345 	.word	0x039f0345
1a0034cc:	039f039f 	.word	0x039f039f
1a0034d0:	015b039f 	.word	0x015b039f
1a0034d4:	039f039f 	.word	0x039f039f
1a0034d8:	039f014e 	.word	0x039f014e
1a0034dc:	039f039f 	.word	0x039f039f
1a0034e0:	039f0123 	.word	0x039f0123
1a0034e4:	039f0115 	.word	0x039f0115
1a0034e8:	00cb039f 	.word	0x00cb039f
1a0034ec:	039f039f 	.word	0x039f039f
1a0034f0:	039f039f 	.word	0x039f039f
1a0034f4:	039f039f 	.word	0x039f039f
1a0034f8:	039f039f 	.word	0x039f039f
1a0034fc:	039f0345 	.word	0x039f0345
1a003500:	00ef01a8 	.word	0x00ef01a8
1a003504:	03450345 	.word	0x03450345
1a003508:	02700345 	.word	0x02700345
1a00350c:	005b00ef 	.word	0x005b00ef
1a003510:	02eb039f 	.word	0x02eb039f
1a003514:	02d1039f 	.word	0x02d1039f
1a003518:	028c02bd 	.word	0x028c02bd
1a00351c:	039f005b 	.word	0x039f005b
1a003520:	005f0123 	.word	0x005f0123
1a003524:	039f0387 	.word	0x039f0387
1a003528:	00a5039f 	.word	0x00a5039f
1a00352c:	005f039f 	.word	0x005f039f
1a003530:	9b02      	ldr	r3, [sp, #8]
1a003532:	f043 0320 	orr.w	r3, r3, #32
1a003536:	9302      	str	r3, [sp, #8]
1a003538:	f89a 8000 	ldrb.w	r8, [sl]
1a00353c:	e794      	b.n	1a003468 <_vfprintf_r+0x108>
1a00353e:	4649      	mov	r1, r9
1a003540:	9805      	ldr	r0, [sp, #20]
1a003542:	f001 fcf9 	bl	1a004f38 <__swsetup_r>
1a003546:	2800      	cmp	r0, #0
1a003548:	f041 8381 	bne.w	1a004c4e <_vfprintf_r+0x18ee>
1a00354c:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a003550:	f003 021a 	and.w	r2, r3, #26
1a003554:	2a0a      	cmp	r2, #10
1a003556:	f47f af3d 	bne.w	1a0033d4 <_vfprintf_r+0x74>
1a00355a:	f9b9 200e 	ldrsh.w	r2, [r9, #14]
1a00355e:	2a00      	cmp	r2, #0
1a003560:	f6ff af38 	blt.w	1a0033d4 <_vfprintf_r+0x74>
1a003564:	f8d9 2064 	ldr.w	r2, [r9, #100]	; 0x64
1a003568:	07d6      	lsls	r6, r2, #31
1a00356a:	d402      	bmi.n	1a003572 <_vfprintf_r+0x212>
1a00356c:	059d      	lsls	r5, r3, #22
1a00356e:	f141 8190 	bpl.w	1a004892 <_vfprintf_r+0x1532>
1a003572:	4623      	mov	r3, r4
1a003574:	463a      	mov	r2, r7
1a003576:	4649      	mov	r1, r9
1a003578:	9805      	ldr	r0, [sp, #20]
1a00357a:	f001 fc9b 	bl	1a004eb4 <__sbprintf>
1a00357e:	9004      	str	r0, [sp, #16]
1a003580:	9804      	ldr	r0, [sp, #16]
1a003582:	b055      	add	sp, #340	; 0x154
1a003584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a003588:	1be6      	subs	r6, r4, r7
1a00358a:	f43f af60 	beq.w	1a00344e <_vfprintf_r+0xee>
1a00358e:	e748      	b.n	1a003422 <_vfprintf_r+0xc2>
1a003590:	aa28      	add	r2, sp, #160	; 0xa0
1a003592:	9907      	ldr	r1, [sp, #28]
1a003594:	9805      	ldr	r0, [sp, #20]
1a003596:	f003 fd1f 	bl	1a006fd8 <__sprint_r>
1a00359a:	2800      	cmp	r0, #0
1a00359c:	f041 8427 	bne.w	1a004dee <_vfprintf_r+0x1a8e>
1a0035a0:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0035a4:	e74c      	b.n	1a003440 <_vfprintf_r+0xe0>
1a0035a6:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a0035aa:	2200      	movs	r2, #0
1a0035ac:	f81a 8b01 	ldrb.w	r8, [sl], #1
1a0035b0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
1a0035b4:	eb03 0242 	add.w	r2, r3, r2, lsl #1
1a0035b8:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a0035bc:	2b09      	cmp	r3, #9
1a0035be:	d9f5      	bls.n	1a0035ac <_vfprintf_r+0x24c>
1a0035c0:	9206      	str	r2, [sp, #24]
1a0035c2:	e753      	b.n	1a00346c <_vfprintf_r+0x10c>
1a0035c4:	4b22      	ldr	r3, [pc, #136]	; (1a003650 <_vfprintf_r+0x2f0>)
1a0035c6:	9314      	str	r3, [sp, #80]	; 0x50
1a0035c8:	9b02      	ldr	r3, [sp, #8]
1a0035ca:	069f      	lsls	r7, r3, #26
1a0035cc:	d525      	bpl.n	1a00361a <_vfprintf_r+0x2ba>
1a0035ce:	9c08      	ldr	r4, [sp, #32]
1a0035d0:	3407      	adds	r4, #7
1a0035d2:	f024 0307 	bic.w	r3, r4, #7
1a0035d6:	e8f3 4502 	ldrd	r4, r5, [r3], #8
1a0035da:	9308      	str	r3, [sp, #32]
1a0035dc:	9a02      	ldr	r2, [sp, #8]
1a0035de:	07d1      	lsls	r1, r2, #31
1a0035e0:	d50a      	bpl.n	1a0035f8 <_vfprintf_r+0x298>
1a0035e2:	ea54 0305 	orrs.w	r3, r4, r5
1a0035e6:	d007      	beq.n	1a0035f8 <_vfprintf_r+0x298>
1a0035e8:	2330      	movs	r3, #48	; 0x30
1a0035ea:	f042 0202 	orr.w	r2, r2, #2
1a0035ee:	f88d 8085 	strb.w	r8, [sp, #133]	; 0x85
1a0035f2:	9202      	str	r2, [sp, #8]
1a0035f4:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
1a0035f8:	9b02      	ldr	r3, [sp, #8]
1a0035fa:	f423 6680 	bic.w	r6, r3, #1024	; 0x400
1a0035fe:	2302      	movs	r3, #2
1a003600:	e1d9      	b.n	1a0039b6 <_vfprintf_r+0x656>
1a003602:	f89a 8000 	ldrb.w	r8, [sl]
1a003606:	9b02      	ldr	r3, [sp, #8]
1a003608:	f043 0304 	orr.w	r3, r3, #4
1a00360c:	9302      	str	r3, [sp, #8]
1a00360e:	e72b      	b.n	1a003468 <_vfprintf_r+0x108>
1a003610:	4b10      	ldr	r3, [pc, #64]	; (1a003654 <_vfprintf_r+0x2f4>)
1a003612:	9314      	str	r3, [sp, #80]	; 0x50
1a003614:	9b02      	ldr	r3, [sp, #8]
1a003616:	069f      	lsls	r7, r3, #26
1a003618:	d4d9      	bmi.n	1a0035ce <_vfprintf_r+0x26e>
1a00361a:	9b08      	ldr	r3, [sp, #32]
1a00361c:	f853 4b04 	ldr.w	r4, [r3], #4
1a003620:	9308      	str	r3, [sp, #32]
1a003622:	9b02      	ldr	r3, [sp, #8]
1a003624:	06de      	lsls	r6, r3, #27
1a003626:	f100 864f 	bmi.w	1a0042c8 <_vfprintf_r+0xf68>
1a00362a:	9b02      	ldr	r3, [sp, #8]
1a00362c:	065d      	lsls	r5, r3, #25
1a00362e:	f140 8647 	bpl.w	1a0042c0 <_vfprintf_r+0xf60>
1a003632:	b2a4      	uxth	r4, r4
1a003634:	2500      	movs	r5, #0
1a003636:	e7d1      	b.n	1a0035dc <_vfprintf_r+0x27c>
1a003638:	f88d 6083 	strb.w	r6, [sp, #131]	; 0x83
1a00363c:	f89a 8000 	ldrb.w	r8, [sl]
1a003640:	e712      	b.n	1a003468 <_vfprintf_r+0x108>
1a003642:	bf00      	nop
1a003644:	f3af 8000 	nop.w
	...
1a003650:	1a0076a0 	.word	0x1a0076a0
1a003654:	1a00768c 	.word	0x1a00768c
1a003658:	9e02      	ldr	r6, [sp, #8]
1a00365a:	06b0      	lsls	r0, r6, #26
1a00365c:	f140 870b 	bpl.w	1a004476 <_vfprintf_r+0x1116>
1a003660:	9c08      	ldr	r4, [sp, #32]
1a003662:	3407      	adds	r4, #7
1a003664:	f024 0307 	bic.w	r3, r4, #7
1a003668:	4619      	mov	r1, r3
1a00366a:	e8f1 2302 	ldrd	r2, r3, [r1], #8
1a00366e:	9108      	str	r1, [sp, #32]
1a003670:	4614      	mov	r4, r2
1a003672:	461d      	mov	r5, r3
1a003674:	2a00      	cmp	r2, #0
1a003676:	f173 0300 	sbcs.w	r3, r3, #0
1a00367a:	db71      	blt.n	1a003760 <_vfprintf_r+0x400>
1a00367c:	f1b9 3fff 	cmp.w	r9, #4294967295
1a003680:	f000 82c5 	beq.w	1a003c0e <_vfprintf_r+0x8ae>
1a003684:	f026 0380 	bic.w	r3, r6, #128	; 0x80
1a003688:	9302      	str	r3, [sp, #8]
1a00368a:	ea54 0305 	orrs.w	r3, r4, r5
1a00368e:	f040 82bd 	bne.w	1a003c0c <_vfprintf_r+0x8ac>
1a003692:	f1b9 0f00 	cmp.w	r9, #0
1a003696:	f041 810e 	bne.w	1a0048b6 <_vfprintf_r+0x1556>
1a00369a:	f04f 0900 	mov.w	r9, #0
1a00369e:	464e      	mov	r6, r9
1a0036a0:	af54      	add	r7, sp, #336	; 0x150
1a0036a2:	e2bf      	b.n	1a003c24 <_vfprintf_r+0x8c4>
1a0036a4:	9b02      	ldr	r3, [sp, #8]
1a0036a6:	069d      	lsls	r5, r3, #26
1a0036a8:	f043 0610 	orr.w	r6, r3, #16
1a0036ac:	f100 828f 	bmi.w	1a003bce <_vfprintf_r+0x86e>
1a0036b0:	9b08      	ldr	r3, [sp, #32]
1a0036b2:	1d1a      	adds	r2, r3, #4
1a0036b4:	9b08      	ldr	r3, [sp, #32]
1a0036b6:	9208      	str	r2, [sp, #32]
1a0036b8:	681c      	ldr	r4, [r3, #0]
1a0036ba:	2500      	movs	r5, #0
1a0036bc:	2301      	movs	r3, #1
1a0036be:	e17a      	b.n	1a0039b6 <_vfprintf_r+0x656>
1a0036c0:	9c08      	ldr	r4, [sp, #32]
1a0036c2:	f854 7b04 	ldr.w	r7, [r4], #4
1a0036c6:	2500      	movs	r5, #0
1a0036c8:	f88d 5083 	strb.w	r5, [sp, #131]	; 0x83
1a0036cc:	2f00      	cmp	r7, #0
1a0036ce:	f000 8737 	beq.w	1a004540 <_vfprintf_r+0x11e0>
1a0036d2:	f1b9 3fff 	cmp.w	r9, #4294967295
1a0036d6:	f000 87bc 	beq.w	1a004652 <_vfprintf_r+0x12f2>
1a0036da:	464a      	mov	r2, r9
1a0036dc:	4629      	mov	r1, r5
1a0036de:	4638      	mov	r0, r7
1a0036e0:	f002 fe56 	bl	1a006390 <memchr>
1a0036e4:	9009      	str	r0, [sp, #36]	; 0x24
1a0036e6:	2800      	cmp	r0, #0
1a0036e8:	f001 824a 	beq.w	1a004b80 <_vfprintf_r+0x1820>
1a0036ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0036ee:	46a9      	mov	r9, r5
1a0036f0:	1bde      	subs	r6, r3, r7
1a0036f2:	e9cd 990e 	strd	r9, r9, [sp, #56]	; 0x38
1a0036f6:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a0036fa:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a0036fe:	9408      	str	r4, [sp, #32]
1a003700:	9303      	str	r3, [sp, #12]
1a003702:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
1a003706:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
1a00370a:	2a00      	cmp	r2, #0
1a00370c:	d06f      	beq.n	1a0037ee <_vfprintf_r+0x48e>
1a00370e:	9b03      	ldr	r3, [sp, #12]
1a003710:	3301      	adds	r3, #1
1a003712:	9303      	str	r3, [sp, #12]
1a003714:	e06b      	b.n	1a0037ee <_vfprintf_r+0x48e>
1a003716:	9b02      	ldr	r3, [sp, #8]
1a003718:	069c      	lsls	r4, r3, #26
1a00371a:	f043 0610 	orr.w	r6, r3, #16
1a00371e:	f100 825f 	bmi.w	1a003be0 <_vfprintf_r+0x880>
1a003722:	9b08      	ldr	r3, [sp, #32]
1a003724:	1d1a      	adds	r2, r3, #4
1a003726:	9b08      	ldr	r3, [sp, #32]
1a003728:	9208      	str	r2, [sp, #32]
1a00372a:	681c      	ldr	r4, [r3, #0]
1a00372c:	2500      	movs	r5, #0
1a00372e:	e25e      	b.n	1a003bee <_vfprintf_r+0x88e>
1a003730:	9b02      	ldr	r3, [sp, #8]
1a003732:	f89a 8000 	ldrb.w	r8, [sl]
1a003736:	f043 0308 	orr.w	r3, r3, #8
1a00373a:	9302      	str	r3, [sp, #8]
1a00373c:	e694      	b.n	1a003468 <_vfprintf_r+0x108>
1a00373e:	9b02      	ldr	r3, [sp, #8]
1a003740:	069c      	lsls	r4, r3, #26
1a003742:	f043 0610 	orr.w	r6, r3, #16
1a003746:	d48b      	bmi.n	1a003660 <_vfprintf_r+0x300>
1a003748:	9b08      	ldr	r3, [sp, #32]
1a00374a:	1d1a      	adds	r2, r3, #4
1a00374c:	9b08      	ldr	r3, [sp, #32]
1a00374e:	9208      	str	r2, [sp, #32]
1a003750:	681c      	ldr	r4, [r3, #0]
1a003752:	17e5      	asrs	r5, r4, #31
1a003754:	4622      	mov	r2, r4
1a003756:	462b      	mov	r3, r5
1a003758:	2a00      	cmp	r2, #0
1a00375a:	f173 0300 	sbcs.w	r3, r3, #0
1a00375e:	da8d      	bge.n	1a00367c <_vfprintf_r+0x31c>
1a003760:	4264      	negs	r4, r4
1a003762:	f04f 032d 	mov.w	r3, #45	; 0x2d
1a003766:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
1a00376a:	f1b9 3fff 	cmp.w	r9, #4294967295
1a00376e:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
1a003772:	f04f 0301 	mov.w	r3, #1
1a003776:	f040 8125 	bne.w	1a0039c4 <_vfprintf_r+0x664>
1a00377a:	2b01      	cmp	r3, #1
1a00377c:	f000 8247 	beq.w	1a003c0e <_vfprintf_r+0x8ae>
1a003780:	2b02      	cmp	r3, #2
1a003782:	f000 8479 	beq.w	1a004078 <_vfprintf_r+0xd18>
1a003786:	a954      	add	r1, sp, #336	; 0x150
1a003788:	e000      	b.n	1a00378c <_vfprintf_r+0x42c>
1a00378a:	4639      	mov	r1, r7
1a00378c:	08e2      	lsrs	r2, r4, #3
1a00378e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
1a003792:	08e8      	lsrs	r0, r5, #3
1a003794:	f004 0307 	and.w	r3, r4, #7
1a003798:	4605      	mov	r5, r0
1a00379a:	4614      	mov	r4, r2
1a00379c:	3330      	adds	r3, #48	; 0x30
1a00379e:	ea54 0205 	orrs.w	r2, r4, r5
1a0037a2:	f801 3c01 	strb.w	r3, [r1, #-1]
1a0037a6:	f101 37ff 	add.w	r7, r1, #4294967295
1a0037aa:	d1ee      	bne.n	1a00378a <_vfprintf_r+0x42a>
1a0037ac:	07f2      	lsls	r2, r6, #31
1a0037ae:	f140 8288 	bpl.w	1a003cc2 <_vfprintf_r+0x962>
1a0037b2:	2b30      	cmp	r3, #48	; 0x30
1a0037b4:	f000 8285 	beq.w	1a003cc2 <_vfprintf_r+0x962>
1a0037b8:	2330      	movs	r3, #48	; 0x30
1a0037ba:	3902      	subs	r1, #2
1a0037bc:	f807 3c01 	strb.w	r3, [r7, #-1]
1a0037c0:	ab54      	add	r3, sp, #336	; 0x150
1a0037c2:	9602      	str	r6, [sp, #8]
1a0037c4:	460f      	mov	r7, r1
1a0037c6:	1a5e      	subs	r6, r3, r1
1a0037c8:	e22c      	b.n	1a003c24 <_vfprintf_r+0x8c4>
1a0037ca:	9c08      	ldr	r4, [sp, #32]
1a0037cc:	2300      	movs	r3, #0
1a0037ce:	f854 2b04 	ldr.w	r2, [r4], #4
1a0037d2:	f88d 20ec 	strb.w	r2, [sp, #236]	; 0xec
1a0037d6:	2601      	movs	r6, #1
1a0037d8:	461a      	mov	r2, r3
1a0037da:	9603      	str	r6, [sp, #12]
1a0037dc:	9408      	str	r4, [sp, #32]
1a0037de:	e9cd 220e 	strd	r2, r2, [sp, #56]	; 0x38
1a0037e2:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
1a0037e6:	9209      	str	r2, [sp, #36]	; 0x24
1a0037e8:	4691      	mov	r9, r2
1a0037ea:	920c      	str	r2, [sp, #48]	; 0x30
1a0037ec:	af3b      	add	r7, sp, #236	; 0xec
1a0037ee:	9b02      	ldr	r3, [sp, #8]
1a0037f0:	f013 0302 	ands.w	r3, r3, #2
1a0037f4:	930a      	str	r3, [sp, #40]	; 0x28
1a0037f6:	d002      	beq.n	1a0037fe <_vfprintf_r+0x49e>
1a0037f8:	9b03      	ldr	r3, [sp, #12]
1a0037fa:	3302      	adds	r3, #2
1a0037fc:	9303      	str	r3, [sp, #12]
1a0037fe:	9b02      	ldr	r3, [sp, #8]
1a003800:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003802:	f013 0384 	ands.w	r3, r3, #132	; 0x84
1a003806:	930b      	str	r3, [sp, #44]	; 0x2c
1a003808:	d104      	bne.n	1a003814 <_vfprintf_r+0x4b4>
1a00380a:	9b06      	ldr	r3, [sp, #24]
1a00380c:	9903      	ldr	r1, [sp, #12]
1a00380e:	1a5d      	subs	r5, r3, r1
1a003810:	2d00      	cmp	r5, #0
1a003812:	dc66      	bgt.n	1a0038e2 <_vfprintf_r+0x582>
1a003814:	b172      	cbz	r2, 1a003834 <_vfprintf_r+0x4d4>
1a003816:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003818:	3201      	adds	r2, #1
1a00381a:	3401      	adds	r4, #1
1a00381c:	f10d 0083 	add.w	r0, sp, #131	; 0x83
1a003820:	2101      	movs	r1, #1
1a003822:	2a07      	cmp	r2, #7
1a003824:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003828:	e9cb 0100 	strd	r0, r1, [fp]
1a00382c:	f300 83b1 	bgt.w	1a003f92 <_vfprintf_r+0xc32>
1a003830:	f10b 0b08 	add.w	fp, fp, #8
1a003834:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a003836:	b16b      	cbz	r3, 1a003854 <_vfprintf_r+0x4f4>
1a003838:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a00383a:	3301      	adds	r3, #1
1a00383c:	3402      	adds	r4, #2
1a00383e:	a921      	add	r1, sp, #132	; 0x84
1a003840:	2202      	movs	r2, #2
1a003842:	2b07      	cmp	r3, #7
1a003844:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a003848:	e9cb 1200 	strd	r1, r2, [fp]
1a00384c:	f300 83ad 	bgt.w	1a003faa <_vfprintf_r+0xc4a>
1a003850:	f10b 0b08 	add.w	fp, fp, #8
1a003854:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a003856:	2b80      	cmp	r3, #128	; 0x80
1a003858:	f000 8295 	beq.w	1a003d86 <_vfprintf_r+0xa26>
1a00385c:	eba9 0506 	sub.w	r5, r9, r6
1a003860:	2d00      	cmp	r5, #0
1a003862:	f300 82d3 	bgt.w	1a003e0c <_vfprintf_r+0xaac>
1a003866:	9b02      	ldr	r3, [sp, #8]
1a003868:	05db      	lsls	r3, r3, #23
1a00386a:	f100 822e 	bmi.w	1a003cca <_vfprintf_r+0x96a>
1a00386e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a003870:	f8cb 7000 	str.w	r7, [fp]
1a003874:	3301      	adds	r3, #1
1a003876:	4434      	add	r4, r6
1a003878:	2b07      	cmp	r3, #7
1a00387a:	942a      	str	r4, [sp, #168]	; 0xa8
1a00387c:	f8cb 6004 	str.w	r6, [fp, #4]
1a003880:	9329      	str	r3, [sp, #164]	; 0xa4
1a003882:	f300 8325 	bgt.w	1a003ed0 <_vfprintf_r+0xb70>
1a003886:	f10b 0b08 	add.w	fp, fp, #8
1a00388a:	9b02      	ldr	r3, [sp, #8]
1a00388c:	075d      	lsls	r5, r3, #29
1a00388e:	d505      	bpl.n	1a00389c <_vfprintf_r+0x53c>
1a003890:	9b06      	ldr	r3, [sp, #24]
1a003892:	9a03      	ldr	r2, [sp, #12]
1a003894:	1a9d      	subs	r5, r3, r2
1a003896:	2d00      	cmp	r5, #0
1a003898:	f300 83ae 	bgt.w	1a003ff8 <_vfprintf_r+0xc98>
1a00389c:	9b04      	ldr	r3, [sp, #16]
1a00389e:	9a06      	ldr	r2, [sp, #24]
1a0038a0:	9903      	ldr	r1, [sp, #12]
1a0038a2:	428a      	cmp	r2, r1
1a0038a4:	bfac      	ite	ge
1a0038a6:	189b      	addge	r3, r3, r2
1a0038a8:	185b      	addlt	r3, r3, r1
1a0038aa:	9304      	str	r3, [sp, #16]
1a0038ac:	2c00      	cmp	r4, #0
1a0038ae:	f040 82e7 	bne.w	1a003e80 <_vfprintf_r+0xb20>
1a0038b2:	2300      	movs	r3, #0
1a0038b4:	9329      	str	r3, [sp, #164]	; 0xa4
1a0038b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0038b8:	b11b      	cbz	r3, 1a0038c2 <_vfprintf_r+0x562>
1a0038ba:	9909      	ldr	r1, [sp, #36]	; 0x24
1a0038bc:	9805      	ldr	r0, [sp, #20]
1a0038be:	f7fe ff85 	bl	1a0027cc <_free_r>
1a0038c2:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0038c6:	4657      	mov	r7, sl
1a0038c8:	783b      	ldrb	r3, [r7, #0]
1a0038ca:	2b00      	cmp	r3, #0
1a0038cc:	f47f ad99 	bne.w	1a003402 <_vfprintf_r+0xa2>
1a0038d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
1a0038d2:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a0038d6:	2b00      	cmp	r3, #0
1a0038d8:	f040 86f5 	bne.w	1a0046c6 <_vfprintf_r+0x1366>
1a0038dc:	2300      	movs	r3, #0
1a0038de:	9329      	str	r3, [sp, #164]	; 0xa4
1a0038e0:	e375      	b.n	1a003fce <_vfprintf_r+0xc6e>
1a0038e2:	2d10      	cmp	r5, #16
1a0038e4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a0038e6:	dd29      	ble.n	1a00393c <_vfprintf_r+0x5dc>
1a0038e8:	4659      	mov	r1, fp
1a0038ea:	4620      	mov	r0, r4
1a0038ec:	961e      	str	r6, [sp, #120]	; 0x78
1a0038ee:	2310      	movs	r3, #16
1a0038f0:	9c05      	ldr	r4, [sp, #20]
1a0038f2:	9e07      	ldr	r6, [sp, #28]
1a0038f4:	46bb      	mov	fp, r7
1a0038f6:	e004      	b.n	1a003902 <_vfprintf_r+0x5a2>
1a0038f8:	3d10      	subs	r5, #16
1a0038fa:	2d10      	cmp	r5, #16
1a0038fc:	f101 0108 	add.w	r1, r1, #8
1a003900:	dd18      	ble.n	1a003934 <_vfprintf_r+0x5d4>
1a003902:	3201      	adds	r2, #1
1a003904:	4fbc      	ldr	r7, [pc, #752]	; (1a003bf8 <_vfprintf_r+0x898>)
1a003906:	3010      	adds	r0, #16
1a003908:	2a07      	cmp	r2, #7
1a00390a:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
1a00390e:	e9c1 7300 	strd	r7, r3, [r1]
1a003912:	ddf1      	ble.n	1a0038f8 <_vfprintf_r+0x598>
1a003914:	aa28      	add	r2, sp, #160	; 0xa0
1a003916:	4631      	mov	r1, r6
1a003918:	4620      	mov	r0, r4
1a00391a:	f003 fb5d 	bl	1a006fd8 <__sprint_r>
1a00391e:	2800      	cmp	r0, #0
1a003920:	f040 834f 	bne.w	1a003fc2 <_vfprintf_r+0xc62>
1a003924:	3d10      	subs	r5, #16
1a003926:	2d10      	cmp	r5, #16
1a003928:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
1a00392c:	a92b      	add	r1, sp, #172	; 0xac
1a00392e:	f04f 0310 	mov.w	r3, #16
1a003932:	dce6      	bgt.n	1a003902 <_vfprintf_r+0x5a2>
1a003934:	9e1e      	ldr	r6, [sp, #120]	; 0x78
1a003936:	465f      	mov	r7, fp
1a003938:	4604      	mov	r4, r0
1a00393a:	468b      	mov	fp, r1
1a00393c:	3201      	adds	r2, #1
1a00393e:	4bae      	ldr	r3, [pc, #696]	; (1a003bf8 <_vfprintf_r+0x898>)
1a003940:	442c      	add	r4, r5
1a003942:	2a07      	cmp	r2, #7
1a003944:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003948:	e9cb 3500 	strd	r3, r5, [fp]
1a00394c:	f300 862a 	bgt.w	1a0045a4 <_vfprintf_r+0x1244>
1a003950:	f10b 0b08 	add.w	fp, fp, #8
1a003954:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a003958:	e75c      	b.n	1a003814 <_vfprintf_r+0x4b4>
1a00395a:	f89a 8000 	ldrb.w	r8, [sl]
1a00395e:	9b02      	ldr	r3, [sp, #8]
1a003960:	f1b8 0f68 	cmp.w	r8, #104	; 0x68
1a003964:	f000 85e3 	beq.w	1a00452e <_vfprintf_r+0x11ce>
1a003968:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a00396c:	9302      	str	r3, [sp, #8]
1a00396e:	e57b      	b.n	1a003468 <_vfprintf_r+0x108>
1a003970:	9b02      	ldr	r3, [sp, #8]
1a003972:	f89a 8000 	ldrb.w	r8, [sl]
1a003976:	f043 0301 	orr.w	r3, r3, #1
1a00397a:	9302      	str	r3, [sp, #8]
1a00397c:	e574      	b.n	1a003468 <_vfprintf_r+0x108>
1a00397e:	f89d 3083 	ldrb.w	r3, [sp, #131]	; 0x83
1a003982:	f89a 8000 	ldrb.w	r8, [sl]
1a003986:	2b00      	cmp	r3, #0
1a003988:	f47f ad6e 	bne.w	1a003468 <_vfprintf_r+0x108>
1a00398c:	f88d 1083 	strb.w	r1, [sp, #131]	; 0x83
1a003990:	e56a      	b.n	1a003468 <_vfprintf_r+0x108>
1a003992:	9c08      	ldr	r4, [sp, #32]
1a003994:	f647 0230 	movw	r2, #30768	; 0x7830
1a003998:	f854 3b04 	ldr.w	r3, [r4], #4
1a00399c:	f8ad 2084 	strh.w	r2, [sp, #132]	; 0x84
1a0039a0:	9a02      	ldr	r2, [sp, #8]
1a0039a2:	9408      	str	r4, [sp, #32]
1a0039a4:	461c      	mov	r4, r3
1a0039a6:	4b95      	ldr	r3, [pc, #596]	; (1a003bfc <_vfprintf_r+0x89c>)
1a0039a8:	9314      	str	r3, [sp, #80]	; 0x50
1a0039aa:	f042 0602 	orr.w	r6, r2, #2
1a0039ae:	2500      	movs	r5, #0
1a0039b0:	2302      	movs	r3, #2
1a0039b2:	f04f 0878 	mov.w	r8, #120	; 0x78
1a0039b6:	2200      	movs	r2, #0
1a0039b8:	f1b9 3fff 	cmp.w	r9, #4294967295
1a0039bc:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
1a0039c0:	f43f aedb 	beq.w	1a00377a <_vfprintf_r+0x41a>
1a0039c4:	f026 0280 	bic.w	r2, r6, #128	; 0x80
1a0039c8:	9202      	str	r2, [sp, #8]
1a0039ca:	ea54 0205 	orrs.w	r2, r4, r5
1a0039ce:	f040 82dd 	bne.w	1a003f8c <_vfprintf_r+0xc2c>
1a0039d2:	f1b9 0f00 	cmp.w	r9, #0
1a0039d6:	f040 8348 	bne.w	1a00406a <_vfprintf_r+0xd0a>
1a0039da:	2b00      	cmp	r3, #0
1a0039dc:	f47f ae5d 	bne.w	1a00369a <_vfprintf_r+0x33a>
1a0039e0:	f016 0601 	ands.w	r6, r6, #1
1a0039e4:	f000 846a 	beq.w	1a0042bc <_vfprintf_r+0xf5c>
1a0039e8:	2330      	movs	r3, #48	; 0x30
1a0039ea:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
1a0039ee:	f20d 174f 	addw	r7, sp, #335	; 0x14f
1a0039f2:	e117      	b.n	1a003c24 <_vfprintf_r+0x8c4>
1a0039f4:	9e02      	ldr	r6, [sp, #8]
1a0039f6:	06b0      	lsls	r0, r6, #26
1a0039f8:	f100 80f2 	bmi.w	1a003be0 <_vfprintf_r+0x880>
1a0039fc:	9b02      	ldr	r3, [sp, #8]
1a0039fe:	9a08      	ldr	r2, [sp, #32]
1a003a00:	06d9      	lsls	r1, r3, #27
1a003a02:	f852 4b04 	ldr.w	r4, [r2], #4
1a003a06:	f101 8243 	bmi.w	1a004e90 <_vfprintf_r+0x1b30>
1a003a0a:	9e02      	ldr	r6, [sp, #8]
1a003a0c:	4633      	mov	r3, r6
1a003a0e:	065b      	lsls	r3, r3, #25
1a003a10:	f140 8635 	bpl.w	1a00467e <_vfprintf_r+0x131e>
1a003a14:	9208      	str	r2, [sp, #32]
1a003a16:	b2a4      	uxth	r4, r4
1a003a18:	2500      	movs	r5, #0
1a003a1a:	e0e8      	b.n	1a003bee <_vfprintf_r+0x88e>
1a003a1c:	9902      	ldr	r1, [sp, #8]
1a003a1e:	9a08      	ldr	r2, [sp, #32]
1a003a20:	0689      	lsls	r1, r1, #26
1a003a22:	f102 0304 	add.w	r3, r2, #4
1a003a26:	f100 8452 	bmi.w	1a0042ce <_vfprintf_r+0xf6e>
1a003a2a:	9a02      	ldr	r2, [sp, #8]
1a003a2c:	06d7      	lsls	r7, r2, #27
1a003a2e:	f100 85e1 	bmi.w	1a0045f4 <_vfprintf_r+0x1294>
1a003a32:	9a02      	ldr	r2, [sp, #8]
1a003a34:	0656      	lsls	r6, r2, #25
1a003a36:	f100 8664 	bmi.w	1a004702 <_vfprintf_r+0x13a2>
1a003a3a:	9a02      	ldr	r2, [sp, #8]
1a003a3c:	0595      	lsls	r5, r2, #22
1a003a3e:	f140 85d9 	bpl.w	1a0045f4 <_vfprintf_r+0x1294>
1a003a42:	9a08      	ldr	r2, [sp, #32]
1a003a44:	9308      	str	r3, [sp, #32]
1a003a46:	6812      	ldr	r2, [r2, #0]
1a003a48:	9b04      	ldr	r3, [sp, #16]
1a003a4a:	7013      	strb	r3, [r2, #0]
1a003a4c:	4657      	mov	r7, sl
1a003a4e:	e73b      	b.n	1a0038c8 <_vfprintf_r+0x568>
1a003a50:	f89a 8000 	ldrb.w	r8, [sl]
1a003a54:	9b02      	ldr	r3, [sp, #8]
1a003a56:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
1a003a5a:	f000 855f 	beq.w	1a00451c <_vfprintf_r+0x11bc>
1a003a5e:	f043 0310 	orr.w	r3, r3, #16
1a003a62:	9302      	str	r3, [sp, #8]
1a003a64:	e500      	b.n	1a003468 <_vfprintf_r+0x108>
1a003a66:	9b08      	ldr	r3, [sp, #32]
1a003a68:	f89a 8000 	ldrb.w	r8, [sl]
1a003a6c:	f853 2b04 	ldr.w	r2, [r3], #4
1a003a70:	9206      	str	r2, [sp, #24]
1a003a72:	2a00      	cmp	r2, #0
1a003a74:	f2c0 8513 	blt.w	1a00449e <_vfprintf_r+0x113e>
1a003a78:	9308      	str	r3, [sp, #32]
1a003a7a:	e4f5      	b.n	1a003468 <_vfprintf_r+0x108>
1a003a7c:	9d05      	ldr	r5, [sp, #20]
1a003a7e:	4628      	mov	r0, r5
1a003a80:	f002 fc04 	bl	1a00628c <_localeconv_r>
1a003a84:	6843      	ldr	r3, [r0, #4]
1a003a86:	9317      	str	r3, [sp, #92]	; 0x5c
1a003a88:	4618      	mov	r0, r3
1a003a8a:	f7ff fbf9 	bl	1a003280 <strlen>
1a003a8e:	9019      	str	r0, [sp, #100]	; 0x64
1a003a90:	4604      	mov	r4, r0
1a003a92:	4628      	mov	r0, r5
1a003a94:	f002 fbfa 	bl	1a00628c <_localeconv_r>
1a003a98:	6883      	ldr	r3, [r0, #8]
1a003a9a:	9318      	str	r3, [sp, #96]	; 0x60
1a003a9c:	2120      	movs	r1, #32
1a003a9e:	2c00      	cmp	r4, #0
1a003aa0:	f43f ad4a 	beq.w	1a003538 <_vfprintf_r+0x1d8>
1a003aa4:	9b18      	ldr	r3, [sp, #96]	; 0x60
1a003aa6:	f89a 8000 	ldrb.w	r8, [sl]
1a003aaa:	2b00      	cmp	r3, #0
1a003aac:	f43f acdc 	beq.w	1a003468 <_vfprintf_r+0x108>
1a003ab0:	781b      	ldrb	r3, [r3, #0]
1a003ab2:	2b00      	cmp	r3, #0
1a003ab4:	f43f acd8 	beq.w	1a003468 <_vfprintf_r+0x108>
1a003ab8:	9b02      	ldr	r3, [sp, #8]
1a003aba:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
1a003abe:	9302      	str	r3, [sp, #8]
1a003ac0:	e4d2      	b.n	1a003468 <_vfprintf_r+0x108>
1a003ac2:	9b02      	ldr	r3, [sp, #8]
1a003ac4:	f89a 8000 	ldrb.w	r8, [sl]
1a003ac8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a003acc:	9302      	str	r3, [sp, #8]
1a003ace:	e4cb      	b.n	1a003468 <_vfprintf_r+0x108>
1a003ad0:	4652      	mov	r2, sl
1a003ad2:	f812 8b01 	ldrb.w	r8, [r2], #1
1a003ad6:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
1a003ada:	f001 81be 	beq.w	1a004e5a <_vfprintf_r+0x1afa>
1a003ade:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a003ae2:	2b09      	cmp	r3, #9
1a003ae4:	4692      	mov	sl, r2
1a003ae6:	f04f 0900 	mov.w	r9, #0
1a003aea:	f63f acbf 	bhi.w	1a00346c <_vfprintf_r+0x10c>
1a003aee:	f81a 8b01 	ldrb.w	r8, [sl], #1
1a003af2:	eb09 0989 	add.w	r9, r9, r9, lsl #2
1a003af6:	eb03 0949 	add.w	r9, r3, r9, lsl #1
1a003afa:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a003afe:	2b09      	cmp	r3, #9
1a003b00:	d9f5      	bls.n	1a003aee <_vfprintf_r+0x78e>
1a003b02:	e4b3      	b.n	1a00346c <_vfprintf_r+0x10c>
1a003b04:	9c08      	ldr	r4, [sp, #32]
1a003b06:	3407      	adds	r4, #7
1a003b08:	f024 0307 	bic.w	r3, r4, #7
1a003b0c:	ecb3 7b02 	vldmia	r3!, {d7}
1a003b10:	ec55 4b17 	vmov	r4, r5, d7
1a003b14:	9308      	str	r3, [sp, #32]
1a003b16:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
1a003b1a:	931b      	str	r3, [sp, #108]	; 0x6c
1a003b1c:	ed8d 7a1a 	vstr	s14, [sp, #104]	; 0x68
1a003b20:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
1a003b24:	f04f 32ff 	mov.w	r2, #4294967295
1a003b28:	4b35      	ldr	r3, [pc, #212]	; (1a003c00 <_vfprintf_r+0x8a0>)
1a003b2a:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
1a003b2e:	f003 fbab 	bl	1a007288 <__aeabi_dcmpun>
1a003b32:	2800      	cmp	r0, #0
1a003b34:	f040 83dc 	bne.w	1a0042f0 <_vfprintf_r+0xf90>
1a003b38:	f04f 32ff 	mov.w	r2, #4294967295
1a003b3c:	4b30      	ldr	r3, [pc, #192]	; (1a003c00 <_vfprintf_r+0x8a0>)
1a003b3e:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
1a003b42:	f7fe fab3 	bl	1a0020ac <__aeabi_dcmple>
1a003b46:	2800      	cmp	r0, #0
1a003b48:	f040 83d2 	bne.w	1a0042f0 <_vfprintf_r+0xf90>
1a003b4c:	2200      	movs	r2, #0
1a003b4e:	2300      	movs	r3, #0
1a003b50:	4620      	mov	r0, r4
1a003b52:	4629      	mov	r1, r5
1a003b54:	f7fe faa0 	bl	1a002098 <__aeabi_dcmplt>
1a003b58:	2800      	cmp	r0, #0
1a003b5a:	f040 8780 	bne.w	1a004a5e <_vfprintf_r+0x16fe>
1a003b5e:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a003b62:	4f28      	ldr	r7, [pc, #160]	; (1a003c04 <_vfprintf_r+0x8a4>)
1a003b64:	4b28      	ldr	r3, [pc, #160]	; (1a003c08 <_vfprintf_r+0x8a8>)
1a003b66:	9802      	ldr	r0, [sp, #8]
1a003b68:	2100      	movs	r1, #0
1a003b6a:	2603      	movs	r6, #3
1a003b6c:	f020 0080 	bic.w	r0, r0, #128	; 0x80
1a003b70:	9603      	str	r6, [sp, #12]
1a003b72:	9109      	str	r1, [sp, #36]	; 0x24
1a003b74:	9002      	str	r0, [sp, #8]
1a003b76:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
1a003b7a:	bfc8      	it	gt
1a003b7c:	461f      	movgt	r7, r3
1a003b7e:	4689      	mov	r9, r1
1a003b80:	910c      	str	r1, [sp, #48]	; 0x30
1a003b82:	e9cd 110e 	strd	r1, r1, [sp, #56]	; 0x38
1a003b86:	e5c0      	b.n	1a00370a <_vfprintf_r+0x3aa>
1a003b88:	9e02      	ldr	r6, [sp, #8]
1a003b8a:	06b4      	lsls	r4, r6, #26
1a003b8c:	d41f      	bmi.n	1a003bce <_vfprintf_r+0x86e>
1a003b8e:	9b02      	ldr	r3, [sp, #8]
1a003b90:	9a08      	ldr	r2, [sp, #32]
1a003b92:	06d8      	lsls	r0, r3, #27
1a003b94:	f852 4b04 	ldr.w	r4, [r2], #4
1a003b98:	f101 8174 	bmi.w	1a004e84 <_vfprintf_r+0x1b24>
1a003b9c:	9e02      	ldr	r6, [sp, #8]
1a003b9e:	0671      	lsls	r1, r6, #25
1a003ba0:	f140 8577 	bpl.w	1a004692 <_vfprintf_r+0x1332>
1a003ba4:	9208      	str	r2, [sp, #32]
1a003ba6:	b2a4      	uxth	r4, r4
1a003ba8:	2500      	movs	r5, #0
1a003baa:	2301      	movs	r3, #1
1a003bac:	e703      	b.n	1a0039b6 <_vfprintf_r+0x656>
1a003bae:	9805      	ldr	r0, [sp, #20]
1a003bb0:	f7fe fd86 	bl	1a0026c0 <__sinit>
1a003bb4:	f7ff bbea 	b.w	1a00338c <_vfprintf_r+0x2c>
1a003bb8:	f1b8 0f00 	cmp.w	r8, #0
1a003bbc:	f43f ae88 	beq.w	1a0038d0 <_vfprintf_r+0x570>
1a003bc0:	2300      	movs	r3, #0
1a003bc2:	2601      	movs	r6, #1
1a003bc4:	461a      	mov	r2, r3
1a003bc6:	9603      	str	r6, [sp, #12]
1a003bc8:	f88d 80ec 	strb.w	r8, [sp, #236]	; 0xec
1a003bcc:	e607      	b.n	1a0037de <_vfprintf_r+0x47e>
1a003bce:	9c08      	ldr	r4, [sp, #32]
1a003bd0:	3407      	adds	r4, #7
1a003bd2:	f024 0307 	bic.w	r3, r4, #7
1a003bd6:	e8f3 4502 	ldrd	r4, r5, [r3], #8
1a003bda:	9308      	str	r3, [sp, #32]
1a003bdc:	2301      	movs	r3, #1
1a003bde:	e6ea      	b.n	1a0039b6 <_vfprintf_r+0x656>
1a003be0:	9c08      	ldr	r4, [sp, #32]
1a003be2:	3407      	adds	r4, #7
1a003be4:	f024 0307 	bic.w	r3, r4, #7
1a003be8:	e8f3 4502 	ldrd	r4, r5, [r3], #8
1a003bec:	9308      	str	r3, [sp, #32]
1a003bee:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
1a003bf2:	2300      	movs	r3, #0
1a003bf4:	e6df      	b.n	1a0039b6 <_vfprintf_r+0x656>
1a003bf6:	bf00      	nop
1a003bf8:	1a0076c0 	.word	0x1a0076c0
1a003bfc:	1a0076a0 	.word	0x1a0076a0
1a003c00:	7fefffff 	.word	0x7fefffff
1a003c04:	1a00767c 	.word	0x1a00767c
1a003c08:	1a007680 	.word	0x1a007680
1a003c0c:	9e02      	ldr	r6, [sp, #8]
1a003c0e:	2d00      	cmp	r5, #0
1a003c10:	bf08      	it	eq
1a003c12:	2c0a      	cmpeq	r4, #10
1a003c14:	d213      	bcs.n	1a003c3e <_vfprintf_r+0x8de>
1a003c16:	3430      	adds	r4, #48	; 0x30
1a003c18:	9602      	str	r6, [sp, #8]
1a003c1a:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
1a003c1e:	2601      	movs	r6, #1
1a003c20:	f20d 174f 	addw	r7, sp, #335	; 0x14f
1a003c24:	2300      	movs	r3, #0
1a003c26:	454e      	cmp	r6, r9
1a003c28:	9309      	str	r3, [sp, #36]	; 0x24
1a003c2a:	930c      	str	r3, [sp, #48]	; 0x30
1a003c2c:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
1a003c30:	4633      	mov	r3, r6
1a003c32:	bfb8      	it	lt
1a003c34:	464b      	movlt	r3, r9
1a003c36:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a003c3a:	9303      	str	r3, [sp, #12]
1a003c3c:	e565      	b.n	1a00370a <_vfprintf_r+0x3aa>
1a003c3e:	f406 6380 	and.w	r3, r6, #1024	; 0x400
1a003c42:	2200      	movs	r2, #0
1a003c44:	e9cd a802 	strd	sl, r8, [sp, #8]
1a003c48:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
1a003c4c:	af54      	add	r7, sp, #336	; 0x150
1a003c4e:	46cb      	mov	fp, r9
1a003c50:	4692      	mov	sl, r2
1a003c52:	46b1      	mov	r9, r6
1a003c54:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
1a003c58:	461e      	mov	r6, r3
1a003c5a:	e007      	b.n	1a003c6c <_vfprintf_r+0x90c>
1a003c5c:	f7fe fa44 	bl	1a0020e8 <__aeabi_uldivmod>
1a003c60:	2d00      	cmp	r5, #0
1a003c62:	bf08      	it	eq
1a003c64:	2c0a      	cmpeq	r4, #10
1a003c66:	d320      	bcc.n	1a003caa <_vfprintf_r+0x94a>
1a003c68:	4604      	mov	r4, r0
1a003c6a:	460d      	mov	r5, r1
1a003c6c:	220a      	movs	r2, #10
1a003c6e:	2300      	movs	r3, #0
1a003c70:	4620      	mov	r0, r4
1a003c72:	4629      	mov	r1, r5
1a003c74:	f7fe fa38 	bl	1a0020e8 <__aeabi_uldivmod>
1a003c78:	f102 0c30 	add.w	ip, r2, #48	; 0x30
1a003c7c:	f807 cc01 	strb.w	ip, [r7, #-1]
1a003c80:	4620      	mov	r0, r4
1a003c82:	4629      	mov	r1, r5
1a003c84:	220a      	movs	r2, #10
1a003c86:	2300      	movs	r3, #0
1a003c88:	f10a 0a01 	add.w	sl, sl, #1
1a003c8c:	3f01      	subs	r7, #1
1a003c8e:	2e00      	cmp	r6, #0
1a003c90:	d0e4      	beq.n	1a003c5c <_vfprintf_r+0x8fc>
1a003c92:	f898 c000 	ldrb.w	ip, [r8]
1a003c96:	45e2      	cmp	sl, ip
1a003c98:	d1e0      	bne.n	1a003c5c <_vfprintf_r+0x8fc>
1a003c9a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
1a003c9e:	d0dd      	beq.n	1a003c5c <_vfprintf_r+0x8fc>
1a003ca0:	429d      	cmp	r5, r3
1a003ca2:	bf08      	it	eq
1a003ca4:	4294      	cmpeq	r4, r2
1a003ca6:	f080 871e 	bcs.w	1a004ae6 <_vfprintf_r+0x1786>
1a003caa:	f8cd a048 	str.w	sl, [sp, #72]	; 0x48
1a003cae:	464e      	mov	r6, r9
1a003cb0:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
1a003cb4:	46d9      	mov	r9, fp
1a003cb6:	f8dd a008 	ldr.w	sl, [sp, #8]
1a003cba:	f8dd 800c 	ldr.w	r8, [sp, #12]
1a003cbe:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
1a003cc2:	9602      	str	r6, [sp, #8]
1a003cc4:	ab54      	add	r3, sp, #336	; 0x150
1a003cc6:	1bde      	subs	r6, r3, r7
1a003cc8:	e7ac      	b.n	1a003c24 <_vfprintf_r+0x8c4>
1a003cca:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
1a003cce:	f340 810a 	ble.w	1a003ee6 <_vfprintf_r+0xb86>
1a003cd2:	2200      	movs	r2, #0
1a003cd4:	2300      	movs	r3, #0
1a003cd6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a003cda:	f7fe f9d3 	bl	1a002084 <__aeabi_dcmpeq>
1a003cde:	2800      	cmp	r0, #0
1a003ce0:	f000 81de 	beq.w	1a0040a0 <_vfprintf_r+0xd40>
1a003ce4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a003ce6:	4ac2      	ldr	r2, [pc, #776]	; (1a003ff0 <_vfprintf_r+0xc90>)
1a003ce8:	f8cb 2000 	str.w	r2, [fp]
1a003cec:	3301      	adds	r3, #1
1a003cee:	3401      	adds	r4, #1
1a003cf0:	2201      	movs	r2, #1
1a003cf2:	2b07      	cmp	r3, #7
1a003cf4:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a003cf8:	f8cb 2004 	str.w	r2, [fp, #4]
1a003cfc:	f300 8463 	bgt.w	1a0045c6 <_vfprintf_r+0x1266>
1a003d00:	f10b 0b08 	add.w	fp, fp, #8
1a003d04:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a003d06:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a003d08:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003d0a:	4293      	cmp	r3, r2
1a003d0c:	f280 82a5 	bge.w	1a00425a <_vfprintf_r+0xefa>
1a003d10:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a003d12:	9a15      	ldr	r2, [sp, #84]	; 0x54
1a003d14:	f8cb 2000 	str.w	r2, [fp]
1a003d18:	9a13      	ldr	r2, [sp, #76]	; 0x4c
1a003d1a:	f8cb 2004 	str.w	r2, [fp, #4]
1a003d1e:	3301      	adds	r3, #1
1a003d20:	4414      	add	r4, r2
1a003d22:	2b07      	cmp	r3, #7
1a003d24:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a003d28:	f300 83ec 	bgt.w	1a004504 <_vfprintf_r+0x11a4>
1a003d2c:	f10b 0b08 	add.w	fp, fp, #8
1a003d30:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a003d32:	1e5d      	subs	r5, r3, #1
1a003d34:	2d00      	cmp	r5, #0
1a003d36:	f77f ada8 	ble.w	1a00388a <_vfprintf_r+0x52a>
1a003d3a:	2d10      	cmp	r5, #16
1a003d3c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003d3e:	4bad      	ldr	r3, [pc, #692]	; (1a003ff4 <_vfprintf_r+0xc94>)
1a003d40:	f340 844e 	ble.w	1a0045e0 <_vfprintf_r+0x1280>
1a003d44:	2610      	movs	r6, #16
1a003d46:	9f05      	ldr	r7, [sp, #20]
1a003d48:	f8dd 801c 	ldr.w	r8, [sp, #28]
1a003d4c:	4699      	mov	r9, r3
1a003d4e:	e005      	b.n	1a003d5c <_vfprintf_r+0x9fc>
1a003d50:	f10b 0b08 	add.w	fp, fp, #8
1a003d54:	3d10      	subs	r5, #16
1a003d56:	2d10      	cmp	r5, #16
1a003d58:	f340 8441 	ble.w	1a0045de <_vfprintf_r+0x127e>
1a003d5c:	3201      	adds	r2, #1
1a003d5e:	3410      	adds	r4, #16
1a003d60:	2a07      	cmp	r2, #7
1a003d62:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003d66:	e9cb 9600 	strd	r9, r6, [fp]
1a003d6a:	ddf1      	ble.n	1a003d50 <_vfprintf_r+0x9f0>
1a003d6c:	aa28      	add	r2, sp, #160	; 0xa0
1a003d6e:	4641      	mov	r1, r8
1a003d70:	4638      	mov	r0, r7
1a003d72:	f003 f931 	bl	1a006fd8 <__sprint_r>
1a003d76:	2800      	cmp	r0, #0
1a003d78:	f040 8423 	bne.w	1a0045c2 <_vfprintf_r+0x1262>
1a003d7c:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a003d80:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003d84:	e7e6      	b.n	1a003d54 <_vfprintf_r+0x9f4>
1a003d86:	9b06      	ldr	r3, [sp, #24]
1a003d88:	9a03      	ldr	r2, [sp, #12]
1a003d8a:	1a9d      	subs	r5, r3, r2
1a003d8c:	2d00      	cmp	r5, #0
1a003d8e:	f77f ad65 	ble.w	1a00385c <_vfprintf_r+0x4fc>
1a003d92:	2d10      	cmp	r5, #16
1a003d94:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003d96:	4b97      	ldr	r3, [pc, #604]	; (1a003ff4 <_vfprintf_r+0xc94>)
1a003d98:	dd28      	ble.n	1a003dec <_vfprintf_r+0xa8c>
1a003d9a:	960a      	str	r6, [sp, #40]	; 0x28
1a003d9c:	4659      	mov	r1, fp
1a003d9e:	4620      	mov	r0, r4
1a003da0:	46bb      	mov	fp, r7
1a003da2:	9c05      	ldr	r4, [sp, #20]
1a003da4:	9e07      	ldr	r6, [sp, #28]
1a003da6:	461f      	mov	r7, r3
1a003da8:	e004      	b.n	1a003db4 <_vfprintf_r+0xa54>
1a003daa:	3d10      	subs	r5, #16
1a003dac:	2d10      	cmp	r5, #16
1a003dae:	f101 0108 	add.w	r1, r1, #8
1a003db2:	dd16      	ble.n	1a003de2 <_vfprintf_r+0xa82>
1a003db4:	3201      	adds	r2, #1
1a003db6:	3010      	adds	r0, #16
1a003db8:	2310      	movs	r3, #16
1a003dba:	2a07      	cmp	r2, #7
1a003dbc:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
1a003dc0:	600f      	str	r7, [r1, #0]
1a003dc2:	604b      	str	r3, [r1, #4]
1a003dc4:	ddf1      	ble.n	1a003daa <_vfprintf_r+0xa4a>
1a003dc6:	aa28      	add	r2, sp, #160	; 0xa0
1a003dc8:	4631      	mov	r1, r6
1a003dca:	4620      	mov	r0, r4
1a003dcc:	f003 f904 	bl	1a006fd8 <__sprint_r>
1a003dd0:	2800      	cmp	r0, #0
1a003dd2:	f040 80f6 	bne.w	1a003fc2 <_vfprintf_r+0xc62>
1a003dd6:	3d10      	subs	r5, #16
1a003dd8:	2d10      	cmp	r5, #16
1a003dda:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
1a003dde:	a92b      	add	r1, sp, #172	; 0xac
1a003de0:	dce8      	bgt.n	1a003db4 <_vfprintf_r+0xa54>
1a003de2:	9e0a      	ldr	r6, [sp, #40]	; 0x28
1a003de4:	463b      	mov	r3, r7
1a003de6:	4604      	mov	r4, r0
1a003de8:	465f      	mov	r7, fp
1a003dea:	468b      	mov	fp, r1
1a003dec:	3201      	adds	r2, #1
1a003dee:	442c      	add	r4, r5
1a003df0:	2a07      	cmp	r2, #7
1a003df2:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003df6:	e9cb 3500 	strd	r3, r5, [fp]
1a003dfa:	f300 8355 	bgt.w	1a0044a8 <_vfprintf_r+0x1148>
1a003dfe:	eba9 0506 	sub.w	r5, r9, r6
1a003e02:	2d00      	cmp	r5, #0
1a003e04:	f10b 0b08 	add.w	fp, fp, #8
1a003e08:	f77f ad2d 	ble.w	1a003866 <_vfprintf_r+0x506>
1a003e0c:	2d10      	cmp	r5, #16
1a003e0e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003e10:	4b78      	ldr	r3, [pc, #480]	; (1a003ff4 <_vfprintf_r+0xc94>)
1a003e12:	dd29      	ble.n	1a003e68 <_vfprintf_r+0xb08>
1a003e14:	960a      	str	r6, [sp, #40]	; 0x28
1a003e16:	4659      	mov	r1, fp
1a003e18:	4620      	mov	r0, r4
1a003e1a:	46bb      	mov	fp, r7
1a003e1c:	f04f 0910 	mov.w	r9, #16
1a003e20:	9c05      	ldr	r4, [sp, #20]
1a003e22:	9e07      	ldr	r6, [sp, #28]
1a003e24:	461f      	mov	r7, r3
1a003e26:	e004      	b.n	1a003e32 <_vfprintf_r+0xad2>
1a003e28:	3d10      	subs	r5, #16
1a003e2a:	2d10      	cmp	r5, #16
1a003e2c:	f101 0108 	add.w	r1, r1, #8
1a003e30:	dd15      	ble.n	1a003e5e <_vfprintf_r+0xafe>
1a003e32:	3201      	adds	r2, #1
1a003e34:	3010      	adds	r0, #16
1a003e36:	2a07      	cmp	r2, #7
1a003e38:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
1a003e3c:	e9c1 7900 	strd	r7, r9, [r1]
1a003e40:	ddf2      	ble.n	1a003e28 <_vfprintf_r+0xac8>
1a003e42:	aa28      	add	r2, sp, #160	; 0xa0
1a003e44:	4631      	mov	r1, r6
1a003e46:	4620      	mov	r0, r4
1a003e48:	f003 f8c6 	bl	1a006fd8 <__sprint_r>
1a003e4c:	2800      	cmp	r0, #0
1a003e4e:	f040 80b8 	bne.w	1a003fc2 <_vfprintf_r+0xc62>
1a003e52:	3d10      	subs	r5, #16
1a003e54:	2d10      	cmp	r5, #16
1a003e56:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
1a003e5a:	a92b      	add	r1, sp, #172	; 0xac
1a003e5c:	dce9      	bgt.n	1a003e32 <_vfprintf_r+0xad2>
1a003e5e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
1a003e60:	463b      	mov	r3, r7
1a003e62:	4604      	mov	r4, r0
1a003e64:	465f      	mov	r7, fp
1a003e66:	468b      	mov	fp, r1
1a003e68:	3201      	adds	r2, #1
1a003e6a:	442c      	add	r4, r5
1a003e6c:	2a07      	cmp	r2, #7
1a003e6e:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003e72:	e9cb 3500 	strd	r3, r5, [fp]
1a003e76:	f300 81da 	bgt.w	1a00422e <_vfprintf_r+0xece>
1a003e7a:	f10b 0b08 	add.w	fp, fp, #8
1a003e7e:	e4f2      	b.n	1a003866 <_vfprintf_r+0x506>
1a003e80:	aa28      	add	r2, sp, #160	; 0xa0
1a003e82:	9907      	ldr	r1, [sp, #28]
1a003e84:	9805      	ldr	r0, [sp, #20]
1a003e86:	f003 f8a7 	bl	1a006fd8 <__sprint_r>
1a003e8a:	2800      	cmp	r0, #0
1a003e8c:	f43f ad11 	beq.w	1a0038b2 <_vfprintf_r+0x552>
1a003e90:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a003e94:	e096      	b.n	1a003fc4 <_vfprintf_r+0xc64>
1a003e96:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003e98:	9915      	ldr	r1, [sp, #84]	; 0x54
1a003e9a:	f8cb 1000 	str.w	r1, [fp]
1a003e9e:	9913      	ldr	r1, [sp, #76]	; 0x4c
1a003ea0:	f8cb 1004 	str.w	r1, [fp, #4]
1a003ea4:	3201      	adds	r2, #1
1a003ea6:	440c      	add	r4, r1
1a003ea8:	2a07      	cmp	r2, #7
1a003eaa:	942a      	str	r4, [sp, #168]	; 0xa8
1a003eac:	9229      	str	r2, [sp, #164]	; 0xa4
1a003eae:	f300 84e1 	bgt.w	1a004874 <_vfprintf_r+0x1514>
1a003eb2:	f10b 0b08 	add.w	fp, fp, #8
1a003eb6:	2b00      	cmp	r3, #0
1a003eb8:	f2c0 86a2 	blt.w	1a004c00 <_vfprintf_r+0x18a0>
1a003ebc:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a003ebe:	3201      	adds	r2, #1
1a003ec0:	441c      	add	r4, r3
1a003ec2:	2a07      	cmp	r2, #7
1a003ec4:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003ec8:	e9cb 7300 	strd	r7, r3, [fp]
1a003ecc:	f77f acdb 	ble.w	1a003886 <_vfprintf_r+0x526>
1a003ed0:	aa28      	add	r2, sp, #160	; 0xa0
1a003ed2:	9907      	ldr	r1, [sp, #28]
1a003ed4:	9805      	ldr	r0, [sp, #20]
1a003ed6:	f003 f87f 	bl	1a006fd8 <__sprint_r>
1a003eda:	2800      	cmp	r0, #0
1a003edc:	d1d8      	bne.n	1a003e90 <_vfprintf_r+0xb30>
1a003ede:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003ee0:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003ee4:	e4d1      	b.n	1a00388a <_vfprintf_r+0x52a>
1a003ee6:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a003ee8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a003eea:	2a01      	cmp	r2, #1
1a003eec:	f104 0401 	add.w	r4, r4, #1
1a003ef0:	f103 0501 	add.w	r5, r3, #1
1a003ef4:	f10b 0608 	add.w	r6, fp, #8
1a003ef8:	f340 8158 	ble.w	1a0041ac <_vfprintf_r+0xe4c>
1a003efc:	2301      	movs	r3, #1
1a003efe:	2d07      	cmp	r5, #7
1a003f00:	f8cb 7000 	str.w	r7, [fp]
1a003f04:	e9cd 5429 	strd	r5, r4, [sp, #164]	; 0xa4
1a003f08:	f8cb 3004 	str.w	r3, [fp, #4]
1a003f0c:	f300 832a 	bgt.w	1a004564 <_vfprintf_r+0x1204>
1a003f10:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a003f12:	9a15      	ldr	r2, [sp, #84]	; 0x54
1a003f14:	1c69      	adds	r1, r5, #1
1a003f16:	441c      	add	r4, r3
1a003f18:	2907      	cmp	r1, #7
1a003f1a:	910b      	str	r1, [sp, #44]	; 0x2c
1a003f1c:	e9cd 1429 	strd	r1, r4, [sp, #164]	; 0xa4
1a003f20:	e9c6 2300 	strd	r2, r3, [r6]
1a003f24:	f300 832a 	bgt.w	1a00457c <_vfprintf_r+0x121c>
1a003f28:	3608      	adds	r6, #8
1a003f2a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a003f2c:	9d12      	ldr	r5, [sp, #72]	; 0x48
1a003f2e:	f102 0901 	add.w	r9, r2, #1
1a003f32:	2300      	movs	r3, #0
1a003f34:	2200      	movs	r2, #0
1a003f36:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a003f3a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
1a003f3e:	f106 0b08 	add.w	fp, r6, #8
1a003f42:	f105 38ff 	add.w	r8, r5, #4294967295
1a003f46:	f7fe f89d 	bl	1a002084 <__aeabi_dcmpeq>
1a003f4a:	2800      	cmp	r0, #0
1a003f4c:	f040 8141 	bne.w	1a0041d2 <_vfprintf_r+0xe72>
1a003f50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a003f52:	f8c6 8004 	str.w	r8, [r6, #4]
1a003f56:	3701      	adds	r7, #1
1a003f58:	4444      	add	r4, r8
1a003f5a:	2b07      	cmp	r3, #7
1a003f5c:	6037      	str	r7, [r6, #0]
1a003f5e:	942a      	str	r4, [sp, #168]	; 0xa8
1a003f60:	9329      	str	r3, [sp, #164]	; 0xa4
1a003f62:	f300 82bf 	bgt.w	1a0044e4 <_vfprintf_r+0x1184>
1a003f66:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a003f68:	f106 0310 	add.w	r3, r6, #16
1a003f6c:	3202      	adds	r2, #2
1a003f6e:	465e      	mov	r6, fp
1a003f70:	920a      	str	r2, [sp, #40]	; 0x28
1a003f72:	469b      	mov	fp, r3
1a003f74:	9a16      	ldr	r2, [sp, #88]	; 0x58
1a003f76:	6072      	str	r2, [r6, #4]
1a003f78:	4414      	add	r4, r2
1a003f7a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1a003f7c:	942a      	str	r4, [sp, #168]	; 0xa8
1a003f7e:	ab24      	add	r3, sp, #144	; 0x90
1a003f80:	2a07      	cmp	r2, #7
1a003f82:	9229      	str	r2, [sp, #164]	; 0xa4
1a003f84:	6033      	str	r3, [r6, #0]
1a003f86:	f77f ac80 	ble.w	1a00388a <_vfprintf_r+0x52a>
1a003f8a:	e7a1      	b.n	1a003ed0 <_vfprintf_r+0xb70>
1a003f8c:	9e02      	ldr	r6, [sp, #8]
1a003f8e:	f7ff bbf4 	b.w	1a00377a <_vfprintf_r+0x41a>
1a003f92:	aa28      	add	r2, sp, #160	; 0xa0
1a003f94:	9907      	ldr	r1, [sp, #28]
1a003f96:	9805      	ldr	r0, [sp, #20]
1a003f98:	f003 f81e 	bl	1a006fd8 <__sprint_r>
1a003f9c:	2800      	cmp	r0, #0
1a003f9e:	f47f af77 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a003fa2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003fa4:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003fa8:	e444      	b.n	1a003834 <_vfprintf_r+0x4d4>
1a003faa:	aa28      	add	r2, sp, #160	; 0xa0
1a003fac:	9907      	ldr	r1, [sp, #28]
1a003fae:	9805      	ldr	r0, [sp, #20]
1a003fb0:	f003 f812 	bl	1a006fd8 <__sprint_r>
1a003fb4:	2800      	cmp	r0, #0
1a003fb6:	f47f af6b 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a003fba:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003fbc:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a003fc0:	e448      	b.n	1a003854 <_vfprintf_r+0x4f4>
1a003fc2:	46b1      	mov	r9, r6
1a003fc4:	9909      	ldr	r1, [sp, #36]	; 0x24
1a003fc6:	b111      	cbz	r1, 1a003fce <_vfprintf_r+0xc6e>
1a003fc8:	9805      	ldr	r0, [sp, #20]
1a003fca:	f7fe fbff 	bl	1a0027cc <_free_r>
1a003fce:	f8d9 2064 	ldr.w	r2, [r9, #100]	; 0x64
1a003fd2:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a003fd6:	07d4      	lsls	r4, r2, #31
1a003fd8:	d402      	bmi.n	1a003fe0 <_vfprintf_r+0xc80>
1a003fda:	0598      	lsls	r0, r3, #22
1a003fdc:	f140 82db 	bpl.w	1a004596 <_vfprintf_r+0x1236>
1a003fe0:	0659      	lsls	r1, r3, #25
1a003fe2:	f100 8640 	bmi.w	1a004c66 <_vfprintf_r+0x1906>
1a003fe6:	9804      	ldr	r0, [sp, #16]
1a003fe8:	b055      	add	sp, #340	; 0x154
1a003fea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a003fee:	bf00      	nop
1a003ff0:	1a0076bc 	.word	0x1a0076bc
1a003ff4:	1a0076d0 	.word	0x1a0076d0
1a003ff8:	2d10      	cmp	r5, #16
1a003ffa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a003ffc:	dd21      	ble.n	1a004042 <_vfprintf_r+0xce2>
1a003ffe:	2610      	movs	r6, #16
1a004000:	9f05      	ldr	r7, [sp, #20]
1a004002:	f8dd 801c 	ldr.w	r8, [sp, #28]
1a004006:	e004      	b.n	1a004012 <_vfprintf_r+0xcb2>
1a004008:	3d10      	subs	r5, #16
1a00400a:	2d10      	cmp	r5, #16
1a00400c:	f10b 0b08 	add.w	fp, fp, #8
1a004010:	dd17      	ble.n	1a004042 <_vfprintf_r+0xce2>
1a004012:	3301      	adds	r3, #1
1a004014:	4ab3      	ldr	r2, [pc, #716]	; (1a0042e4 <_vfprintf_r+0xf84>)
1a004016:	3410      	adds	r4, #16
1a004018:	2b07      	cmp	r3, #7
1a00401a:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a00401e:	e9cb 2600 	strd	r2, r6, [fp]
1a004022:	ddf1      	ble.n	1a004008 <_vfprintf_r+0xca8>
1a004024:	aa28      	add	r2, sp, #160	; 0xa0
1a004026:	4641      	mov	r1, r8
1a004028:	4638      	mov	r0, r7
1a00402a:	f002 ffd5 	bl	1a006fd8 <__sprint_r>
1a00402e:	2800      	cmp	r0, #0
1a004030:	f040 82c7 	bne.w	1a0045c2 <_vfprintf_r+0x1262>
1a004034:	3d10      	subs	r5, #16
1a004036:	2d10      	cmp	r5, #16
1a004038:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
1a00403c:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a004040:	dce7      	bgt.n	1a004012 <_vfprintf_r+0xcb2>
1a004042:	3301      	adds	r3, #1
1a004044:	4aa7      	ldr	r2, [pc, #668]	; (1a0042e4 <_vfprintf_r+0xf84>)
1a004046:	442c      	add	r4, r5
1a004048:	2b07      	cmp	r3, #7
1a00404a:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a00404e:	e9cb 2500 	strd	r2, r5, [fp]
1a004052:	f77f ac23 	ble.w	1a00389c <_vfprintf_r+0x53c>
1a004056:	aa28      	add	r2, sp, #160	; 0xa0
1a004058:	9907      	ldr	r1, [sp, #28]
1a00405a:	9805      	ldr	r0, [sp, #20]
1a00405c:	f002 ffbc 	bl	1a006fd8 <__sprint_r>
1a004060:	2800      	cmp	r0, #0
1a004062:	f47f af15 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a004066:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004068:	e418      	b.n	1a00389c <_vfprintf_r+0x53c>
1a00406a:	2b01      	cmp	r3, #1
1a00406c:	f000 8423 	beq.w	1a0048b6 <_vfprintf_r+0x1556>
1a004070:	2b02      	cmp	r3, #2
1a004072:	9e02      	ldr	r6, [sp, #8]
1a004074:	f47f ab87 	bne.w	1a003786 <_vfprintf_r+0x426>
1a004078:	9814      	ldr	r0, [sp, #80]	; 0x50
1a00407a:	af54      	add	r7, sp, #336	; 0x150
1a00407c:	0923      	lsrs	r3, r4, #4
1a00407e:	f004 010f 	and.w	r1, r4, #15
1a004082:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
1a004086:	092a      	lsrs	r2, r5, #4
1a004088:	461c      	mov	r4, r3
1a00408a:	4615      	mov	r5, r2
1a00408c:	5c43      	ldrb	r3, [r0, r1]
1a00408e:	f807 3d01 	strb.w	r3, [r7, #-1]!
1a004092:	ea54 0305 	orrs.w	r3, r4, r5
1a004096:	d1f1      	bne.n	1a00407c <_vfprintf_r+0xd1c>
1a004098:	ab54      	add	r3, sp, #336	; 0x150
1a00409a:	9602      	str	r6, [sp, #8]
1a00409c:	1bde      	subs	r6, r3, r7
1a00409e:	e5c1      	b.n	1a003c24 <_vfprintf_r+0x8c4>
1a0040a0:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a0040a2:	2b00      	cmp	r3, #0
1a0040a4:	f340 80df 	ble.w	1a004266 <_vfprintf_r+0xf06>
1a0040a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0040aa:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a0040ac:	4293      	cmp	r3, r2
1a0040ae:	bfa8      	it	ge
1a0040b0:	4613      	movge	r3, r2
1a0040b2:	2b00      	cmp	r3, #0
1a0040b4:	461d      	mov	r5, r3
1a0040b6:	dd0d      	ble.n	1a0040d4 <_vfprintf_r+0xd74>
1a0040b8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a0040ba:	f8cb 7000 	str.w	r7, [fp]
1a0040be:	3301      	adds	r3, #1
1a0040c0:	442c      	add	r4, r5
1a0040c2:	2b07      	cmp	r3, #7
1a0040c4:	942a      	str	r4, [sp, #168]	; 0xa8
1a0040c6:	f8cb 5004 	str.w	r5, [fp, #4]
1a0040ca:	9329      	str	r3, [sp, #164]	; 0xa4
1a0040cc:	f300 84fe 	bgt.w	1a004acc <_vfprintf_r+0x176c>
1a0040d0:	f10b 0b08 	add.w	fp, fp, #8
1a0040d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0040d6:	2d00      	cmp	r5, #0
1a0040d8:	bfa8      	it	ge
1a0040da:	1b5b      	subge	r3, r3, r5
1a0040dc:	2b00      	cmp	r3, #0
1a0040de:	461d      	mov	r5, r3
1a0040e0:	f300 8290 	bgt.w	1a004604 <_vfprintf_r+0x12a4>
1a0040e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0040e6:	443b      	add	r3, r7
1a0040e8:	4699      	mov	r9, r3
1a0040ea:	9b02      	ldr	r3, [sp, #8]
1a0040ec:	0558      	lsls	r0, r3, #21
1a0040ee:	f100 8413 	bmi.w	1a004918 <_vfprintf_r+0x15b8>
1a0040f2:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a0040f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a0040f6:	4293      	cmp	r3, r2
1a0040f8:	db03      	blt.n	1a004102 <_vfprintf_r+0xda2>
1a0040fa:	9a02      	ldr	r2, [sp, #8]
1a0040fc:	07d1      	lsls	r1, r2, #31
1a0040fe:	f140 82f7 	bpl.w	1a0046f0 <_vfprintf_r+0x1390>
1a004102:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a004104:	9915      	ldr	r1, [sp, #84]	; 0x54
1a004106:	f8cb 1000 	str.w	r1, [fp]
1a00410a:	9913      	ldr	r1, [sp, #76]	; 0x4c
1a00410c:	f8cb 1004 	str.w	r1, [fp, #4]
1a004110:	3201      	adds	r2, #1
1a004112:	440c      	add	r4, r1
1a004114:	2a07      	cmp	r2, #7
1a004116:	942a      	str	r4, [sp, #168]	; 0xa8
1a004118:	9229      	str	r2, [sp, #164]	; 0xa4
1a00411a:	f300 8523 	bgt.w	1a004b64 <_vfprintf_r+0x1804>
1a00411e:	f10b 0b08 	add.w	fp, fp, #8
1a004122:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a004124:	18bd      	adds	r5, r7, r2
1a004126:	eba5 0509 	sub.w	r5, r5, r9
1a00412a:	1ad3      	subs	r3, r2, r3
1a00412c:	429d      	cmp	r5, r3
1a00412e:	bfa8      	it	ge
1a004130:	461d      	movge	r5, r3
1a004132:	2d00      	cmp	r5, #0
1a004134:	dd0d      	ble.n	1a004152 <_vfprintf_r+0xdf2>
1a004136:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a004138:	f8cb 9000 	str.w	r9, [fp]
1a00413c:	3201      	adds	r2, #1
1a00413e:	442c      	add	r4, r5
1a004140:	2a07      	cmp	r2, #7
1a004142:	942a      	str	r4, [sp, #168]	; 0xa8
1a004144:	f8cb 5004 	str.w	r5, [fp, #4]
1a004148:	9229      	str	r2, [sp, #164]	; 0xa4
1a00414a:	f300 8546 	bgt.w	1a004bda <_vfprintf_r+0x187a>
1a00414e:	f10b 0b08 	add.w	fp, fp, #8
1a004152:	2d00      	cmp	r5, #0
1a004154:	bfac      	ite	ge
1a004156:	1b5d      	subge	r5, r3, r5
1a004158:	461d      	movlt	r5, r3
1a00415a:	2d00      	cmp	r5, #0
1a00415c:	f77f ab95 	ble.w	1a00388a <_vfprintf_r+0x52a>
1a004160:	2d10      	cmp	r5, #16
1a004162:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a004164:	4b60      	ldr	r3, [pc, #384]	; (1a0042e8 <_vfprintf_r+0xf88>)
1a004166:	f340 823b 	ble.w	1a0045e0 <_vfprintf_r+0x1280>
1a00416a:	2610      	movs	r6, #16
1a00416c:	9f05      	ldr	r7, [sp, #20]
1a00416e:	f8dd 801c 	ldr.w	r8, [sp, #28]
1a004172:	4699      	mov	r9, r3
1a004174:	e005      	b.n	1a004182 <_vfprintf_r+0xe22>
1a004176:	f10b 0b08 	add.w	fp, fp, #8
1a00417a:	3d10      	subs	r5, #16
1a00417c:	2d10      	cmp	r5, #16
1a00417e:	f340 822e 	ble.w	1a0045de <_vfprintf_r+0x127e>
1a004182:	3201      	adds	r2, #1
1a004184:	3410      	adds	r4, #16
1a004186:	2a07      	cmp	r2, #7
1a004188:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a00418c:	e9cb 9600 	strd	r9, r6, [fp]
1a004190:	ddf1      	ble.n	1a004176 <_vfprintf_r+0xe16>
1a004192:	aa28      	add	r2, sp, #160	; 0xa0
1a004194:	4641      	mov	r1, r8
1a004196:	4638      	mov	r0, r7
1a004198:	f002 ff1e 	bl	1a006fd8 <__sprint_r>
1a00419c:	2800      	cmp	r0, #0
1a00419e:	f040 8210 	bne.w	1a0045c2 <_vfprintf_r+0x1262>
1a0041a2:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a0041a6:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0041aa:	e7e6      	b.n	1a00417a <_vfprintf_r+0xe1a>
1a0041ac:	9a02      	ldr	r2, [sp, #8]
1a0041ae:	07d2      	lsls	r2, r2, #31
1a0041b0:	f53f aea4 	bmi.w	1a003efc <_vfprintf_r+0xb9c>
1a0041b4:	2201      	movs	r2, #1
1a0041b6:	2d07      	cmp	r5, #7
1a0041b8:	f8cb 7000 	str.w	r7, [fp]
1a0041bc:	e9cd 5429 	strd	r5, r4, [sp, #164]	; 0xa4
1a0041c0:	f8cb 2004 	str.w	r2, [fp, #4]
1a0041c4:	f300 818e 	bgt.w	1a0044e4 <_vfprintf_r+0x1184>
1a0041c8:	3302      	adds	r3, #2
1a0041ca:	930a      	str	r3, [sp, #40]	; 0x28
1a0041cc:	f10b 0b10 	add.w	fp, fp, #16
1a0041d0:	e6d0      	b.n	1a003f74 <_vfprintf_r+0xc14>
1a0041d2:	f1b8 0f00 	cmp.w	r8, #0
1a0041d6:	f77f aecd 	ble.w	1a003f74 <_vfprintf_r+0xc14>
1a0041da:	f1b8 0f10 	cmp.w	r8, #16
1a0041de:	4b42      	ldr	r3, [pc, #264]	; (1a0042e8 <_vfprintf_r+0xf88>)
1a0041e0:	f340 8635 	ble.w	1a004e4e <_vfprintf_r+0x1aee>
1a0041e4:	461a      	mov	r2, r3
1a0041e6:	464d      	mov	r5, r9
1a0041e8:	4623      	mov	r3, r4
1a0041ea:	2710      	movs	r7, #16
1a0041ec:	f8dd b01c 	ldr.w	fp, [sp, #28]
1a0041f0:	f8dd 9014 	ldr.w	r9, [sp, #20]
1a0041f4:	4614      	mov	r4, r2
1a0041f6:	e007      	b.n	1a004208 <_vfprintf_r+0xea8>
1a0041f8:	3608      	adds	r6, #8
1a0041fa:	f1a8 0810 	sub.w	r8, r8, #16
1a0041fe:	f1b8 0f10 	cmp.w	r8, #16
1a004202:	f340 815e 	ble.w	1a0044c2 <_vfprintf_r+0x1162>
1a004206:	3501      	adds	r5, #1
1a004208:	3310      	adds	r3, #16
1a00420a:	2d07      	cmp	r5, #7
1a00420c:	e9cd 5329 	strd	r5, r3, [sp, #164]	; 0xa4
1a004210:	e9c6 4700 	strd	r4, r7, [r6]
1a004214:	ddf0      	ble.n	1a0041f8 <_vfprintf_r+0xe98>
1a004216:	aa28      	add	r2, sp, #160	; 0xa0
1a004218:	4659      	mov	r1, fp
1a00421a:	4648      	mov	r0, r9
1a00421c:	f002 fedc 	bl	1a006fd8 <__sprint_r>
1a004220:	2800      	cmp	r0, #0
1a004222:	f040 821d 	bne.w	1a004660 <_vfprintf_r+0x1300>
1a004226:	e9dd 5329 	ldrd	r5, r3, [sp, #164]	; 0xa4
1a00422a:	ae2b      	add	r6, sp, #172	; 0xac
1a00422c:	e7e5      	b.n	1a0041fa <_vfprintf_r+0xe9a>
1a00422e:	aa28      	add	r2, sp, #160	; 0xa0
1a004230:	9907      	ldr	r1, [sp, #28]
1a004232:	9805      	ldr	r0, [sp, #20]
1a004234:	f002 fed0 	bl	1a006fd8 <__sprint_r>
1a004238:	2800      	cmp	r0, #0
1a00423a:	f47f ae29 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a00423e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004240:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a004244:	f7ff bb0f 	b.w	1a003866 <_vfprintf_r+0x506>
1a004248:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a00424c:	f7fe fc06 	bl	1a002a5c <__retarget_lock_acquire_recursive>
1a004250:	f9b9 200c 	ldrsh.w	r2, [r9, #12]
1a004254:	b293      	uxth	r3, r2
1a004256:	f7ff b8a3 	b.w	1a0033a0 <_vfprintf_r+0x40>
1a00425a:	9b02      	ldr	r3, [sp, #8]
1a00425c:	07dd      	lsls	r5, r3, #31
1a00425e:	f53f ad57 	bmi.w	1a003d10 <_vfprintf_r+0x9b0>
1a004262:	f7ff bb12 	b.w	1a00388a <_vfprintf_r+0x52a>
1a004266:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a004268:	4920      	ldr	r1, [pc, #128]	; (1a0042ec <_vfprintf_r+0xf8c>)
1a00426a:	f8cb 1000 	str.w	r1, [fp]
1a00426e:	3201      	adds	r2, #1
1a004270:	3401      	adds	r4, #1
1a004272:	2101      	movs	r1, #1
1a004274:	2a07      	cmp	r2, #7
1a004276:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a00427a:	f8cb 1004 	str.w	r1, [fp, #4]
1a00427e:	f300 8409 	bgt.w	1a004a94 <_vfprintf_r+0x1734>
1a004282:	f10b 0b08 	add.w	fp, fp, #8
1a004286:	2b00      	cmp	r3, #0
1a004288:	f47f ae05 	bne.w	1a003e96 <_vfprintf_r+0xb36>
1a00428c:	9b02      	ldr	r3, [sp, #8]
1a00428e:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a004290:	f003 0301 	and.w	r3, r3, #1
1a004294:	4313      	orrs	r3, r2
1a004296:	f43f aaf8 	beq.w	1a00388a <_vfprintf_r+0x52a>
1a00429a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a00429c:	9b15      	ldr	r3, [sp, #84]	; 0x54
1a00429e:	f8cb 3000 	str.w	r3, [fp]
1a0042a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a0042a4:	f8cb 3004 	str.w	r3, [fp, #4]
1a0042a8:	3201      	adds	r2, #1
1a0042aa:	441c      	add	r4, r3
1a0042ac:	2a07      	cmp	r2, #7
1a0042ae:	942a      	str	r4, [sp, #168]	; 0xa8
1a0042b0:	9229      	str	r2, [sp, #164]	; 0xa4
1a0042b2:	f300 82df 	bgt.w	1a004874 <_vfprintf_r+0x1514>
1a0042b6:	f10b 0b08 	add.w	fp, fp, #8
1a0042ba:	e5ff      	b.n	1a003ebc <_vfprintf_r+0xb5c>
1a0042bc:	af54      	add	r7, sp, #336	; 0x150
1a0042be:	e4b1      	b.n	1a003c24 <_vfprintf_r+0x8c4>
1a0042c0:	9b02      	ldr	r3, [sp, #8]
1a0042c2:	0598      	lsls	r0, r3, #22
1a0042c4:	f100 822d 	bmi.w	1a004722 <_vfprintf_r+0x13c2>
1a0042c8:	2500      	movs	r5, #0
1a0042ca:	f7ff b987 	b.w	1a0035dc <_vfprintf_r+0x27c>
1a0042ce:	9904      	ldr	r1, [sp, #16]
1a0042d0:	6812      	ldr	r2, [r2, #0]
1a0042d2:	9308      	str	r3, [sp, #32]
1a0042d4:	17cd      	asrs	r5, r1, #31
1a0042d6:	4608      	mov	r0, r1
1a0042d8:	4629      	mov	r1, r5
1a0042da:	e9c2 0100 	strd	r0, r1, [r2]
1a0042de:	4657      	mov	r7, sl
1a0042e0:	f7ff baf2 	b.w	1a0038c8 <_vfprintf_r+0x568>
1a0042e4:	1a0076c0 	.word	0x1a0076c0
1a0042e8:	1a0076d0 	.word	0x1a0076d0
1a0042ec:	1a0076bc 	.word	0x1a0076bc
1a0042f0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a0042f4:	4602      	mov	r2, r0
1a0042f6:	460b      	mov	r3, r1
1a0042f8:	f002 ffc6 	bl	1a007288 <__aeabi_dcmpun>
1a0042fc:	2800      	cmp	r0, #0
1a0042fe:	f040 853a 	bne.w	1a004d76 <_vfprintf_r+0x1a16>
1a004302:	f1b8 0f61 	cmp.w	r8, #97	; 0x61
1a004306:	f000 84d0 	beq.w	1a004caa <_vfprintf_r+0x194a>
1a00430a:	f1b8 0f41 	cmp.w	r8, #65	; 0x41
1a00430e:	f000 820c 	beq.w	1a00472a <_vfprintf_r+0x13ca>
1a004312:	f028 0320 	bic.w	r3, r8, #32
1a004316:	f1b9 3fff 	cmp.w	r9, #4294967295
1a00431a:	9303      	str	r3, [sp, #12]
1a00431c:	f000 8500 	beq.w	1a004d20 <_vfprintf_r+0x19c0>
1a004320:	2b47      	cmp	r3, #71	; 0x47
1a004322:	d104      	bne.n	1a00432e <_vfprintf_r+0xfce>
1a004324:	f1b9 0f00 	cmp.w	r9, #0
1a004328:	bf08      	it	eq
1a00432a:	f04f 0901 	moveq.w	r9, #1
1a00432e:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
1a004332:	9902      	ldr	r1, [sp, #8]
1a004334:	2d00      	cmp	r5, #0
1a004336:	f441 7280 	orr.w	r2, r1, #256	; 0x100
1a00433a:	f2c0 8395 	blt.w	1a004a68 <_vfprintf_r+0x1708>
1a00433e:	2300      	movs	r3, #0
1a004340:	e9cd 3109 	strd	r3, r1, [sp, #36]	; 0x24
1a004344:	e9cd 451c 	strd	r4, r5, [sp, #112]	; 0x70
1a004348:	931e      	str	r3, [sp, #120]	; 0x78
1a00434a:	9202      	str	r2, [sp, #8]
1a00434c:	9b03      	ldr	r3, [sp, #12]
1a00434e:	2b46      	cmp	r3, #70	; 0x46
1a004350:	f000 83df 	beq.w	1a004b12 <_vfprintf_r+0x17b2>
1a004354:	2b45      	cmp	r3, #69	; 0x45
1a004356:	f000 84d2 	beq.w	1a004cfe <_vfprintf_r+0x199e>
1a00435a:	aa26      	add	r2, sp, #152	; 0x98
1a00435c:	ab23      	add	r3, sp, #140	; 0x8c
1a00435e:	e9cd 3200 	strd	r3, r2, [sp]
1a004362:	2102      	movs	r1, #2
1a004364:	ab22      	add	r3, sp, #136	; 0x88
1a004366:	464a      	mov	r2, r9
1a004368:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a00436c:	9805      	ldr	r0, [sp, #20]
1a00436e:	f000 fedf 	bl	1a005130 <_dtoa_r>
1a004372:	9b03      	ldr	r3, [sp, #12]
1a004374:	2b47      	cmp	r3, #71	; 0x47
1a004376:	4607      	mov	r7, r0
1a004378:	f040 858d 	bne.w	1a004e96 <_vfprintf_r+0x1b36>
1a00437c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a00437e:	07db      	lsls	r3, r3, #31
1a004380:	f100 843b 	bmi.w	1a004bfa <_vfprintf_r+0x189a>
1a004384:	9e26      	ldr	r6, [sp, #152]	; 0x98
1a004386:	1bf3      	subs	r3, r6, r7
1a004388:	9312      	str	r3, [sp, #72]	; 0x48
1a00438a:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a00438c:	930e      	str	r3, [sp, #56]	; 0x38
1a00438e:	9b03      	ldr	r3, [sp, #12]
1a004390:	2b47      	cmp	r3, #71	; 0x47
1a004392:	f000 8293 	beq.w	1a0048bc <_vfprintf_r+0x155c>
1a004396:	9b03      	ldr	r3, [sp, #12]
1a004398:	2b46      	cmp	r3, #70	; 0x46
1a00439a:	f000 83fd 	beq.w	1a004b98 <_vfprintf_r+0x1838>
1a00439e:	9903      	ldr	r1, [sp, #12]
1a0043a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0043a2:	2941      	cmp	r1, #65	; 0x41
1a0043a4:	f103 32ff 	add.w	r2, r3, #4294967295
1a0043a8:	fa5f f388 	uxtb.w	r3, r8
1a0043ac:	bf03      	ittte	eq
1a0043ae:	330f      	addeq	r3, #15
1a0043b0:	b2db      	uxtbeq	r3, r3
1a0043b2:	2101      	moveq	r1, #1
1a0043b4:	2100      	movne	r1, #0
1a0043b6:	2a00      	cmp	r2, #0
1a0043b8:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
1a0043bc:	bfb8      	it	lt
1a0043be:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
1a0043c0:	9222      	str	r2, [sp, #136]	; 0x88
1a0043c2:	bfb6      	itet	lt
1a0043c4:	f1c3 0201 	rsblt	r2, r3, #1
1a0043c8:	232b      	movge	r3, #43	; 0x2b
1a0043ca:	232d      	movlt	r3, #45	; 0x2d
1a0043cc:	2a09      	cmp	r2, #9
1a0043ce:	f88d 3091 	strb.w	r3, [sp, #145]	; 0x91
1a0043d2:	f340 84c1 	ble.w	1a004d58 <_vfprintf_r+0x19f8>
1a0043d6:	f10d 049f 	add.w	r4, sp, #159	; 0x9f
1a0043da:	4620      	mov	r0, r4
1a0043dc:	4dbe      	ldr	r5, [pc, #760]	; (1a0046d8 <_vfprintf_r+0x1378>)
1a0043de:	e001      	b.n	1a0043e4 <_vfprintf_r+0x1084>
1a0043e0:	4608      	mov	r0, r1
1a0043e2:	461a      	mov	r2, r3
1a0043e4:	fb85 3102 	smull	r3, r1, r5, r2
1a0043e8:	17d3      	asrs	r3, r2, #31
1a0043ea:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
1a0043ee:	eb03 0183 	add.w	r1, r3, r3, lsl #2
1a0043f2:	eba2 0141 	sub.w	r1, r2, r1, lsl #1
1a0043f6:	3130      	adds	r1, #48	; 0x30
1a0043f8:	2a63      	cmp	r2, #99	; 0x63
1a0043fa:	f800 1c01 	strb.w	r1, [r0, #-1]
1a0043fe:	f100 31ff 	add.w	r1, r0, #4294967295
1a004402:	dced      	bgt.n	1a0043e0 <_vfprintf_r+0x1080>
1a004404:	3330      	adds	r3, #48	; 0x30
1a004406:	1e82      	subs	r2, r0, #2
1a004408:	b2db      	uxtb	r3, r3
1a00440a:	4294      	cmp	r4, r2
1a00440c:	f801 3c01 	strb.w	r3, [r1, #-1]
1a004410:	f240 8544 	bls.w	1a004e9c <_vfprintf_r+0x1b3c>
1a004414:	f10d 0292 	add.w	r2, sp, #146	; 0x92
1a004418:	e001      	b.n	1a00441e <_vfprintf_r+0x10be>
1a00441a:	f811 3b01 	ldrb.w	r3, [r1], #1
1a00441e:	f802 3b01 	strb.w	r3, [r2], #1
1a004422:	42a1      	cmp	r1, r4
1a004424:	d1f9      	bne.n	1a00441a <_vfprintf_r+0x10ba>
1a004426:	f10d 03a1 	add.w	r3, sp, #161	; 0xa1
1a00442a:	f10d 0292 	add.w	r2, sp, #146	; 0x92
1a00442e:	1a1b      	subs	r3, r3, r0
1a004430:	4413      	add	r3, r2
1a004432:	aa24      	add	r2, sp, #144	; 0x90
1a004434:	1a9b      	subs	r3, r3, r2
1a004436:	9316      	str	r3, [sp, #88]	; 0x58
1a004438:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a00443a:	9a16      	ldr	r2, [sp, #88]	; 0x58
1a00443c:	2b01      	cmp	r3, #1
1a00443e:	eb03 0602 	add.w	r6, r3, r2
1a004442:	f340 84ee 	ble.w	1a004e22 <_vfprintf_r+0x1ac2>
1a004446:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a004448:	441e      	add	r6, r3
1a00444a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a00444c:	2200      	movs	r2, #0
1a00444e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
1a004452:	f443 7380 	orr.w	r3, r3, #256	; 0x100
1a004456:	e9cd 220e 	strd	r2, r2, [sp, #56]	; 0x38
1a00445a:	9302      	str	r3, [sp, #8]
1a00445c:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a004460:	920c      	str	r2, [sp, #48]	; 0x30
1a004462:	9303      	str	r3, [sp, #12]
1a004464:	9b1e      	ldr	r3, [sp, #120]	; 0x78
1a004466:	2b00      	cmp	r3, #0
1a004468:	f040 824f 	bne.w	1a00490a <_vfprintf_r+0x15aa>
1a00446c:	4699      	mov	r9, r3
1a00446e:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a004472:	f7ff b94a 	b.w	1a00370a <_vfprintf_r+0x3aa>
1a004476:	9b08      	ldr	r3, [sp, #32]
1a004478:	1d1a      	adds	r2, r3, #4
1a00447a:	9b02      	ldr	r3, [sp, #8]
1a00447c:	06d9      	lsls	r1, r3, #27
1a00447e:	f100 8504 	bmi.w	1a004e8a <_vfprintf_r+0x1b2a>
1a004482:	9e02      	ldr	r6, [sp, #8]
1a004484:	4633      	mov	r3, r6
1a004486:	065b      	lsls	r3, r3, #25
1a004488:	f140 80ec 	bpl.w	1a004664 <_vfprintf_r+0x1304>
1a00448c:	9b08      	ldr	r3, [sp, #32]
1a00448e:	9208      	str	r2, [sp, #32]
1a004490:	f9b3 4000 	ldrsh.w	r4, [r3]
1a004494:	17e5      	asrs	r5, r4, #31
1a004496:	4622      	mov	r2, r4
1a004498:	462b      	mov	r3, r5
1a00449a:	f7ff b8eb 	b.w	1a003674 <_vfprintf_r+0x314>
1a00449e:	4252      	negs	r2, r2
1a0044a0:	9206      	str	r2, [sp, #24]
1a0044a2:	9308      	str	r3, [sp, #32]
1a0044a4:	f7ff b8af 	b.w	1a003606 <_vfprintf_r+0x2a6>
1a0044a8:	aa28      	add	r2, sp, #160	; 0xa0
1a0044aa:	9907      	ldr	r1, [sp, #28]
1a0044ac:	9805      	ldr	r0, [sp, #20]
1a0044ae:	f002 fd93 	bl	1a006fd8 <__sprint_r>
1a0044b2:	2800      	cmp	r0, #0
1a0044b4:	f47f acec 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a0044b8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0044ba:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0044be:	f7ff b9cd 	b.w	1a00385c <_vfprintf_r+0x4fc>
1a0044c2:	4622      	mov	r2, r4
1a0044c4:	461c      	mov	r4, r3
1a0044c6:	4613      	mov	r3, r2
1a0044c8:	462a      	mov	r2, r5
1a0044ca:	3201      	adds	r2, #1
1a0044cc:	920a      	str	r2, [sp, #40]	; 0x28
1a0044ce:	f106 0208 	add.w	r2, r6, #8
1a0044d2:	e9c6 3800 	strd	r3, r8, [r6]
1a0044d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a0044d8:	9329      	str	r3, [sp, #164]	; 0xa4
1a0044da:	4444      	add	r4, r8
1a0044dc:	2b07      	cmp	r3, #7
1a0044de:	942a      	str	r4, [sp, #168]	; 0xa8
1a0044e0:	f340 8100 	ble.w	1a0046e4 <_vfprintf_r+0x1384>
1a0044e4:	aa28      	add	r2, sp, #160	; 0xa0
1a0044e6:	9907      	ldr	r1, [sp, #28]
1a0044e8:	9805      	ldr	r0, [sp, #20]
1a0044ea:	f002 fd75 	bl	1a006fd8 <__sprint_r>
1a0044ee:	2800      	cmp	r0, #0
1a0044f0:	f47f acce 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a0044f4:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
1a0044f8:	3301      	adds	r3, #1
1a0044fa:	930a      	str	r3, [sp, #40]	; 0x28
1a0044fc:	f10d 0bb4 	add.w	fp, sp, #180	; 0xb4
1a004500:	ae2b      	add	r6, sp, #172	; 0xac
1a004502:	e537      	b.n	1a003f74 <_vfprintf_r+0xc14>
1a004504:	aa28      	add	r2, sp, #160	; 0xa0
1a004506:	9907      	ldr	r1, [sp, #28]
1a004508:	9805      	ldr	r0, [sp, #20]
1a00450a:	f002 fd65 	bl	1a006fd8 <__sprint_r>
1a00450e:	2800      	cmp	r0, #0
1a004510:	f47f acbe 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a004514:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004516:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a00451a:	e409      	b.n	1a003d30 <_vfprintf_r+0x9d0>
1a00451c:	f043 0320 	orr.w	r3, r3, #32
1a004520:	f89a 8001 	ldrb.w	r8, [sl, #1]
1a004524:	9302      	str	r3, [sp, #8]
1a004526:	f10a 0a01 	add.w	sl, sl, #1
1a00452a:	f7fe bf9d 	b.w	1a003468 <_vfprintf_r+0x108>
1a00452e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
1a004532:	f89a 8001 	ldrb.w	r8, [sl, #1]
1a004536:	9302      	str	r3, [sp, #8]
1a004538:	f10a 0a01 	add.w	sl, sl, #1
1a00453c:	f7fe bf94 	b.w	1a003468 <_vfprintf_r+0x108>
1a004540:	464e      	mov	r6, r9
1a004542:	2e06      	cmp	r6, #6
1a004544:	bf28      	it	cs
1a004546:	2606      	movcs	r6, #6
1a004548:	46b9      	mov	r9, r7
1a00454a:	970c      	str	r7, [sp, #48]	; 0x30
1a00454c:	e9cd 770e 	strd	r7, r7, [sp, #56]	; 0x38
1a004550:	9709      	str	r7, [sp, #36]	; 0x24
1a004552:	463a      	mov	r2, r7
1a004554:	9603      	str	r6, [sp, #12]
1a004556:	9408      	str	r4, [sp, #32]
1a004558:	4f60      	ldr	r7, [pc, #384]	; (1a0046dc <_vfprintf_r+0x137c>)
1a00455a:	f7ff b8d6 	b.w	1a00370a <_vfprintf_r+0x3aa>
1a00455e:	463c      	mov	r4, r7
1a004560:	f7fe bf75 	b.w	1a00344e <_vfprintf_r+0xee>
1a004564:	aa28      	add	r2, sp, #160	; 0xa0
1a004566:	9907      	ldr	r1, [sp, #28]
1a004568:	9805      	ldr	r0, [sp, #20]
1a00456a:	f002 fd35 	bl	1a006fd8 <__sprint_r>
1a00456e:	2800      	cmp	r0, #0
1a004570:	f47f ac8e 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a004574:	e9dd 5429 	ldrd	r5, r4, [sp, #164]	; 0xa4
1a004578:	ae2b      	add	r6, sp, #172	; 0xac
1a00457a:	e4c9      	b.n	1a003f10 <_vfprintf_r+0xbb0>
1a00457c:	aa28      	add	r2, sp, #160	; 0xa0
1a00457e:	9907      	ldr	r1, [sp, #28]
1a004580:	9805      	ldr	r0, [sp, #20]
1a004582:	f002 fd29 	bl	1a006fd8 <__sprint_r>
1a004586:	2800      	cmp	r0, #0
1a004588:	f47f ac82 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a00458c:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
1a004590:	ae2b      	add	r6, sp, #172	; 0xac
1a004592:	930b      	str	r3, [sp, #44]	; 0x2c
1a004594:	e4c9      	b.n	1a003f2a <_vfprintf_r+0xbca>
1a004596:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a00459a:	f7fe fa61 	bl	1a002a60 <__retarget_lock_release_recursive>
1a00459e:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a0045a2:	e51d      	b.n	1a003fe0 <_vfprintf_r+0xc80>
1a0045a4:	aa28      	add	r2, sp, #160	; 0xa0
1a0045a6:	9907      	ldr	r1, [sp, #28]
1a0045a8:	9805      	ldr	r0, [sp, #20]
1a0045aa:	f002 fd15 	bl	1a006fd8 <__sprint_r>
1a0045ae:	2800      	cmp	r0, #0
1a0045b0:	f47f ac6e 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a0045b4:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a0045b8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0045ba:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0045be:	f7ff b929 	b.w	1a003814 <_vfprintf_r+0x4b4>
1a0045c2:	46c1      	mov	r9, r8
1a0045c4:	e4fe      	b.n	1a003fc4 <_vfprintf_r+0xc64>
1a0045c6:	aa28      	add	r2, sp, #160	; 0xa0
1a0045c8:	9907      	ldr	r1, [sp, #28]
1a0045ca:	9805      	ldr	r0, [sp, #20]
1a0045cc:	f002 fd04 	bl	1a006fd8 <__sprint_r>
1a0045d0:	2800      	cmp	r0, #0
1a0045d2:	f47f ac5d 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a0045d6:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0045da:	f7ff bb93 	b.w	1a003d04 <_vfprintf_r+0x9a4>
1a0045de:	464b      	mov	r3, r9
1a0045e0:	3201      	adds	r2, #1
1a0045e2:	442c      	add	r4, r5
1a0045e4:	2a07      	cmp	r2, #7
1a0045e6:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a0045ea:	e9cb 3500 	strd	r3, r5, [fp]
1a0045ee:	f77f a94a 	ble.w	1a003886 <_vfprintf_r+0x526>
1a0045f2:	e46d      	b.n	1a003ed0 <_vfprintf_r+0xb70>
1a0045f4:	9a08      	ldr	r2, [sp, #32]
1a0045f6:	6812      	ldr	r2, [r2, #0]
1a0045f8:	9308      	str	r3, [sp, #32]
1a0045fa:	9b04      	ldr	r3, [sp, #16]
1a0045fc:	6013      	str	r3, [r2, #0]
1a0045fe:	4657      	mov	r7, sl
1a004600:	f7ff b962 	b.w	1a0038c8 <_vfprintf_r+0x568>
1a004604:	2d10      	cmp	r5, #16
1a004606:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a004608:	4b35      	ldr	r3, [pc, #212]	; (1a0046e0 <_vfprintf_r+0x1380>)
1a00460a:	dd50      	ble.n	1a0046ae <_vfprintf_r+0x134e>
1a00460c:	4619      	mov	r1, r3
1a00460e:	2610      	movs	r6, #16
1a004610:	4623      	mov	r3, r4
1a004612:	f8dd 8014 	ldr.w	r8, [sp, #20]
1a004616:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a00461a:	460c      	mov	r4, r1
1a00461c:	e004      	b.n	1a004628 <_vfprintf_r+0x12c8>
1a00461e:	f10b 0b08 	add.w	fp, fp, #8
1a004622:	3d10      	subs	r5, #16
1a004624:	2d10      	cmp	r5, #16
1a004626:	dd3f      	ble.n	1a0046a8 <_vfprintf_r+0x1348>
1a004628:	3201      	adds	r2, #1
1a00462a:	3310      	adds	r3, #16
1a00462c:	2a07      	cmp	r2, #7
1a00462e:	e9cd 2329 	strd	r2, r3, [sp, #164]	; 0xa4
1a004632:	e9cb 4600 	strd	r4, r6, [fp]
1a004636:	ddf2      	ble.n	1a00461e <_vfprintf_r+0x12be>
1a004638:	aa28      	add	r2, sp, #160	; 0xa0
1a00463a:	4649      	mov	r1, r9
1a00463c:	4640      	mov	r0, r8
1a00463e:	f002 fccb 	bl	1a006fd8 <__sprint_r>
1a004642:	2800      	cmp	r0, #0
1a004644:	f47f acbe 	bne.w	1a003fc4 <_vfprintf_r+0xc64>
1a004648:	e9dd 2329 	ldrd	r2, r3, [sp, #164]	; 0xa4
1a00464c:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a004650:	e7e7      	b.n	1a004622 <_vfprintf_r+0x12c2>
1a004652:	4638      	mov	r0, r7
1a004654:	f7fe fe14 	bl	1a003280 <strlen>
1a004658:	46a9      	mov	r9, r5
1a00465a:	4606      	mov	r6, r0
1a00465c:	f7ff b849 	b.w	1a0036f2 <_vfprintf_r+0x392>
1a004660:	46d9      	mov	r9, fp
1a004662:	e4af      	b.n	1a003fc4 <_vfprintf_r+0xc64>
1a004664:	9e02      	ldr	r6, [sp, #8]
1a004666:	9b08      	ldr	r3, [sp, #32]
1a004668:	f416 7f00 	tst.w	r6, #512	; 0x200
1a00466c:	d051      	beq.n	1a004712 <_vfprintf_r+0x13b2>
1a00466e:	f993 4000 	ldrsb.w	r4, [r3]
1a004672:	9208      	str	r2, [sp, #32]
1a004674:	17e5      	asrs	r5, r4, #31
1a004676:	4622      	mov	r2, r4
1a004678:	462b      	mov	r3, r5
1a00467a:	f7fe bffb 	b.w	1a003674 <_vfprintf_r+0x314>
1a00467e:	9e02      	ldr	r6, [sp, #8]
1a004680:	05b7      	lsls	r7, r6, #22
1a004682:	bf47      	ittee	mi
1a004684:	9208      	strmi	r2, [sp, #32]
1a004686:	b2e4      	uxtbmi	r4, r4
1a004688:	9e02      	ldrpl	r6, [sp, #8]
1a00468a:	9208      	strpl	r2, [sp, #32]
1a00468c:	2500      	movs	r5, #0
1a00468e:	f7ff baae 	b.w	1a003bee <_vfprintf_r+0x88e>
1a004692:	9e02      	ldr	r6, [sp, #8]
1a004694:	9208      	str	r2, [sp, #32]
1a004696:	4633      	mov	r3, r6
1a004698:	059b      	lsls	r3, r3, #22
1a00469a:	bf4c      	ite	mi
1a00469c:	b2e4      	uxtbmi	r4, r4
1a00469e:	9e02      	ldrpl	r6, [sp, #8]
1a0046a0:	2500      	movs	r5, #0
1a0046a2:	2301      	movs	r3, #1
1a0046a4:	f7ff b987 	b.w	1a0039b6 <_vfprintf_r+0x656>
1a0046a8:	4621      	mov	r1, r4
1a0046aa:	461c      	mov	r4, r3
1a0046ac:	460b      	mov	r3, r1
1a0046ae:	3201      	adds	r2, #1
1a0046b0:	442c      	add	r4, r5
1a0046b2:	2a07      	cmp	r2, #7
1a0046b4:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a0046b8:	e9cb 3500 	strd	r3, r5, [fp]
1a0046bc:	f300 80ef 	bgt.w	1a00489e <_vfprintf_r+0x153e>
1a0046c0:	f10b 0b08 	add.w	fp, fp, #8
1a0046c4:	e50e      	b.n	1a0040e4 <_vfprintf_r+0xd84>
1a0046c6:	9805      	ldr	r0, [sp, #20]
1a0046c8:	aa28      	add	r2, sp, #160	; 0xa0
1a0046ca:	4649      	mov	r1, r9
1a0046cc:	f002 fc84 	bl	1a006fd8 <__sprint_r>
1a0046d0:	2800      	cmp	r0, #0
1a0046d2:	f43f a903 	beq.w	1a0038dc <_vfprintf_r+0x57c>
1a0046d6:	e47a      	b.n	1a003fce <_vfprintf_r+0xc6e>
1a0046d8:	66666667 	.word	0x66666667
1a0046dc:	1a0076b4 	.word	0x1a0076b4
1a0046e0:	1a0076d0 	.word	0x1a0076d0
1a0046e4:	3301      	adds	r3, #1
1a0046e6:	930a      	str	r3, [sp, #40]	; 0x28
1a0046e8:	f102 0b08 	add.w	fp, r2, #8
1a0046ec:	4616      	mov	r6, r2
1a0046ee:	e441      	b.n	1a003f74 <_vfprintf_r+0xc14>
1a0046f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a0046f2:	18bd      	adds	r5, r7, r2
1a0046f4:	eba5 0509 	sub.w	r5, r5, r9
1a0046f8:	1ad3      	subs	r3, r2, r3
1a0046fa:	429d      	cmp	r5, r3
1a0046fc:	bfa8      	it	ge
1a0046fe:	461d      	movge	r5, r3
1a004700:	e527      	b.n	1a004152 <_vfprintf_r+0xdf2>
1a004702:	9a08      	ldr	r2, [sp, #32]
1a004704:	9308      	str	r3, [sp, #32]
1a004706:	6812      	ldr	r2, [r2, #0]
1a004708:	9b04      	ldr	r3, [sp, #16]
1a00470a:	8013      	strh	r3, [r2, #0]
1a00470c:	4657      	mov	r7, sl
1a00470e:	f7ff b8db 	b.w	1a0038c8 <_vfprintf_r+0x568>
1a004712:	681c      	ldr	r4, [r3, #0]
1a004714:	9208      	str	r2, [sp, #32]
1a004716:	17e5      	asrs	r5, r4, #31
1a004718:	9e02      	ldr	r6, [sp, #8]
1a00471a:	4622      	mov	r2, r4
1a00471c:	462b      	mov	r3, r5
1a00471e:	f7fe bfa9 	b.w	1a003674 <_vfprintf_r+0x314>
1a004722:	b2e4      	uxtb	r4, r4
1a004724:	2500      	movs	r5, #0
1a004726:	f7fe bf59 	b.w	1a0035dc <_vfprintf_r+0x27c>
1a00472a:	2330      	movs	r3, #48	; 0x30
1a00472c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
1a004730:	2358      	movs	r3, #88	; 0x58
1a004732:	f88d 3085 	strb.w	r3, [sp, #133]	; 0x85
1a004736:	9b02      	ldr	r3, [sp, #8]
1a004738:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
1a00473c:	f043 0302 	orr.w	r3, r3, #2
1a004740:	930a      	str	r3, [sp, #40]	; 0x28
1a004742:	f300 82b7 	bgt.w	1a004cb4 <_vfprintf_r+0x1954>
1a004746:	2300      	movs	r3, #0
1a004748:	9309      	str	r3, [sp, #36]	; 0x24
1a00474a:	af3b      	add	r7, sp, #236	; 0xec
1a00474c:	9a02      	ldr	r2, [sp, #8]
1a00474e:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a004750:	f442 7281 	orr.w	r2, r2, #258	; 0x102
1a004754:	9202      	str	r2, [sp, #8]
1a004756:	2b00      	cmp	r3, #0
1a004758:	f028 0220 	bic.w	r2, r8, #32
1a00475c:	9203      	str	r2, [sp, #12]
1a00475e:	f2c0 8188 	blt.w	1a004a72 <_vfprintf_r+0x1712>
1a004762:	ed9d 7b10 	vldr	d7, [sp, #64]	; 0x40
1a004766:	ed8d 7b1c 	vstr	d7, [sp, #112]	; 0x70
1a00476a:	2300      	movs	r3, #0
1a00476c:	931e      	str	r3, [sp, #120]	; 0x78
1a00476e:	f1b8 0f61 	cmp.w	r8, #97	; 0x61
1a004772:	f000 82d9 	beq.w	1a004d28 <_vfprintf_r+0x19c8>
1a004776:	f1b8 0f41 	cmp.w	r8, #65	; 0x41
1a00477a:	f47f ade7 	bne.w	1a00434c <_vfprintf_r+0xfec>
1a00477e:	a822      	add	r0, sp, #136	; 0x88
1a004780:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a004784:	f002 fb7c 	bl	1a006e80 <frexp>
1a004788:	2200      	movs	r2, #0
1a00478a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
1a00478e:	ec51 0b10 	vmov	r0, r1, d0
1a004792:	f7fd fa0f 	bl	1a001bb4 <__aeabi_dmul>
1a004796:	2200      	movs	r2, #0
1a004798:	2300      	movs	r3, #0
1a00479a:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a00479e:	f7fd fc71 	bl	1a002084 <__aeabi_dcmpeq>
1a0047a2:	b108      	cbz	r0, 1a0047a8 <_vfprintf_r+0x1448>
1a0047a4:	2301      	movs	r3, #1
1a0047a6:	9322      	str	r3, [sp, #136]	; 0x88
1a0047a8:	4bb6      	ldr	r3, [pc, #728]	; (1a004a84 <_vfprintf_r+0x1724>)
1a0047aa:	930b      	str	r3, [sp, #44]	; 0x2c
1a0047ac:	e9cd 8a0e 	strd	r8, sl, [sp, #56]	; 0x38
1a0047b0:	f109 35ff 	add.w	r5, r9, #4294967295
1a0047b4:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
1a0047b8:	f8cd b07c 	str.w	fp, [sp, #124]	; 0x7c
1a0047bc:	e9dd 890c 	ldrd	r8, r9, [sp, #48]	; 0x30
1a0047c0:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
1a0047c4:	970c      	str	r7, [sp, #48]	; 0x30
1a0047c6:	46ba      	mov	sl, r7
1a0047c8:	e003      	b.n	1a0047d2 <_vfprintf_r+0x1472>
1a0047ca:	f7fd fc5b 	bl	1a002084 <__aeabi_dcmpeq>
1a0047ce:	bb20      	cbnz	r0, 1a00481a <_vfprintf_r+0x14ba>
1a0047d0:	46b2      	mov	sl, r6
1a0047d2:	2200      	movs	r2, #0
1a0047d4:	4bac      	ldr	r3, [pc, #688]	; (1a004a88 <_vfprintf_r+0x1728>)
1a0047d6:	4640      	mov	r0, r8
1a0047d8:	4649      	mov	r1, r9
1a0047da:	f7fd f9eb 	bl	1a001bb4 <__aeabi_dmul>
1a0047de:	4689      	mov	r9, r1
1a0047e0:	4680      	mov	r8, r0
1a0047e2:	f002 fd67 	bl	1a0072b4 <__aeabi_d2iz>
1a0047e6:	4607      	mov	r7, r0
1a0047e8:	f7fd f97a 	bl	1a001ae0 <__aeabi_i2d>
1a0047ec:	4602      	mov	r2, r0
1a0047ee:	460b      	mov	r3, r1
1a0047f0:	4640      	mov	r0, r8
1a0047f2:	4649      	mov	r1, r9
1a0047f4:	f7fd f826 	bl	1a001844 <__aeabi_dsub>
1a0047f8:	4656      	mov	r6, sl
1a0047fa:	f81b 4007 	ldrb.w	r4, [fp, r7]
1a0047fe:	f806 4b01 	strb.w	r4, [r6], #1
1a004802:	f1b5 3fff 	cmp.w	r5, #4294967295
1a004806:	462c      	mov	r4, r5
1a004808:	4680      	mov	r8, r0
1a00480a:	4689      	mov	r9, r1
1a00480c:	f04f 0200 	mov.w	r2, #0
1a004810:	f04f 0300 	mov.w	r3, #0
1a004814:	f105 35ff 	add.w	r5, r5, #4294967295
1a004818:	d1d7      	bne.n	1a0047ca <_vfprintf_r+0x146a>
1a00481a:	4640      	mov	r0, r8
1a00481c:	4649      	mov	r1, r9
1a00481e:	2200      	movs	r2, #0
1a004820:	4b9a      	ldr	r3, [pc, #616]	; (1a004a8c <_vfprintf_r+0x172c>)
1a004822:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
1a004826:	f8dd b07c 	ldr.w	fp, [sp, #124]	; 0x7c
1a00482a:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
1a00482e:	463d      	mov	r5, r7
1a004830:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
1a004834:	9f0c      	ldr	r7, [sp, #48]	; 0x30
1a004836:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
1a00483a:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a00483e:	f7fd fc49 	bl	1a0020d4 <__aeabi_dcmpgt>
1a004842:	2800      	cmp	r0, #0
1a004844:	f040 8214 	bne.w	1a004c70 <_vfprintf_r+0x1910>
1a004848:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
1a00484c:	2200      	movs	r2, #0
1a00484e:	4b8f      	ldr	r3, [pc, #572]	; (1a004a8c <_vfprintf_r+0x172c>)
1a004850:	f7fd fc18 	bl	1a002084 <__aeabi_dcmpeq>
1a004854:	b118      	cbz	r0, 1a00485e <_vfprintf_r+0x14fe>
1a004856:	462b      	mov	r3, r5
1a004858:	07db      	lsls	r3, r3, #31
1a00485a:	f100 8209 	bmi.w	1a004c70 <_vfprintf_r+0x1910>
1a00485e:	2c00      	cmp	r4, #0
1a004860:	f6ff ad91 	blt.w	1a004386 <_vfprintf_r+0x1026>
1a004864:	1c63      	adds	r3, r4, #1
1a004866:	4433      	add	r3, r6
1a004868:	2230      	movs	r2, #48	; 0x30
1a00486a:	f806 2b01 	strb.w	r2, [r6], #1
1a00486e:	429e      	cmp	r6, r3
1a004870:	d1fb      	bne.n	1a00486a <_vfprintf_r+0x150a>
1a004872:	e588      	b.n	1a004386 <_vfprintf_r+0x1026>
1a004874:	aa28      	add	r2, sp, #160	; 0xa0
1a004876:	9907      	ldr	r1, [sp, #28]
1a004878:	9805      	ldr	r0, [sp, #20]
1a00487a:	f002 fbad 	bl	1a006fd8 <__sprint_r>
1a00487e:	2800      	cmp	r0, #0
1a004880:	f47f ab06 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a004884:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a004886:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a00488a:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a00488e:	f7ff bb12 	b.w	1a003eb6 <_vfprintf_r+0xb56>
1a004892:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a004896:	f7fe f8e3 	bl	1a002a60 <__retarget_lock_release_recursive>
1a00489a:	f7fe be6a 	b.w	1a003572 <_vfprintf_r+0x212>
1a00489e:	aa28      	add	r2, sp, #160	; 0xa0
1a0048a0:	9907      	ldr	r1, [sp, #28]
1a0048a2:	9805      	ldr	r0, [sp, #20]
1a0048a4:	f002 fb98 	bl	1a006fd8 <__sprint_r>
1a0048a8:	2800      	cmp	r0, #0
1a0048aa:	f47f aaf1 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a0048ae:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0048b0:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a0048b4:	e416      	b.n	1a0040e4 <_vfprintf_r+0xd84>
1a0048b6:	9e02      	ldr	r6, [sp, #8]
1a0048b8:	f7ff b9ad 	b.w	1a003c16 <_vfprintf_r+0x8b6>
1a0048bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0048be:	1cde      	adds	r6, r3, #3
1a0048c0:	db01      	blt.n	1a0048c6 <_vfprintf_r+0x1566>
1a0048c2:	4599      	cmp	r9, r3
1a0048c4:	da05      	bge.n	1a0048d2 <_vfprintf_r+0x1572>
1a0048c6:	f1a8 0802 	sub.w	r8, r8, #2
1a0048ca:	f028 0320 	bic.w	r3, r8, #32
1a0048ce:	9303      	str	r3, [sp, #12]
1a0048d0:	e565      	b.n	1a00439e <_vfprintf_r+0x103e>
1a0048d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a0048d4:	4619      	mov	r1, r3
1a0048d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0048d8:	4299      	cmp	r1, r3
1a0048da:	f300 8174 	bgt.w	1a004bc6 <_vfprintf_r+0x1866>
1a0048de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1a0048e0:	07d4      	lsls	r4, r2, #31
1a0048e2:	f140 8254 	bpl.w	1a004d8e <_vfprintf_r+0x1a2e>
1a0048e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
1a0048e8:	189e      	adds	r6, r3, r2
1a0048ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a0048ec:	0558      	lsls	r0, r3, #21
1a0048ee:	d503      	bpl.n	1a0048f8 <_vfprintf_r+0x1598>
1a0048f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0048f2:	2b00      	cmp	r3, #0
1a0048f4:	f300 824d 	bgt.w	1a004d92 <_vfprintf_r+0x1a32>
1a0048f8:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a0048fc:	9303      	str	r3, [sp, #12]
1a0048fe:	f04f 0867 	mov.w	r8, #103	; 0x67
1a004902:	2300      	movs	r3, #0
1a004904:	930c      	str	r3, [sp, #48]	; 0x30
1a004906:	930f      	str	r3, [sp, #60]	; 0x3c
1a004908:	e5ac      	b.n	1a004464 <_vfprintf_r+0x1104>
1a00490a:	222d      	movs	r2, #45	; 0x2d
1a00490c:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
1a004910:	f04f 0900 	mov.w	r9, #0
1a004914:	f7fe befb 	b.w	1a00370e <_vfprintf_r+0x3ae>
1a004918:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a00491a:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
1a00491e:	18fb      	adds	r3, r7, r3
1a004920:	930a      	str	r3, [sp, #40]	; 0x28
1a004922:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a004924:	970e      	str	r7, [sp, #56]	; 0x38
1a004926:	465a      	mov	r2, fp
1a004928:	464f      	mov	r7, r9
1a00492a:	4e59      	ldr	r6, [pc, #356]	; (1a004a90 <_vfprintf_r+0x1730>)
1a00492c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
1a004930:	f8dd a014 	ldr.w	sl, [sp, #20]
1a004934:	f8dd b01c 	ldr.w	fp, [sp, #28]
1a004938:	f8dd 9064 	ldr.w	r9, [sp, #100]	; 0x64
1a00493c:	4621      	mov	r1, r4
1a00493e:	2b00      	cmp	r3, #0
1a004940:	d032      	beq.n	1a0049a8 <_vfprintf_r+0x1648>
1a004942:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a004944:	2b00      	cmp	r3, #0
1a004946:	d16e      	bne.n	1a004a26 <_vfprintf_r+0x16c6>
1a004948:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a00494a:	3b01      	subs	r3, #1
1a00494c:	f108 38ff 	add.w	r8, r8, #4294967295
1a004950:	930f      	str	r3, [sp, #60]	; 0x3c
1a004952:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a004954:	9817      	ldr	r0, [sp, #92]	; 0x5c
1a004956:	6010      	str	r0, [r2, #0]
1a004958:	3301      	adds	r3, #1
1a00495a:	4449      	add	r1, r9
1a00495c:	2b07      	cmp	r3, #7
1a00495e:	912a      	str	r1, [sp, #168]	; 0xa8
1a004960:	f8c2 9004 	str.w	r9, [r2, #4]
1a004964:	9329      	str	r3, [sp, #164]	; 0xa4
1a004966:	dc62      	bgt.n	1a004a2e <_vfprintf_r+0x16ce>
1a004968:	3208      	adds	r2, #8
1a00496a:	980a      	ldr	r0, [sp, #40]	; 0x28
1a00496c:	f898 3000 	ldrb.w	r3, [r8]
1a004970:	1bc5      	subs	r5, r0, r7
1a004972:	429d      	cmp	r5, r3
1a004974:	bfa8      	it	ge
1a004976:	461d      	movge	r5, r3
1a004978:	2d00      	cmp	r5, #0
1a00497a:	dd0b      	ble.n	1a004994 <_vfprintf_r+0x1634>
1a00497c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a00497e:	6017      	str	r7, [r2, #0]
1a004980:	3301      	adds	r3, #1
1a004982:	4429      	add	r1, r5
1a004984:	2b07      	cmp	r3, #7
1a004986:	912a      	str	r1, [sp, #168]	; 0xa8
1a004988:	6055      	str	r5, [r2, #4]
1a00498a:	9329      	str	r3, [sp, #164]	; 0xa4
1a00498c:	dc5a      	bgt.n	1a004a44 <_vfprintf_r+0x16e4>
1a00498e:	f898 3000 	ldrb.w	r3, [r8]
1a004992:	3208      	adds	r2, #8
1a004994:	2d00      	cmp	r5, #0
1a004996:	bfac      	ite	ge
1a004998:	1b5d      	subge	r5, r3, r5
1a00499a:	461d      	movlt	r5, r3
1a00499c:	2d00      	cmp	r5, #0
1a00499e:	dc15      	bgt.n	1a0049cc <_vfprintf_r+0x166c>
1a0049a0:	441f      	add	r7, r3
1a0049a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a0049a4:	2b00      	cmp	r3, #0
1a0049a6:	d1cc      	bne.n	1a004942 <_vfprintf_r+0x15e2>
1a0049a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a0049aa:	2b00      	cmp	r3, #0
1a0049ac:	d13b      	bne.n	1a004a26 <_vfprintf_r+0x16c6>
1a0049ae:	46b9      	mov	r9, r7
1a0049b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a0049b2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
1a0049b4:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
1a0049b8:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
1a0049bc:	18fb      	adds	r3, r7, r3
1a0049be:	4599      	cmp	r9, r3
1a0049c0:	4693      	mov	fp, r2
1a0049c2:	460c      	mov	r4, r1
1a0049c4:	bf28      	it	cs
1a0049c6:	4699      	movcs	r9, r3
1a0049c8:	f7ff bb93 	b.w	1a0040f2 <_vfprintf_r+0xd92>
1a0049cc:	2d10      	cmp	r5, #16
1a0049ce:	9829      	ldr	r0, [sp, #164]	; 0xa4
1a0049d0:	dd1c      	ble.n	1a004a0c <_vfprintf_r+0x16ac>
1a0049d2:	2410      	movs	r4, #16
1a0049d4:	e004      	b.n	1a0049e0 <_vfprintf_r+0x1680>
1a0049d6:	3d10      	subs	r5, #16
1a0049d8:	2d10      	cmp	r5, #16
1a0049da:	f102 0208 	add.w	r2, r2, #8
1a0049de:	dd15      	ble.n	1a004a0c <_vfprintf_r+0x16ac>
1a0049e0:	3001      	adds	r0, #1
1a0049e2:	3110      	adds	r1, #16
1a0049e4:	2807      	cmp	r0, #7
1a0049e6:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
1a0049ea:	e9c2 6400 	strd	r6, r4, [r2]
1a0049ee:	ddf2      	ble.n	1a0049d6 <_vfprintf_r+0x1676>
1a0049f0:	aa28      	add	r2, sp, #160	; 0xa0
1a0049f2:	4659      	mov	r1, fp
1a0049f4:	4650      	mov	r0, sl
1a0049f6:	f002 faef 	bl	1a006fd8 <__sprint_r>
1a0049fa:	2800      	cmp	r0, #0
1a0049fc:	f47f ae30 	bne.w	1a004660 <_vfprintf_r+0x1300>
1a004a00:	3d10      	subs	r5, #16
1a004a02:	2d10      	cmp	r5, #16
1a004a04:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
1a004a08:	aa2b      	add	r2, sp, #172	; 0xac
1a004a0a:	dce9      	bgt.n	1a0049e0 <_vfprintf_r+0x1680>
1a004a0c:	3001      	adds	r0, #1
1a004a0e:	4429      	add	r1, r5
1a004a10:	2807      	cmp	r0, #7
1a004a12:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
1a004a16:	e9c2 6500 	strd	r6, r5, [r2]
1a004a1a:	dc49      	bgt.n	1a004ab0 <_vfprintf_r+0x1750>
1a004a1c:	f898 3000 	ldrb.w	r3, [r8]
1a004a20:	3208      	adds	r2, #8
1a004a22:	441f      	add	r7, r3
1a004a24:	e7bd      	b.n	1a0049a2 <_vfprintf_r+0x1642>
1a004a26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a004a28:	3b01      	subs	r3, #1
1a004a2a:	930c      	str	r3, [sp, #48]	; 0x30
1a004a2c:	e791      	b.n	1a004952 <_vfprintf_r+0x15f2>
1a004a2e:	aa28      	add	r2, sp, #160	; 0xa0
1a004a30:	4659      	mov	r1, fp
1a004a32:	4650      	mov	r0, sl
1a004a34:	f002 fad0 	bl	1a006fd8 <__sprint_r>
1a004a38:	2800      	cmp	r0, #0
1a004a3a:	f47f ae11 	bne.w	1a004660 <_vfprintf_r+0x1300>
1a004a3e:	992a      	ldr	r1, [sp, #168]	; 0xa8
1a004a40:	aa2b      	add	r2, sp, #172	; 0xac
1a004a42:	e792      	b.n	1a00496a <_vfprintf_r+0x160a>
1a004a44:	aa28      	add	r2, sp, #160	; 0xa0
1a004a46:	4659      	mov	r1, fp
1a004a48:	4650      	mov	r0, sl
1a004a4a:	f002 fac5 	bl	1a006fd8 <__sprint_r>
1a004a4e:	2800      	cmp	r0, #0
1a004a50:	f47f ae06 	bne.w	1a004660 <_vfprintf_r+0x1300>
1a004a54:	f898 3000 	ldrb.w	r3, [r8]
1a004a58:	992a      	ldr	r1, [sp, #168]	; 0xa8
1a004a5a:	aa2b      	add	r2, sp, #172	; 0xac
1a004a5c:	e79a      	b.n	1a004994 <_vfprintf_r+0x1634>
1a004a5e:	222d      	movs	r2, #45	; 0x2d
1a004a60:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
1a004a64:	f7ff b87d 	b.w	1a003b62 <_vfprintf_r+0x802>
1a004a68:	9b02      	ldr	r3, [sp, #8]
1a004a6a:	930a      	str	r3, [sp, #40]	; 0x28
1a004a6c:	2300      	movs	r3, #0
1a004a6e:	9309      	str	r3, [sp, #36]	; 0x24
1a004a70:	9202      	str	r2, [sp, #8]
1a004a72:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
1a004a76:	f102 4300 	add.w	r3, r2, #2147483648	; 0x80000000
1a004a7a:	931d      	str	r3, [sp, #116]	; 0x74
1a004a7c:	232d      	movs	r3, #45	; 0x2d
1a004a7e:	911c      	str	r1, [sp, #112]	; 0x70
1a004a80:	931e      	str	r3, [sp, #120]	; 0x78
1a004a82:	e674      	b.n	1a00476e <_vfprintf_r+0x140e>
1a004a84:	1a00768c 	.word	0x1a00768c
1a004a88:	40300000 	.word	0x40300000
1a004a8c:	3fe00000 	.word	0x3fe00000
1a004a90:	1a0076d0 	.word	0x1a0076d0
1a004a94:	aa28      	add	r2, sp, #160	; 0xa0
1a004a96:	9907      	ldr	r1, [sp, #28]
1a004a98:	9805      	ldr	r0, [sp, #20]
1a004a9a:	f002 fa9d 	bl	1a006fd8 <__sprint_r>
1a004a9e:	2800      	cmp	r0, #0
1a004aa0:	f47f a9f6 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a004aa4:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a004aa6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004aa8:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a004aac:	f7ff bbeb 	b.w	1a004286 <_vfprintf_r+0xf26>
1a004ab0:	aa28      	add	r2, sp, #160	; 0xa0
1a004ab2:	4659      	mov	r1, fp
1a004ab4:	4650      	mov	r0, sl
1a004ab6:	f002 fa8f 	bl	1a006fd8 <__sprint_r>
1a004aba:	2800      	cmp	r0, #0
1a004abc:	f47f add0 	bne.w	1a004660 <_vfprintf_r+0x1300>
1a004ac0:	f898 3000 	ldrb.w	r3, [r8]
1a004ac4:	992a      	ldr	r1, [sp, #168]	; 0xa8
1a004ac6:	aa2b      	add	r2, sp, #172	; 0xac
1a004ac8:	441f      	add	r7, r3
1a004aca:	e76a      	b.n	1a0049a2 <_vfprintf_r+0x1642>
1a004acc:	aa28      	add	r2, sp, #160	; 0xa0
1a004ace:	9907      	ldr	r1, [sp, #28]
1a004ad0:	9805      	ldr	r0, [sp, #20]
1a004ad2:	f002 fa81 	bl	1a006fd8 <__sprint_r>
1a004ad6:	2800      	cmp	r0, #0
1a004ad8:	f47f a9da 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a004adc:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004ade:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a004ae2:	f7ff baf7 	b.w	1a0040d4 <_vfprintf_r+0xd74>
1a004ae6:	9b19      	ldr	r3, [sp, #100]	; 0x64
1a004ae8:	9917      	ldr	r1, [sp, #92]	; 0x5c
1a004aea:	1aff      	subs	r7, r7, r3
1a004aec:	461a      	mov	r2, r3
1a004aee:	4638      	mov	r0, r7
1a004af0:	f002 f9fc 	bl	1a006eec <strncpy>
1a004af4:	f898 3001 	ldrb.w	r3, [r8, #1]
1a004af8:	b10b      	cbz	r3, 1a004afe <_vfprintf_r+0x179e>
1a004afa:	f108 0801 	add.w	r8, r8, #1
1a004afe:	220a      	movs	r2, #10
1a004b00:	2300      	movs	r3, #0
1a004b02:	4620      	mov	r0, r4
1a004b04:	4629      	mov	r1, r5
1a004b06:	f04f 0a00 	mov.w	sl, #0
1a004b0a:	f7fd faed 	bl	1a0020e8 <__aeabi_uldivmod>
1a004b0e:	f7ff b8ab 	b.w	1a003c68 <_vfprintf_r+0x908>
1a004b12:	aa26      	add	r2, sp, #152	; 0x98
1a004b14:	ab23      	add	r3, sp, #140	; 0x8c
1a004b16:	e9cd 3200 	strd	r3, r2, [sp]
1a004b1a:	2103      	movs	r1, #3
1a004b1c:	ab22      	add	r3, sp, #136	; 0x88
1a004b1e:	464a      	mov	r2, r9
1a004b20:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a004b24:	9805      	ldr	r0, [sp, #20]
1a004b26:	f000 fb03 	bl	1a005130 <_dtoa_r>
1a004b2a:	7803      	ldrb	r3, [r0, #0]
1a004b2c:	2b30      	cmp	r3, #48	; 0x30
1a004b2e:	4607      	mov	r7, r0
1a004b30:	f000 8161 	beq.w	1a004df6 <_vfprintf_r+0x1a96>
1a004b34:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a004b36:	444b      	add	r3, r9
1a004b38:	18fc      	adds	r4, r7, r3
1a004b3a:	2200      	movs	r2, #0
1a004b3c:	2300      	movs	r3, #0
1a004b3e:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
1a004b42:	f7fd fa9f 	bl	1a002084 <__aeabi_dcmpeq>
1a004b46:	b108      	cbz	r0, 1a004b4c <_vfprintf_r+0x17ec>
1a004b48:	4626      	mov	r6, r4
1a004b4a:	e41c      	b.n	1a004386 <_vfprintf_r+0x1026>
1a004b4c:	9e26      	ldr	r6, [sp, #152]	; 0x98
1a004b4e:	42a6      	cmp	r6, r4
1a004b50:	f4bf ac19 	bcs.w	1a004386 <_vfprintf_r+0x1026>
1a004b54:	2230      	movs	r2, #48	; 0x30
1a004b56:	1c73      	adds	r3, r6, #1
1a004b58:	9326      	str	r3, [sp, #152]	; 0x98
1a004b5a:	7032      	strb	r2, [r6, #0]
1a004b5c:	9e26      	ldr	r6, [sp, #152]	; 0x98
1a004b5e:	42b4      	cmp	r4, r6
1a004b60:	d8f9      	bhi.n	1a004b56 <_vfprintf_r+0x17f6>
1a004b62:	e410      	b.n	1a004386 <_vfprintf_r+0x1026>
1a004b64:	aa28      	add	r2, sp, #160	; 0xa0
1a004b66:	9907      	ldr	r1, [sp, #28]
1a004b68:	9805      	ldr	r0, [sp, #20]
1a004b6a:	f002 fa35 	bl	1a006fd8 <__sprint_r>
1a004b6e:	2800      	cmp	r0, #0
1a004b70:	f47f a98e 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a004b74:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a004b76:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004b78:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a004b7c:	f7ff bad1 	b.w	1a004122 <_vfprintf_r+0xdc2>
1a004b80:	464e      	mov	r6, r9
1a004b82:	f8cd 900c 	str.w	r9, [sp, #12]
1a004b86:	9408      	str	r4, [sp, #32]
1a004b88:	4681      	mov	r9, r0
1a004b8a:	900c      	str	r0, [sp, #48]	; 0x30
1a004b8c:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
1a004b90:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a004b94:	f7fe bdb9 	b.w	1a00370a <_vfprintf_r+0x3aa>
1a004b98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004b9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1a004b9c:	f003 0301 	and.w	r3, r3, #1
1a004ba0:	2a00      	cmp	r2, #0
1a004ba2:	ea43 0309 	orr.w	r3, r3, r9
1a004ba6:	f340 8142 	ble.w	1a004e2e <_vfprintf_r+0x1ace>
1a004baa:	2b00      	cmp	r3, #0
1a004bac:	f040 8119 	bne.w	1a004de2 <_vfprintf_r+0x1a82>
1a004bb0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
1a004bb2:	f04f 0866 	mov.w	r8, #102	; 0x66
1a004bb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004bb8:	055a      	lsls	r2, r3, #21
1a004bba:	f100 80ec 	bmi.w	1a004d96 <_vfprintf_r+0x1a36>
1a004bbe:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a004bc2:	9303      	str	r3, [sp, #12]
1a004bc4:	e69d      	b.n	1a004902 <_vfprintf_r+0x15a2>
1a004bc6:	e9dd 3212 	ldrd	r3, r2, [sp, #72]	; 0x48
1a004bca:	189e      	adds	r6, r3, r2
1a004bcc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a004bce:	2b00      	cmp	r3, #0
1a004bd0:	f340 811e 	ble.w	1a004e10 <_vfprintf_r+0x1ab0>
1a004bd4:	f04f 0867 	mov.w	r8, #103	; 0x67
1a004bd8:	e7ed      	b.n	1a004bb6 <_vfprintf_r+0x1856>
1a004bda:	aa28      	add	r2, sp, #160	; 0xa0
1a004bdc:	9907      	ldr	r1, [sp, #28]
1a004bde:	9805      	ldr	r0, [sp, #20]
1a004be0:	f002 f9fa 	bl	1a006fd8 <__sprint_r>
1a004be4:	2800      	cmp	r0, #0
1a004be6:	f47f a953 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a004bea:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a004bec:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a004bee:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004bf0:	1ad3      	subs	r3, r2, r3
1a004bf2:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a004bf6:	f7ff baac 	b.w	1a004152 <_vfprintf_r+0xdf2>
1a004bfa:	eb07 0409 	add.w	r4, r7, r9
1a004bfe:	e79c      	b.n	1a004b3a <_vfprintf_r+0x17da>
1a004c00:	425d      	negs	r5, r3
1a004c02:	3310      	adds	r3, #16
1a004c04:	4ba7      	ldr	r3, [pc, #668]	; (1a004ea4 <_vfprintf_r+0x1b44>)
1a004c06:	da63      	bge.n	1a004cd0 <_vfprintf_r+0x1970>
1a004c08:	4619      	mov	r1, r3
1a004c0a:	2610      	movs	r6, #16
1a004c0c:	4623      	mov	r3, r4
1a004c0e:	f8dd 8014 	ldr.w	r8, [sp, #20]
1a004c12:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a004c16:	460c      	mov	r4, r1
1a004c18:	e004      	b.n	1a004c24 <_vfprintf_r+0x18c4>
1a004c1a:	f10b 0b08 	add.w	fp, fp, #8
1a004c1e:	3d10      	subs	r5, #16
1a004c20:	2d10      	cmp	r5, #16
1a004c22:	dd52      	ble.n	1a004cca <_vfprintf_r+0x196a>
1a004c24:	3201      	adds	r2, #1
1a004c26:	3310      	adds	r3, #16
1a004c28:	2a07      	cmp	r2, #7
1a004c2a:	e9cd 2329 	strd	r2, r3, [sp, #164]	; 0xa4
1a004c2e:	e9cb 4600 	strd	r4, r6, [fp]
1a004c32:	ddf2      	ble.n	1a004c1a <_vfprintf_r+0x18ba>
1a004c34:	aa28      	add	r2, sp, #160	; 0xa0
1a004c36:	4649      	mov	r1, r9
1a004c38:	4640      	mov	r0, r8
1a004c3a:	f002 f9cd 	bl	1a006fd8 <__sprint_r>
1a004c3e:	2800      	cmp	r0, #0
1a004c40:	f47f a9c0 	bne.w	1a003fc4 <_vfprintf_r+0xc64>
1a004c44:	e9dd 2329 	ldrd	r2, r3, [sp, #164]	; 0xa4
1a004c48:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a004c4c:	e7e7      	b.n	1a004c1e <_vfprintf_r+0x18be>
1a004c4e:	f8d9 3064 	ldr.w	r3, [r9, #100]	; 0x64
1a004c52:	07db      	lsls	r3, r3, #31
1a004c54:	d407      	bmi.n	1a004c66 <_vfprintf_r+0x1906>
1a004c56:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a004c5a:	059f      	lsls	r7, r3, #22
1a004c5c:	d403      	bmi.n	1a004c66 <_vfprintf_r+0x1906>
1a004c5e:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
1a004c62:	f7fd fefd 	bl	1a002a60 <__retarget_lock_release_recursive>
1a004c66:	f04f 33ff 	mov.w	r3, #4294967295
1a004c6a:	9304      	str	r3, [sp, #16]
1a004c6c:	f7ff b9bb 	b.w	1a003fe6 <_vfprintf_r+0xc86>
1a004c70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a004c72:	9326      	str	r3, [sp, #152]	; 0x98
1a004c74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a004c76:	f816 2c01 	ldrb.w	r2, [r6, #-1]
1a004c7a:	7bd9      	ldrb	r1, [r3, #15]
1a004c7c:	428a      	cmp	r2, r1
1a004c7e:	4633      	mov	r3, r6
1a004c80:	d109      	bne.n	1a004c96 <_vfprintf_r+0x1936>
1a004c82:	2030      	movs	r0, #48	; 0x30
1a004c84:	f803 0c01 	strb.w	r0, [r3, #-1]
1a004c88:	9b26      	ldr	r3, [sp, #152]	; 0x98
1a004c8a:	1e5a      	subs	r2, r3, #1
1a004c8c:	9226      	str	r2, [sp, #152]	; 0x98
1a004c8e:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1a004c92:	4291      	cmp	r1, r2
1a004c94:	d0f6      	beq.n	1a004c84 <_vfprintf_r+0x1924>
1a004c96:	2a39      	cmp	r2, #57	; 0x39
1a004c98:	bf0b      	itete	eq
1a004c9a:	9a0b      	ldreq	r2, [sp, #44]	; 0x2c
1a004c9c:	3201      	addne	r2, #1
1a004c9e:	7a92      	ldrbeq	r2, [r2, #10]
1a004ca0:	b2d2      	uxtbne	r2, r2
1a004ca2:	f803 2c01 	strb.w	r2, [r3, #-1]
1a004ca6:	f7ff bb6e 	b.w	1a004386 <_vfprintf_r+0x1026>
1a004caa:	2330      	movs	r3, #48	; 0x30
1a004cac:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
1a004cb0:	2378      	movs	r3, #120	; 0x78
1a004cb2:	e53e      	b.n	1a004732 <_vfprintf_r+0x13d2>
1a004cb4:	f109 0101 	add.w	r1, r9, #1
1a004cb8:	9805      	ldr	r0, [sp, #20]
1a004cba:	f7fd fed3 	bl	1a002a64 <_malloc_r>
1a004cbe:	4607      	mov	r7, r0
1a004cc0:	2800      	cmp	r0, #0
1a004cc2:	f000 80d5 	beq.w	1a004e70 <_vfprintf_r+0x1b10>
1a004cc6:	9009      	str	r0, [sp, #36]	; 0x24
1a004cc8:	e540      	b.n	1a00474c <_vfprintf_r+0x13ec>
1a004cca:	4621      	mov	r1, r4
1a004ccc:	461c      	mov	r4, r3
1a004cce:	460b      	mov	r3, r1
1a004cd0:	3201      	adds	r2, #1
1a004cd2:	442c      	add	r4, r5
1a004cd4:	2a07      	cmp	r2, #7
1a004cd6:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a004cda:	e9cb 3500 	strd	r3, r5, [fp]
1a004cde:	f77f aaea 	ble.w	1a0042b6 <_vfprintf_r+0xf56>
1a004ce2:	aa28      	add	r2, sp, #160	; 0xa0
1a004ce4:	9907      	ldr	r1, [sp, #28]
1a004ce6:	9805      	ldr	r0, [sp, #20]
1a004ce8:	f002 f976 	bl	1a006fd8 <__sprint_r>
1a004cec:	2800      	cmp	r0, #0
1a004cee:	f47f a8cf 	bne.w	1a003e90 <_vfprintf_r+0xb30>
1a004cf2:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a004cf6:	f10d 0bac 	add.w	fp, sp, #172	; 0xac
1a004cfa:	f7ff b8df 	b.w	1a003ebc <_vfprintf_r+0xb5c>
1a004cfe:	f109 0401 	add.w	r4, r9, #1
1a004d02:	a926      	add	r1, sp, #152	; 0x98
1a004d04:	ab23      	add	r3, sp, #140	; 0x8c
1a004d06:	e9cd 3100 	strd	r3, r1, [sp]
1a004d0a:	4622      	mov	r2, r4
1a004d0c:	ab22      	add	r3, sp, #136	; 0x88
1a004d0e:	2102      	movs	r1, #2
1a004d10:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a004d14:	9805      	ldr	r0, [sp, #20]
1a004d16:	f000 fa0b 	bl	1a005130 <_dtoa_r>
1a004d1a:	4607      	mov	r7, r0
1a004d1c:	443c      	add	r4, r7
1a004d1e:	e70c      	b.n	1a004b3a <_vfprintf_r+0x17da>
1a004d20:	f04f 0906 	mov.w	r9, #6
1a004d24:	f7ff bb03 	b.w	1a00432e <_vfprintf_r+0xfce>
1a004d28:	a822      	add	r0, sp, #136	; 0x88
1a004d2a:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a004d2e:	f002 f8a7 	bl	1a006e80 <frexp>
1a004d32:	2200      	movs	r2, #0
1a004d34:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
1a004d38:	ec51 0b10 	vmov	r0, r1, d0
1a004d3c:	f7fc ff3a 	bl	1a001bb4 <__aeabi_dmul>
1a004d40:	2200      	movs	r2, #0
1a004d42:	2300      	movs	r3, #0
1a004d44:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a004d48:	f7fd f99c 	bl	1a002084 <__aeabi_dcmpeq>
1a004d4c:	b108      	cbz	r0, 1a004d52 <_vfprintf_r+0x19f2>
1a004d4e:	2301      	movs	r3, #1
1a004d50:	9322      	str	r3, [sp, #136]	; 0x88
1a004d52:	4b55      	ldr	r3, [pc, #340]	; (1a004ea8 <_vfprintf_r+0x1b48>)
1a004d54:	930b      	str	r3, [sp, #44]	; 0x2c
1a004d56:	e529      	b.n	1a0047ac <_vfprintf_r+0x144c>
1a004d58:	2900      	cmp	r1, #0
1a004d5a:	d17b      	bne.n	1a004e54 <_vfprintf_r+0x1af4>
1a004d5c:	2330      	movs	r3, #48	; 0x30
1a004d5e:	f88d 3092 	strb.w	r3, [sp, #146]	; 0x92
1a004d62:	f10d 0393 	add.w	r3, sp, #147	; 0x93
1a004d66:	3230      	adds	r2, #48	; 0x30
1a004d68:	f803 2b01 	strb.w	r2, [r3], #1
1a004d6c:	aa24      	add	r2, sp, #144	; 0x90
1a004d6e:	1a9b      	subs	r3, r3, r2
1a004d70:	9316      	str	r3, [sp, #88]	; 0x58
1a004d72:	f7ff bb61 	b.w	1a004438 <_vfprintf_r+0x10d8>
1a004d76:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a004d78:	4f4c      	ldr	r7, [pc, #304]	; (1a004eac <_vfprintf_r+0x1b4c>)
1a004d7a:	2b00      	cmp	r3, #0
1a004d7c:	bfb6      	itet	lt
1a004d7e:	222d      	movlt	r2, #45	; 0x2d
1a004d80:	f89d 2083 	ldrbge.w	r2, [sp, #131]	; 0x83
1a004d84:	f88d 2083 	strblt.w	r2, [sp, #131]	; 0x83
1a004d88:	4b49      	ldr	r3, [pc, #292]	; (1a004eb0 <_vfprintf_r+0x1b50>)
1a004d8a:	f7fe beec 	b.w	1a003b66 <_vfprintf_r+0x806>
1a004d8e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
1a004d90:	e5ab      	b.n	1a0048ea <_vfprintf_r+0x158a>
1a004d92:	f04f 0867 	mov.w	r8, #103	; 0x67
1a004d96:	9818      	ldr	r0, [sp, #96]	; 0x60
1a004d98:	2200      	movs	r2, #0
1a004d9a:	920c      	str	r2, [sp, #48]	; 0x30
1a004d9c:	920f      	str	r2, [sp, #60]	; 0x3c
1a004d9e:	7803      	ldrb	r3, [r0, #0]
1a004da0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1a004da2:	2bff      	cmp	r3, #255	; 0xff
1a004da4:	d00c      	beq.n	1a004dc0 <_vfprintf_r+0x1a60>
1a004da6:	4293      	cmp	r3, r2
1a004da8:	da0a      	bge.n	1a004dc0 <_vfprintf_r+0x1a60>
1a004daa:	7841      	ldrb	r1, [r0, #1]
1a004dac:	1ad2      	subs	r2, r2, r3
1a004dae:	b1a1      	cbz	r1, 1a004dda <_vfprintf_r+0x1a7a>
1a004db0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a004db2:	3301      	adds	r3, #1
1a004db4:	930f      	str	r3, [sp, #60]	; 0x3c
1a004db6:	460b      	mov	r3, r1
1a004db8:	2bff      	cmp	r3, #255	; 0xff
1a004dba:	f100 0001 	add.w	r0, r0, #1
1a004dbe:	d1f2      	bne.n	1a004da6 <_vfprintf_r+0x1a46>
1a004dc0:	920e      	str	r2, [sp, #56]	; 0x38
1a004dc2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a004dc4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1a004dc6:	9018      	str	r0, [sp, #96]	; 0x60
1a004dc8:	4413      	add	r3, r2
1a004dca:	9a19      	ldr	r2, [sp, #100]	; 0x64
1a004dcc:	fb02 6603 	mla	r6, r2, r3, r6
1a004dd0:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a004dd4:	9303      	str	r3, [sp, #12]
1a004dd6:	f7ff bb45 	b.w	1a004464 <_vfprintf_r+0x1104>
1a004dda:	990c      	ldr	r1, [sp, #48]	; 0x30
1a004ddc:	3101      	adds	r1, #1
1a004dde:	910c      	str	r1, [sp, #48]	; 0x30
1a004de0:	e7df      	b.n	1a004da2 <_vfprintf_r+0x1a42>
1a004de2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a004de4:	18d6      	adds	r6, r2, r3
1a004de6:	444e      	add	r6, r9
1a004de8:	f04f 0866 	mov.w	r8, #102	; 0x66
1a004dec:	e6e3      	b.n	1a004bb6 <_vfprintf_r+0x1856>
1a004dee:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a004df2:	f7ff b8ec 	b.w	1a003fce <_vfprintf_r+0xc6e>
1a004df6:	2200      	movs	r2, #0
1a004df8:	2300      	movs	r3, #0
1a004dfa:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
1a004dfe:	f7fd f941 	bl	1a002084 <__aeabi_dcmpeq>
1a004e02:	2800      	cmp	r0, #0
1a004e04:	f47f ae96 	bne.w	1a004b34 <_vfprintf_r+0x17d4>
1a004e08:	f1c9 0301 	rsb	r3, r9, #1
1a004e0c:	9322      	str	r3, [sp, #136]	; 0x88
1a004e0e:	e692      	b.n	1a004b36 <_vfprintf_r+0x17d6>
1a004e10:	f1c3 0301 	rsb	r3, r3, #1
1a004e14:	441e      	add	r6, r3
1a004e16:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a004e1a:	9303      	str	r3, [sp, #12]
1a004e1c:	f04f 0867 	mov.w	r8, #103	; 0x67
1a004e20:	e56f      	b.n	1a004902 <_vfprintf_r+0x15a2>
1a004e22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004e24:	07dd      	lsls	r5, r3, #31
1a004e26:	f57f ab10 	bpl.w	1a00444a <_vfprintf_r+0x10ea>
1a004e2a:	f7ff bb0c 	b.w	1a004446 <_vfprintf_r+0x10e6>
1a004e2e:	b92b      	cbnz	r3, 1a004e3c <_vfprintf_r+0x1adc>
1a004e30:	2301      	movs	r3, #1
1a004e32:	9303      	str	r3, [sp, #12]
1a004e34:	461e      	mov	r6, r3
1a004e36:	f04f 0866 	mov.w	r8, #102	; 0x66
1a004e3a:	e562      	b.n	1a004902 <_vfprintf_r+0x15a2>
1a004e3c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a004e3e:	1c5e      	adds	r6, r3, #1
1a004e40:	444e      	add	r6, r9
1a004e42:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
1a004e46:	9303      	str	r3, [sp, #12]
1a004e48:	f04f 0866 	mov.w	r8, #102	; 0x66
1a004e4c:	e559      	b.n	1a004902 <_vfprintf_r+0x15a2>
1a004e4e:	465a      	mov	r2, fp
1a004e50:	f7ff bb3f 	b.w	1a0044d2 <_vfprintf_r+0x1172>
1a004e54:	f10d 0392 	add.w	r3, sp, #146	; 0x92
1a004e58:	e785      	b.n	1a004d66 <_vfprintf_r+0x1a06>
1a004e5a:	9b08      	ldr	r3, [sp, #32]
1a004e5c:	f89a 8001 	ldrb.w	r8, [sl, #1]
1a004e60:	f853 0b04 	ldr.w	r0, [r3], #4
1a004e64:	9308      	str	r3, [sp, #32]
1a004e66:	4692      	mov	sl, r2
1a004e68:	ea40 79e0 	orr.w	r9, r0, r0, asr #31
1a004e6c:	f7fe bafc 	b.w	1a003468 <_vfprintf_r+0x108>
1a004e70:	f8dd 901c 	ldr.w	r9, [sp, #28]
1a004e74:	f8b9 300c 	ldrh.w	r3, [r9, #12]
1a004e78:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a004e7c:	f8a9 300c 	strh.w	r3, [r9, #12]
1a004e80:	f7ff b8a5 	b.w	1a003fce <_vfprintf_r+0xc6e>
1a004e84:	461e      	mov	r6, r3
1a004e86:	f7fe bc15 	b.w	1a0036b4 <_vfprintf_r+0x354>
1a004e8a:	461e      	mov	r6, r3
1a004e8c:	f7fe bc5e 	b.w	1a00374c <_vfprintf_r+0x3ec>
1a004e90:	461e      	mov	r6, r3
1a004e92:	f7fe bc48 	b.w	1a003726 <_vfprintf_r+0x3c6>
1a004e96:	464c      	mov	r4, r9
1a004e98:	443c      	add	r4, r7
1a004e9a:	e64e      	b.n	1a004b3a <_vfprintf_r+0x17da>
1a004e9c:	2302      	movs	r3, #2
1a004e9e:	9316      	str	r3, [sp, #88]	; 0x58
1a004ea0:	f7ff baca 	b.w	1a004438 <_vfprintf_r+0x10d8>
1a004ea4:	1a0076d0 	.word	0x1a0076d0
1a004ea8:	1a0076a0 	.word	0x1a0076a0
1a004eac:	1a007684 	.word	0x1a007684
1a004eb0:	1a007688 	.word	0x1a007688

1a004eb4 <__sbprintf>:
1a004eb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a004eb8:	460c      	mov	r4, r1
1a004eba:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
1a004ebe:	8989      	ldrh	r1, [r1, #12]
1a004ec0:	6e66      	ldr	r6, [r4, #100]	; 0x64
1a004ec2:	89e5      	ldrh	r5, [r4, #14]
1a004ec4:	9619      	str	r6, [sp, #100]	; 0x64
1a004ec6:	f021 0102 	bic.w	r1, r1, #2
1a004eca:	4606      	mov	r6, r0
1a004ecc:	69e0      	ldr	r0, [r4, #28]
1a004ece:	f8ad 100c 	strh.w	r1, [sp, #12]
1a004ed2:	4617      	mov	r7, r2
1a004ed4:	f44f 6180 	mov.w	r1, #1024	; 0x400
1a004ed8:	6a62      	ldr	r2, [r4, #36]	; 0x24
1a004eda:	f8ad 500e 	strh.w	r5, [sp, #14]
1a004ede:	4698      	mov	r8, r3
1a004ee0:	ad1a      	add	r5, sp, #104	; 0x68
1a004ee2:	2300      	movs	r3, #0
1a004ee4:	9007      	str	r0, [sp, #28]
1a004ee6:	a816      	add	r0, sp, #88	; 0x58
1a004ee8:	9209      	str	r2, [sp, #36]	; 0x24
1a004eea:	9306      	str	r3, [sp, #24]
1a004eec:	9500      	str	r5, [sp, #0]
1a004eee:	9504      	str	r5, [sp, #16]
1a004ef0:	9102      	str	r1, [sp, #8]
1a004ef2:	9105      	str	r1, [sp, #20]
1a004ef4:	f7fd fdae 	bl	1a002a54 <__retarget_lock_init_recursive>
1a004ef8:	4643      	mov	r3, r8
1a004efa:	463a      	mov	r2, r7
1a004efc:	4669      	mov	r1, sp
1a004efe:	4630      	mov	r0, r6
1a004f00:	f7fe fa2e 	bl	1a003360 <_vfprintf_r>
1a004f04:	1e05      	subs	r5, r0, #0
1a004f06:	db07      	blt.n	1a004f18 <__sbprintf+0x64>
1a004f08:	4630      	mov	r0, r6
1a004f0a:	4669      	mov	r1, sp
1a004f0c:	f7fd fb7c 	bl	1a002608 <_fflush_r>
1a004f10:	2800      	cmp	r0, #0
1a004f12:	bf18      	it	ne
1a004f14:	f04f 35ff 	movne.w	r5, #4294967295
1a004f18:	f8bd 300c 	ldrh.w	r3, [sp, #12]
1a004f1c:	065b      	lsls	r3, r3, #25
1a004f1e:	d503      	bpl.n	1a004f28 <__sbprintf+0x74>
1a004f20:	89a3      	ldrh	r3, [r4, #12]
1a004f22:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a004f26:	81a3      	strh	r3, [r4, #12]
1a004f28:	9816      	ldr	r0, [sp, #88]	; 0x58
1a004f2a:	f7fd fd95 	bl	1a002a58 <__retarget_lock_close_recursive>
1a004f2e:	4628      	mov	r0, r5
1a004f30:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
1a004f34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1a004f38 <__swsetup_r>:
1a004f38:	b538      	push	{r3, r4, r5, lr}
1a004f3a:	4b32      	ldr	r3, [pc, #200]	; (1a005004 <__swsetup_r+0xcc>)
1a004f3c:	681b      	ldr	r3, [r3, #0]
1a004f3e:	4605      	mov	r5, r0
1a004f40:	460c      	mov	r4, r1
1a004f42:	b10b      	cbz	r3, 1a004f48 <__swsetup_r+0x10>
1a004f44:	6b9a      	ldr	r2, [r3, #56]	; 0x38
1a004f46:	b312      	cbz	r2, 1a004f8e <__swsetup_r+0x56>
1a004f48:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a004f4c:	b293      	uxth	r3, r2
1a004f4e:	0718      	lsls	r0, r3, #28
1a004f50:	d525      	bpl.n	1a004f9e <__swsetup_r+0x66>
1a004f52:	6920      	ldr	r0, [r4, #16]
1a004f54:	2800      	cmp	r0, #0
1a004f56:	d02d      	beq.n	1a004fb4 <__swsetup_r+0x7c>
1a004f58:	f013 0201 	ands.w	r2, r3, #1
1a004f5c:	d007      	beq.n	1a004f6e <__swsetup_r+0x36>
1a004f5e:	6963      	ldr	r3, [r4, #20]
1a004f60:	2200      	movs	r2, #0
1a004f62:	425b      	negs	r3, r3
1a004f64:	61a3      	str	r3, [r4, #24]
1a004f66:	60a2      	str	r2, [r4, #8]
1a004f68:	b138      	cbz	r0, 1a004f7a <__swsetup_r+0x42>
1a004f6a:	2000      	movs	r0, #0
1a004f6c:	bd38      	pop	{r3, r4, r5, pc}
1a004f6e:	0799      	lsls	r1, r3, #30
1a004f70:	bf58      	it	pl
1a004f72:	6962      	ldrpl	r2, [r4, #20]
1a004f74:	60a2      	str	r2, [r4, #8]
1a004f76:	2800      	cmp	r0, #0
1a004f78:	d1f7      	bne.n	1a004f6a <__swsetup_r+0x32>
1a004f7a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a004f7e:	061a      	lsls	r2, r3, #24
1a004f80:	d5f4      	bpl.n	1a004f6c <__swsetup_r+0x34>
1a004f82:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a004f86:	81a3      	strh	r3, [r4, #12]
1a004f88:	f04f 30ff 	mov.w	r0, #4294967295
1a004f8c:	bd38      	pop	{r3, r4, r5, pc}
1a004f8e:	4618      	mov	r0, r3
1a004f90:	f7fd fb96 	bl	1a0026c0 <__sinit>
1a004f94:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a004f98:	b293      	uxth	r3, r2
1a004f9a:	0718      	lsls	r0, r3, #28
1a004f9c:	d4d9      	bmi.n	1a004f52 <__swsetup_r+0x1a>
1a004f9e:	06d9      	lsls	r1, r3, #27
1a004fa0:	d528      	bpl.n	1a004ff4 <__swsetup_r+0xbc>
1a004fa2:	0758      	lsls	r0, r3, #29
1a004fa4:	d412      	bmi.n	1a004fcc <__swsetup_r+0x94>
1a004fa6:	6920      	ldr	r0, [r4, #16]
1a004fa8:	f042 0308 	orr.w	r3, r2, #8
1a004fac:	81a3      	strh	r3, [r4, #12]
1a004fae:	b29b      	uxth	r3, r3
1a004fb0:	2800      	cmp	r0, #0
1a004fb2:	d1d1      	bne.n	1a004f58 <__swsetup_r+0x20>
1a004fb4:	f403 7220 	and.w	r2, r3, #640	; 0x280
1a004fb8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
1a004fbc:	d0cc      	beq.n	1a004f58 <__swsetup_r+0x20>
1a004fbe:	4628      	mov	r0, r5
1a004fc0:	4621      	mov	r1, r4
1a004fc2:	f001 f995 	bl	1a0062f0 <__smakebuf_r>
1a004fc6:	89a3      	ldrh	r3, [r4, #12]
1a004fc8:	6920      	ldr	r0, [r4, #16]
1a004fca:	e7c5      	b.n	1a004f58 <__swsetup_r+0x20>
1a004fcc:	6b21      	ldr	r1, [r4, #48]	; 0x30
1a004fce:	b151      	cbz	r1, 1a004fe6 <__swsetup_r+0xae>
1a004fd0:	f104 0340 	add.w	r3, r4, #64	; 0x40
1a004fd4:	4299      	cmp	r1, r3
1a004fd6:	d004      	beq.n	1a004fe2 <__swsetup_r+0xaa>
1a004fd8:	4628      	mov	r0, r5
1a004fda:	f7fd fbf7 	bl	1a0027cc <_free_r>
1a004fde:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a004fe2:	2300      	movs	r3, #0
1a004fe4:	6323      	str	r3, [r4, #48]	; 0x30
1a004fe6:	2300      	movs	r3, #0
1a004fe8:	6920      	ldr	r0, [r4, #16]
1a004fea:	6063      	str	r3, [r4, #4]
1a004fec:	f022 0224 	bic.w	r2, r2, #36	; 0x24
1a004ff0:	6020      	str	r0, [r4, #0]
1a004ff2:	e7d9      	b.n	1a004fa8 <__swsetup_r+0x70>
1a004ff4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
1a004ff8:	2309      	movs	r3, #9
1a004ffa:	602b      	str	r3, [r5, #0]
1a004ffc:	f04f 30ff 	mov.w	r0, #4294967295
1a005000:	81a2      	strh	r2, [r4, #12]
1a005002:	bd38      	pop	{r3, r4, r5, pc}
1a005004:	10000048 	.word	0x10000048

1a005008 <quorem>:
1a005008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a00500c:	6903      	ldr	r3, [r0, #16]
1a00500e:	690f      	ldr	r7, [r1, #16]
1a005010:	42bb      	cmp	r3, r7
1a005012:	b083      	sub	sp, #12
1a005014:	f2c0 8086 	blt.w	1a005124 <quorem+0x11c>
1a005018:	3f01      	subs	r7, #1
1a00501a:	f101 0614 	add.w	r6, r1, #20
1a00501e:	f100 0a14 	add.w	sl, r0, #20
1a005022:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
1a005026:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
1a00502a:	00bc      	lsls	r4, r7, #2
1a00502c:	3301      	adds	r3, #1
1a00502e:	9400      	str	r4, [sp, #0]
1a005030:	eb06 0904 	add.w	r9, r6, r4
1a005034:	429a      	cmp	r2, r3
1a005036:	4454      	add	r4, sl
1a005038:	fbb2 f8f3 	udiv	r8, r2, r3
1a00503c:	9401      	str	r4, [sp, #4]
1a00503e:	d33a      	bcc.n	1a0050b6 <quorem+0xae>
1a005040:	2500      	movs	r5, #0
1a005042:	462a      	mov	r2, r5
1a005044:	46b6      	mov	lr, r6
1a005046:	46d4      	mov	ip, sl
1a005048:	f85e 4b04 	ldr.w	r4, [lr], #4
1a00504c:	f8dc 3000 	ldr.w	r3, [ip]
1a005050:	fa1f fb84 	uxth.w	fp, r4
1a005054:	fb08 550b 	mla	r5, r8, fp, r5
1a005058:	ea4f 4b15 	mov.w	fp, r5, lsr #16
1a00505c:	0c24      	lsrs	r4, r4, #16
1a00505e:	fb08 b404 	mla	r4, r8, r4, fp
1a005062:	b2ad      	uxth	r5, r5
1a005064:	1b55      	subs	r5, r2, r5
1a005066:	b2a2      	uxth	r2, r4
1a005068:	ebc2 4213 	rsb	r2, r2, r3, lsr #16
1a00506c:	fa15 f383 	uxtah	r3, r5, r3
1a005070:	eb02 4223 	add.w	r2, r2, r3, asr #16
1a005074:	b29b      	uxth	r3, r3
1a005076:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a00507a:	45f1      	cmp	r9, lr
1a00507c:	ea4f 4514 	mov.w	r5, r4, lsr #16
1a005080:	f84c 3b04 	str.w	r3, [ip], #4
1a005084:	ea4f 4222 	mov.w	r2, r2, asr #16
1a005088:	d2de      	bcs.n	1a005048 <quorem+0x40>
1a00508a:	9b00      	ldr	r3, [sp, #0]
1a00508c:	f85a 3003 	ldr.w	r3, [sl, r3]
1a005090:	b98b      	cbnz	r3, 1a0050b6 <quorem+0xae>
1a005092:	9a01      	ldr	r2, [sp, #4]
1a005094:	1f13      	subs	r3, r2, #4
1a005096:	459a      	cmp	sl, r3
1a005098:	d20c      	bcs.n	1a0050b4 <quorem+0xac>
1a00509a:	f852 3c04 	ldr.w	r3, [r2, #-4]
1a00509e:	b94b      	cbnz	r3, 1a0050b4 <quorem+0xac>
1a0050a0:	f1a2 0308 	sub.w	r3, r2, #8
1a0050a4:	e002      	b.n	1a0050ac <quorem+0xa4>
1a0050a6:	681a      	ldr	r2, [r3, #0]
1a0050a8:	3b04      	subs	r3, #4
1a0050aa:	b91a      	cbnz	r2, 1a0050b4 <quorem+0xac>
1a0050ac:	459a      	cmp	sl, r3
1a0050ae:	f107 37ff 	add.w	r7, r7, #4294967295
1a0050b2:	d3f8      	bcc.n	1a0050a6 <quorem+0x9e>
1a0050b4:	6107      	str	r7, [r0, #16]
1a0050b6:	4604      	mov	r4, r0
1a0050b8:	f001 fc34 	bl	1a006924 <__mcmp>
1a0050bc:	2800      	cmp	r0, #0
1a0050be:	db2d      	blt.n	1a00511c <quorem+0x114>
1a0050c0:	f108 0801 	add.w	r8, r8, #1
1a0050c4:	4650      	mov	r0, sl
1a0050c6:	2300      	movs	r3, #0
1a0050c8:	f856 1b04 	ldr.w	r1, [r6], #4
1a0050cc:	6805      	ldr	r5, [r0, #0]
1a0050ce:	b28a      	uxth	r2, r1
1a0050d0:	1a9a      	subs	r2, r3, r2
1a0050d2:	0c0b      	lsrs	r3, r1, #16
1a0050d4:	fa12 f285 	uxtah	r2, r2, r5
1a0050d8:	ebc3 4315 	rsb	r3, r3, r5, lsr #16
1a0050dc:	eb03 4322 	add.w	r3, r3, r2, asr #16
1a0050e0:	b292      	uxth	r2, r2
1a0050e2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
1a0050e6:	45b1      	cmp	r9, r6
1a0050e8:	f840 2b04 	str.w	r2, [r0], #4
1a0050ec:	ea4f 4323 	mov.w	r3, r3, asr #16
1a0050f0:	d2ea      	bcs.n	1a0050c8 <quorem+0xc0>
1a0050f2:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
1a0050f6:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
1a0050fa:	b97a      	cbnz	r2, 1a00511c <quorem+0x114>
1a0050fc:	1f1a      	subs	r2, r3, #4
1a0050fe:	4592      	cmp	sl, r2
1a005100:	d20b      	bcs.n	1a00511a <quorem+0x112>
1a005102:	f853 2c04 	ldr.w	r2, [r3, #-4]
1a005106:	b942      	cbnz	r2, 1a00511a <quorem+0x112>
1a005108:	3b08      	subs	r3, #8
1a00510a:	e002      	b.n	1a005112 <quorem+0x10a>
1a00510c:	681a      	ldr	r2, [r3, #0]
1a00510e:	3b04      	subs	r3, #4
1a005110:	b91a      	cbnz	r2, 1a00511a <quorem+0x112>
1a005112:	459a      	cmp	sl, r3
1a005114:	f107 37ff 	add.w	r7, r7, #4294967295
1a005118:	d3f8      	bcc.n	1a00510c <quorem+0x104>
1a00511a:	6127      	str	r7, [r4, #16]
1a00511c:	4640      	mov	r0, r8
1a00511e:	b003      	add	sp, #12
1a005120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a005124:	2000      	movs	r0, #0
1a005126:	b003      	add	sp, #12
1a005128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00512c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a005130 <_dtoa_r>:
1a005130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a005134:	ec57 6b10 	vmov	r6, r7, d0
1a005138:	b097      	sub	sp, #92	; 0x5c
1a00513a:	6c05      	ldr	r5, [r0, #64]	; 0x40
1a00513c:	9c20      	ldr	r4, [sp, #128]	; 0x80
1a00513e:	9102      	str	r1, [sp, #8]
1a005140:	4682      	mov	sl, r0
1a005142:	920a      	str	r2, [sp, #40]	; 0x28
1a005144:	9307      	str	r3, [sp, #28]
1a005146:	e9cd 6700 	strd	r6, r7, [sp]
1a00514a:	b155      	cbz	r5, 1a005162 <_dtoa_r+0x32>
1a00514c:	6c42      	ldr	r2, [r0, #68]	; 0x44
1a00514e:	606a      	str	r2, [r5, #4]
1a005150:	2301      	movs	r3, #1
1a005152:	4093      	lsls	r3, r2
1a005154:	60ab      	str	r3, [r5, #8]
1a005156:	4629      	mov	r1, r5
1a005158:	f001 f9f8 	bl	1a00654c <_Bfree>
1a00515c:	2300      	movs	r3, #0
1a00515e:	f8ca 3040 	str.w	r3, [sl, #64]	; 0x40
1a005162:	1e3e      	subs	r6, r7, #0
1a005164:	bfb4      	ite	lt
1a005166:	2301      	movlt	r3, #1
1a005168:	2300      	movge	r3, #0
1a00516a:	6023      	str	r3, [r4, #0]
1a00516c:	4b76      	ldr	r3, [pc, #472]	; (1a005348 <_dtoa_r+0x218>)
1a00516e:	bfbc      	itt	lt
1a005170:	f026 4600 	biclt.w	r6, r6, #2147483648	; 0x80000000
1a005174:	9601      	strlt	r6, [sp, #4]
1a005176:	43b3      	bics	r3, r6
1a005178:	f000 80ae 	beq.w	1a0052d8 <_dtoa_r+0x1a8>
1a00517c:	ed9d 7b00 	vldr	d7, [sp]
1a005180:	2200      	movs	r2, #0
1a005182:	2300      	movs	r3, #0
1a005184:	ec51 0b17 	vmov	r0, r1, d7
1a005188:	ed8d 7b04 	vstr	d7, [sp, #16]
1a00518c:	f7fc ff7a 	bl	1a002084 <__aeabi_dcmpeq>
1a005190:	4605      	mov	r5, r0
1a005192:	b178      	cbz	r0, 1a0051b4 <_dtoa_r+0x84>
1a005194:	9a07      	ldr	r2, [sp, #28]
1a005196:	2301      	movs	r3, #1
1a005198:	6013      	str	r3, [r2, #0]
1a00519a:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a00519c:	2b00      	cmp	r3, #0
1a00519e:	f000 8313 	beq.w	1a0057c8 <_dtoa_r+0x698>
1a0051a2:	4b6a      	ldr	r3, [pc, #424]	; (1a00534c <_dtoa_r+0x21c>)
1a0051a4:	9a21      	ldr	r2, [sp, #132]	; 0x84
1a0051a6:	6013      	str	r3, [r2, #0]
1a0051a8:	3b01      	subs	r3, #1
1a0051aa:	9303      	str	r3, [sp, #12]
1a0051ac:	9803      	ldr	r0, [sp, #12]
1a0051ae:	b017      	add	sp, #92	; 0x5c
1a0051b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0051b4:	e9dd 7804 	ldrd	r7, r8, [sp, #16]
1a0051b8:	aa14      	add	r2, sp, #80	; 0x50
1a0051ba:	a915      	add	r1, sp, #84	; 0x54
1a0051bc:	ec48 7b10 	vmov	d0, r7, r8
1a0051c0:	4650      	mov	r0, sl
1a0051c2:	f001 fc47 	bl	1a006a54 <__d2b>
1a0051c6:	0d34      	lsrs	r4, r6, #20
1a0051c8:	4683      	mov	fp, r0
1a0051ca:	f040 809b 	bne.w	1a005304 <_dtoa_r+0x1d4>
1a0051ce:	e9dd 5414 	ldrd	r5, r4, [sp, #80]	; 0x50
1a0051d2:	442c      	add	r4, r5
1a0051d4:	f204 4332 	addw	r3, r4, #1074	; 0x432
1a0051d8:	2b20      	cmp	r3, #32
1a0051da:	f340 83bb 	ble.w	1a005954 <_dtoa_r+0x824>
1a0051de:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
1a0051e2:	409e      	lsls	r6, r3
1a0051e4:	9b00      	ldr	r3, [sp, #0]
1a0051e6:	f204 4012 	addw	r0, r4, #1042	; 0x412
1a0051ea:	fa23 f000 	lsr.w	r0, r3, r0
1a0051ee:	4330      	orrs	r0, r6
1a0051f0:	f7fc fc66 	bl	1a001ac0 <__aeabi_ui2d>
1a0051f4:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
1a0051f8:	2101      	movs	r1, #1
1a0051fa:	4602      	mov	r2, r0
1a0051fc:	3c01      	subs	r4, #1
1a0051fe:	910e      	str	r1, [sp, #56]	; 0x38
1a005200:	4610      	mov	r0, r2
1a005202:	4619      	mov	r1, r3
1a005204:	2200      	movs	r2, #0
1a005206:	4b52      	ldr	r3, [pc, #328]	; (1a005350 <_dtoa_r+0x220>)
1a005208:	f7fc fb1c 	bl	1a001844 <__aeabi_dsub>
1a00520c:	a348      	add	r3, pc, #288	; (adr r3, 1a005330 <_dtoa_r+0x200>)
1a00520e:	e9d3 2300 	ldrd	r2, r3, [r3]
1a005212:	f7fc fccf 	bl	1a001bb4 <__aeabi_dmul>
1a005216:	a348      	add	r3, pc, #288	; (adr r3, 1a005338 <_dtoa_r+0x208>)
1a005218:	e9d3 2300 	ldrd	r2, r3, [r3]
1a00521c:	f7fc fb14 	bl	1a001848 <__adddf3>
1a005220:	4606      	mov	r6, r0
1a005222:	4620      	mov	r0, r4
1a005224:	460f      	mov	r7, r1
1a005226:	f7fc fc5b 	bl	1a001ae0 <__aeabi_i2d>
1a00522a:	a345      	add	r3, pc, #276	; (adr r3, 1a005340 <_dtoa_r+0x210>)
1a00522c:	e9d3 2300 	ldrd	r2, r3, [r3]
1a005230:	f7fc fcc0 	bl	1a001bb4 <__aeabi_dmul>
1a005234:	4602      	mov	r2, r0
1a005236:	460b      	mov	r3, r1
1a005238:	4630      	mov	r0, r6
1a00523a:	4639      	mov	r1, r7
1a00523c:	f7fc fb04 	bl	1a001848 <__adddf3>
1a005240:	4606      	mov	r6, r0
1a005242:	460f      	mov	r7, r1
1a005244:	f002 f836 	bl	1a0072b4 <__aeabi_d2iz>
1a005248:	2200      	movs	r2, #0
1a00524a:	4681      	mov	r9, r0
1a00524c:	2300      	movs	r3, #0
1a00524e:	4630      	mov	r0, r6
1a005250:	4639      	mov	r1, r7
1a005252:	f7fc ff21 	bl	1a002098 <__aeabi_dcmplt>
1a005256:	2800      	cmp	r0, #0
1a005258:	f040 82a9 	bne.w	1a0057ae <_dtoa_r+0x67e>
1a00525c:	1b2c      	subs	r4, r5, r4
1a00525e:	f1b9 0f16 	cmp.w	r9, #22
1a005262:	f104 38ff 	add.w	r8, r4, #4294967295
1a005266:	f200 8296 	bhi.w	1a005796 <_dtoa_r+0x666>
1a00526a:	4b3a      	ldr	r3, [pc, #232]	; (1a005354 <_dtoa_r+0x224>)
1a00526c:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
1a005270:	e9d3 2300 	ldrd	r2, r3, [r3]
1a005274:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1a005278:	f7fc ff0e 	bl	1a002098 <__aeabi_dcmplt>
1a00527c:	2800      	cmp	r0, #0
1a00527e:	d06f      	beq.n	1a005360 <_dtoa_r+0x230>
1a005280:	2300      	movs	r3, #0
1a005282:	f1b8 0f00 	cmp.w	r8, #0
1a005286:	f109 39ff 	add.w	r9, r9, #4294967295
1a00528a:	930d      	str	r3, [sp, #52]	; 0x34
1a00528c:	f2c0 8289 	blt.w	1a0057a2 <_dtoa_r+0x672>
1a005290:	2300      	movs	r3, #0
1a005292:	9308      	str	r3, [sp, #32]
1a005294:	f1b9 0f00 	cmp.w	r9, #0
1a005298:	da68      	bge.n	1a00536c <_dtoa_r+0x23c>
1a00529a:	9b08      	ldr	r3, [sp, #32]
1a00529c:	f8cd 9018 	str.w	r9, [sp, #24]
1a0052a0:	eba3 0309 	sub.w	r3, r3, r9
1a0052a4:	9308      	str	r3, [sp, #32]
1a0052a6:	f1c9 0300 	rsb	r3, r9, #0
1a0052aa:	930c      	str	r3, [sp, #48]	; 0x30
1a0052ac:	9b02      	ldr	r3, [sp, #8]
1a0052ae:	2b09      	cmp	r3, #9
1a0052b0:	f04f 0900 	mov.w	r9, #0
1a0052b4:	d862      	bhi.n	1a00537c <_dtoa_r+0x24c>
1a0052b6:	2b05      	cmp	r3, #5
1a0052b8:	f340 834a 	ble.w	1a005950 <_dtoa_r+0x820>
1a0052bc:	3b04      	subs	r3, #4
1a0052be:	9302      	str	r3, [sp, #8]
1a0052c0:	2400      	movs	r4, #0
1a0052c2:	9b02      	ldr	r3, [sp, #8]
1a0052c4:	3b02      	subs	r3, #2
1a0052c6:	2b03      	cmp	r3, #3
1a0052c8:	f200 8641 	bhi.w	1a005f4e <_dtoa_r+0xe1e>
1a0052cc:	e8df f013 	tbh	[pc, r3, lsl #1]
1a0052d0:	04630466 	.word	0x04630466
1a0052d4:	0456043b 	.word	0x0456043b
1a0052d8:	9a07      	ldr	r2, [sp, #28]
1a0052da:	f242 730f 	movw	r3, #9999	; 0x270f
1a0052de:	6013      	str	r3, [r2, #0]
1a0052e0:	9b00      	ldr	r3, [sp, #0]
1a0052e2:	f3c6 0613 	ubfx	r6, r6, #0, #20
1a0052e6:	4333      	orrs	r3, r6
1a0052e8:	d118      	bne.n	1a00531c <_dtoa_r+0x1ec>
1a0052ea:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a0052ec:	2b00      	cmp	r3, #0
1a0052ee:	f000 8625 	beq.w	1a005f3c <_dtoa_r+0xe0c>
1a0052f2:	4b19      	ldr	r3, [pc, #100]	; (1a005358 <_dtoa_r+0x228>)
1a0052f4:	9303      	str	r3, [sp, #12]
1a0052f6:	3308      	adds	r3, #8
1a0052f8:	9a21      	ldr	r2, [sp, #132]	; 0x84
1a0052fa:	9803      	ldr	r0, [sp, #12]
1a0052fc:	6013      	str	r3, [r2, #0]
1a0052fe:	b017      	add	sp, #92	; 0x5c
1a005300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a005304:	f3c8 0113 	ubfx	r1, r8, #0, #20
1a005308:	f041 537f 	orr.w	r3, r1, #1069547520	; 0x3fc00000
1a00530c:	950e      	str	r5, [sp, #56]	; 0x38
1a00530e:	463a      	mov	r2, r7
1a005310:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
1a005314:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
1a005318:	9d14      	ldr	r5, [sp, #80]	; 0x50
1a00531a:	e771      	b.n	1a005200 <_dtoa_r+0xd0>
1a00531c:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a00531e:	2b00      	cmp	r3, #0
1a005320:	f040 8400 	bne.w	1a005b24 <_dtoa_r+0x9f4>
1a005324:	4b0d      	ldr	r3, [pc, #52]	; (1a00535c <_dtoa_r+0x22c>)
1a005326:	9303      	str	r3, [sp, #12]
1a005328:	e740      	b.n	1a0051ac <_dtoa_r+0x7c>
1a00532a:	bf00      	nop
1a00532c:	f3af 8000 	nop.w
1a005330:	636f4361 	.word	0x636f4361
1a005334:	3fd287a7 	.word	0x3fd287a7
1a005338:	8b60c8b3 	.word	0x8b60c8b3
1a00533c:	3fc68a28 	.word	0x3fc68a28
1a005340:	509f79fb 	.word	0x509f79fb
1a005344:	3fd34413 	.word	0x3fd34413
1a005348:	7ff00000 	.word	0x7ff00000
1a00534c:	1a0076bd 	.word	0x1a0076bd
1a005350:	3ff80000 	.word	0x3ff80000
1a005354:	1a007718 	.word	0x1a007718
1a005358:	1a0076e4 	.word	0x1a0076e4
1a00535c:	1a0076e0 	.word	0x1a0076e0
1a005360:	f1b8 0f00 	cmp.w	r8, #0
1a005364:	f2c0 84b6 	blt.w	1a005cd4 <_dtoa_r+0xba4>
1a005368:	900d      	str	r0, [sp, #52]	; 0x34
1a00536a:	9008      	str	r0, [sp, #32]
1a00536c:	2300      	movs	r3, #0
1a00536e:	930c      	str	r3, [sp, #48]	; 0x30
1a005370:	9b02      	ldr	r3, [sp, #8]
1a005372:	f8cd 9018 	str.w	r9, [sp, #24]
1a005376:	2b09      	cmp	r3, #9
1a005378:	44c8      	add	r8, r9
1a00537a:	d99c      	bls.n	1a0052b6 <_dtoa_r+0x186>
1a00537c:	2300      	movs	r3, #0
1a00537e:	2401      	movs	r4, #1
1a005380:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
1a005384:	f04f 35ff 	mov.w	r5, #4294967295
1a005388:	9302      	str	r3, [sp, #8]
1a00538a:	9509      	str	r5, [sp, #36]	; 0x24
1a00538c:	2100      	movs	r1, #0
1a00538e:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
1a005392:	950f      	str	r5, [sp, #60]	; 0x3c
1a005394:	4650      	mov	r0, sl
1a005396:	f001 f8b3 	bl	1a006500 <_Balloc>
1a00539a:	2d0e      	cmp	r5, #14
1a00539c:	9003      	str	r0, [sp, #12]
1a00539e:	f8ca 0040 	str.w	r0, [sl, #64]	; 0x40
1a0053a2:	f200 810a 	bhi.w	1a0055ba <_dtoa_r+0x48a>
1a0053a6:	2c00      	cmp	r4, #0
1a0053a8:	f000 8107 	beq.w	1a0055ba <_dtoa_r+0x48a>
1a0053ac:	9906      	ldr	r1, [sp, #24]
1a0053ae:	2900      	cmp	r1, #0
1a0053b0:	f340 8466 	ble.w	1a005c80 <_dtoa_r+0xb50>
1a0053b4:	4bb1      	ldr	r3, [pc, #708]	; (1a00567c <_dtoa_r+0x54c>)
1a0053b6:	f001 020f 	and.w	r2, r1, #15
1a0053ba:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a0053be:	ed93 7b00 	vldr	d7, [r3]
1a0053c2:	110c      	asrs	r4, r1, #4
1a0053c4:	06e3      	lsls	r3, r4, #27
1a0053c6:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
1a0053ca:	f140 8406 	bpl.w	1a005bda <_dtoa_r+0xaaa>
1a0053ce:	4bac      	ldr	r3, [pc, #688]	; (1a005680 <_dtoa_r+0x550>)
1a0053d0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1a0053d4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
1a0053d8:	f7fc fd16 	bl	1a001e08 <__aeabi_ddiv>
1a0053dc:	e9cd 0100 	strd	r0, r1, [sp]
1a0053e0:	f004 040f 	and.w	r4, r4, #15
1a0053e4:	2603      	movs	r6, #3
1a0053e6:	b17c      	cbz	r4, 1a005408 <_dtoa_r+0x2d8>
1a0053e8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a0053ec:	4da4      	ldr	r5, [pc, #656]	; (1a005680 <_dtoa_r+0x550>)
1a0053ee:	07e7      	lsls	r7, r4, #31
1a0053f0:	d504      	bpl.n	1a0053fc <_dtoa_r+0x2cc>
1a0053f2:	e9d5 2300 	ldrd	r2, r3, [r5]
1a0053f6:	f7fc fbdd 	bl	1a001bb4 <__aeabi_dmul>
1a0053fa:	3601      	adds	r6, #1
1a0053fc:	1064      	asrs	r4, r4, #1
1a0053fe:	f105 0508 	add.w	r5, r5, #8
1a005402:	d1f4      	bne.n	1a0053ee <_dtoa_r+0x2be>
1a005404:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
1a005408:	e9dd 0100 	ldrd	r0, r1, [sp]
1a00540c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
1a005410:	f7fc fcfa 	bl	1a001e08 <__aeabi_ddiv>
1a005414:	e9cd 0100 	strd	r0, r1, [sp]
1a005418:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1a00541a:	b153      	cbz	r3, 1a005432 <_dtoa_r+0x302>
1a00541c:	e9dd 4500 	ldrd	r4, r5, [sp]
1a005420:	2200      	movs	r2, #0
1a005422:	4b98      	ldr	r3, [pc, #608]	; (1a005684 <_dtoa_r+0x554>)
1a005424:	4620      	mov	r0, r4
1a005426:	4629      	mov	r1, r5
1a005428:	f7fc fe36 	bl	1a002098 <__aeabi_dcmplt>
1a00542c:	2800      	cmp	r0, #0
1a00542e:	f040 8521 	bne.w	1a005e74 <_dtoa_r+0xd44>
1a005432:	4630      	mov	r0, r6
1a005434:	f7fc fb54 	bl	1a001ae0 <__aeabi_i2d>
1a005438:	e9dd 2300 	ldrd	r2, r3, [sp]
1a00543c:	f7fc fbba 	bl	1a001bb4 <__aeabi_dmul>
1a005440:	4b91      	ldr	r3, [pc, #580]	; (1a005688 <_dtoa_r+0x558>)
1a005442:	2200      	movs	r2, #0
1a005444:	f7fc fa00 	bl	1a001848 <__adddf3>
1a005448:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00544a:	4604      	mov	r4, r0
1a00544c:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
1a005450:	2b00      	cmp	r3, #0
1a005452:	f000 83f9 	beq.w	1a005c48 <_dtoa_r+0xb18>
1a005456:	9b06      	ldr	r3, [sp, #24]
1a005458:	9312      	str	r3, [sp, #72]	; 0x48
1a00545a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00545c:	9310      	str	r3, [sp, #64]	; 0x40
1a00545e:	e9dd 6700 	ldrd	r6, r7, [sp]
1a005462:	4639      	mov	r1, r7
1a005464:	4630      	mov	r0, r6
1a005466:	f001 ff25 	bl	1a0072b4 <__aeabi_d2iz>
1a00546a:	9000      	str	r0, [sp, #0]
1a00546c:	f7fc fb38 	bl	1a001ae0 <__aeabi_i2d>
1a005470:	4602      	mov	r2, r0
1a005472:	460b      	mov	r3, r1
1a005474:	4630      	mov	r0, r6
1a005476:	4639      	mov	r1, r7
1a005478:	f7fc f9e4 	bl	1a001844 <__aeabi_dsub>
1a00547c:	4b7f      	ldr	r3, [pc, #508]	; (1a00567c <_dtoa_r+0x54c>)
1a00547e:	9a00      	ldr	r2, [sp, #0]
1a005480:	460f      	mov	r7, r1
1a005482:	9910      	ldr	r1, [sp, #64]	; 0x40
1a005484:	4606      	mov	r6, r0
1a005486:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
1a00548a:	980b      	ldr	r0, [sp, #44]	; 0x2c
1a00548c:	9903      	ldr	r1, [sp, #12]
1a00548e:	3230      	adds	r2, #48	; 0x30
1a005490:	e9cd 4500 	strd	r4, r5, [sp]
1a005494:	b2d5      	uxtb	r5, r2
1a005496:	1c4c      	adds	r4, r1, #1
1a005498:	e953 2302 	ldrd	r2, r3, [r3, #-8]
1a00549c:	2800      	cmp	r0, #0
1a00549e:	f000 848d 	beq.w	1a005dbc <_dtoa_r+0xc8c>
1a0054a2:	2000      	movs	r0, #0
1a0054a4:	4979      	ldr	r1, [pc, #484]	; (1a00568c <_dtoa_r+0x55c>)
1a0054a6:	f7fc fcaf 	bl	1a001e08 <__aeabi_ddiv>
1a0054aa:	e9dd 2300 	ldrd	r2, r3, [sp]
1a0054ae:	f7fc f9c9 	bl	1a001844 <__aeabi_dsub>
1a0054b2:	9b03      	ldr	r3, [sp, #12]
1a0054b4:	4632      	mov	r2, r6
1a0054b6:	701d      	strb	r5, [r3, #0]
1a0054b8:	463b      	mov	r3, r7
1a0054ba:	e9cd 0100 	strd	r0, r1, [sp]
1a0054be:	f7fc fe09 	bl	1a0020d4 <__aeabi_dcmpgt>
1a0054c2:	2800      	cmp	r0, #0
1a0054c4:	f040 84ca 	bne.w	1a005e5c <_dtoa_r+0xd2c>
1a0054c8:	4632      	mov	r2, r6
1a0054ca:	463b      	mov	r3, r7
1a0054cc:	2000      	movs	r0, #0
1a0054ce:	496d      	ldr	r1, [pc, #436]	; (1a005684 <_dtoa_r+0x554>)
1a0054d0:	f7fc f9b8 	bl	1a001844 <__aeabi_dsub>
1a0054d4:	4602      	mov	r2, r0
1a0054d6:	460b      	mov	r3, r1
1a0054d8:	e9dd 0100 	ldrd	r0, r1, [sp]
1a0054dc:	f7fc fdfa 	bl	1a0020d4 <__aeabi_dcmpgt>
1a0054e0:	2800      	cmp	r0, #0
1a0054e2:	f040 8526 	bne.w	1a005f32 <_dtoa_r+0xe02>
1a0054e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a0054e8:	2b01      	cmp	r3, #1
1a0054ea:	d062      	beq.n	1a0055b2 <_dtoa_r+0x482>
1a0054ec:	9a03      	ldr	r2, [sp, #12]
1a0054ee:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
1a0054f2:	4413      	add	r3, r2
1a0054f4:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
1a0054f8:	e9dd 8900 	ldrd	r8, r9, [sp]
1a0054fc:	f8cd b000 	str.w	fp, [sp]
1a005500:	46d3      	mov	fp, sl
1a005502:	469a      	mov	sl, r3
1a005504:	e00c      	b.n	1a005520 <_dtoa_r+0x3f0>
1a005506:	2000      	movs	r0, #0
1a005508:	495e      	ldr	r1, [pc, #376]	; (1a005684 <_dtoa_r+0x554>)
1a00550a:	f7fc f99b 	bl	1a001844 <__aeabi_dsub>
1a00550e:	4642      	mov	r2, r8
1a005510:	464b      	mov	r3, r9
1a005512:	f7fc fdc1 	bl	1a002098 <__aeabi_dcmplt>
1a005516:	2800      	cmp	r0, #0
1a005518:	f040 84eb 	bne.w	1a005ef2 <_dtoa_r+0xdc2>
1a00551c:	45a2      	cmp	sl, r4
1a00551e:	d041      	beq.n	1a0055a4 <_dtoa_r+0x474>
1a005520:	4640      	mov	r0, r8
1a005522:	4649      	mov	r1, r9
1a005524:	2200      	movs	r2, #0
1a005526:	4b5a      	ldr	r3, [pc, #360]	; (1a005690 <_dtoa_r+0x560>)
1a005528:	f7fc fb44 	bl	1a001bb4 <__aeabi_dmul>
1a00552c:	2200      	movs	r2, #0
1a00552e:	4b58      	ldr	r3, [pc, #352]	; (1a005690 <_dtoa_r+0x560>)
1a005530:	4680      	mov	r8, r0
1a005532:	4689      	mov	r9, r1
1a005534:	4630      	mov	r0, r6
1a005536:	4639      	mov	r1, r7
1a005538:	f7fc fb3c 	bl	1a001bb4 <__aeabi_dmul>
1a00553c:	460f      	mov	r7, r1
1a00553e:	4606      	mov	r6, r0
1a005540:	f001 feb8 	bl	1a0072b4 <__aeabi_d2iz>
1a005544:	4605      	mov	r5, r0
1a005546:	f7fc facb 	bl	1a001ae0 <__aeabi_i2d>
1a00554a:	4602      	mov	r2, r0
1a00554c:	460b      	mov	r3, r1
1a00554e:	4630      	mov	r0, r6
1a005550:	4639      	mov	r1, r7
1a005552:	f7fc f977 	bl	1a001844 <__aeabi_dsub>
1a005556:	3530      	adds	r5, #48	; 0x30
1a005558:	b2ed      	uxtb	r5, r5
1a00555a:	4642      	mov	r2, r8
1a00555c:	464b      	mov	r3, r9
1a00555e:	f804 5b01 	strb.w	r5, [r4], #1
1a005562:	4606      	mov	r6, r0
1a005564:	460f      	mov	r7, r1
1a005566:	f7fc fd97 	bl	1a002098 <__aeabi_dcmplt>
1a00556a:	4632      	mov	r2, r6
1a00556c:	463b      	mov	r3, r7
1a00556e:	2800      	cmp	r0, #0
1a005570:	d0c9      	beq.n	1a005506 <_dtoa_r+0x3d6>
1a005572:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a005574:	46da      	mov	sl, fp
1a005576:	3301      	adds	r3, #1
1a005578:	f8dd b000 	ldr.w	fp, [sp]
1a00557c:	9306      	str	r3, [sp, #24]
1a00557e:	4659      	mov	r1, fp
1a005580:	4650      	mov	r0, sl
1a005582:	f000 ffe3 	bl	1a00654c <_Bfree>
1a005586:	2300      	movs	r3, #0
1a005588:	7023      	strb	r3, [r4, #0]
1a00558a:	9b07      	ldr	r3, [sp, #28]
1a00558c:	461a      	mov	r2, r3
1a00558e:	9b06      	ldr	r3, [sp, #24]
1a005590:	6013      	str	r3, [r2, #0]
1a005592:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a005594:	2b00      	cmp	r3, #0
1a005596:	f43f ae09 	beq.w	1a0051ac <_dtoa_r+0x7c>
1a00559a:	9803      	ldr	r0, [sp, #12]
1a00559c:	601c      	str	r4, [r3, #0]
1a00559e:	b017      	add	sp, #92	; 0x5c
1a0055a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0055a4:	46da      	mov	sl, fp
1a0055a6:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
1a0055aa:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
1a0055ae:	f8dd b000 	ldr.w	fp, [sp]
1a0055b2:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
1a0055b6:	e9cd 3400 	strd	r3, r4, [sp]
1a0055ba:	9b15      	ldr	r3, [sp, #84]	; 0x54
1a0055bc:	2b00      	cmp	r3, #0
1a0055be:	f2c0 80c9 	blt.w	1a005754 <_dtoa_r+0x624>
1a0055c2:	9a06      	ldr	r2, [sp, #24]
1a0055c4:	2a0e      	cmp	r2, #14
1a0055c6:	f300 80c5 	bgt.w	1a005754 <_dtoa_r+0x624>
1a0055ca:	4b2c      	ldr	r3, [pc, #176]	; (1a00567c <_dtoa_r+0x54c>)
1a0055cc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a0055d0:	e9d3 8900 	ldrd	r8, r9, [r3]
1a0055d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a0055d6:	2b00      	cmp	r3, #0
1a0055d8:	da17      	bge.n	1a00560a <_dtoa_r+0x4da>
1a0055da:	9f09      	ldr	r7, [sp, #36]	; 0x24
1a0055dc:	2f00      	cmp	r7, #0
1a0055de:	dc14      	bgt.n	1a00560a <_dtoa_r+0x4da>
1a0055e0:	f040 834b 	bne.w	1a005c7a <_dtoa_r+0xb4a>
1a0055e4:	2200      	movs	r2, #0
1a0055e6:	4b2b      	ldr	r3, [pc, #172]	; (1a005694 <_dtoa_r+0x564>)
1a0055e8:	4640      	mov	r0, r8
1a0055ea:	4649      	mov	r1, r9
1a0055ec:	f7fc fae2 	bl	1a001bb4 <__aeabi_dmul>
1a0055f0:	e9dd 2300 	ldrd	r2, r3, [sp]
1a0055f4:	f7fc fd64 	bl	1a0020c0 <__aeabi_dcmpge>
1a0055f8:	2800      	cmp	r0, #0
1a0055fa:	f000 83be 	beq.w	1a005d7a <_dtoa_r+0xc4a>
1a0055fe:	9f09      	ldr	r7, [sp, #36]	; 0x24
1a005600:	463d      	mov	r5, r7
1a005602:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a005604:	9c03      	ldr	r4, [sp, #12]
1a005606:	43db      	mvns	r3, r3
1a005608:	e260      	b.n	1a005acc <_dtoa_r+0x99c>
1a00560a:	e9dd 4500 	ldrd	r4, r5, [sp]
1a00560e:	4642      	mov	r2, r8
1a005610:	464b      	mov	r3, r9
1a005612:	4620      	mov	r0, r4
1a005614:	4629      	mov	r1, r5
1a005616:	f7fc fbf7 	bl	1a001e08 <__aeabi_ddiv>
1a00561a:	f001 fe4b 	bl	1a0072b4 <__aeabi_d2iz>
1a00561e:	9000      	str	r0, [sp, #0]
1a005620:	f7fc fa5e 	bl	1a001ae0 <__aeabi_i2d>
1a005624:	4642      	mov	r2, r8
1a005626:	464b      	mov	r3, r9
1a005628:	f7fc fac4 	bl	1a001bb4 <__aeabi_dmul>
1a00562c:	4602      	mov	r2, r0
1a00562e:	460b      	mov	r3, r1
1a005630:	4620      	mov	r0, r4
1a005632:	4629      	mov	r1, r5
1a005634:	f7fc f906 	bl	1a001844 <__aeabi_dsub>
1a005638:	9b00      	ldr	r3, [sp, #0]
1a00563a:	9c03      	ldr	r4, [sp, #12]
1a00563c:	9a06      	ldr	r2, [sp, #24]
1a00563e:	3330      	adds	r3, #48	; 0x30
1a005640:	f804 3b01 	strb.w	r3, [r4], #1
1a005644:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a005646:	3201      	adds	r2, #1
1a005648:	2b01      	cmp	r3, #1
1a00564a:	4606      	mov	r6, r0
1a00564c:	460f      	mov	r7, r1
1a00564e:	9206      	str	r2, [sp, #24]
1a005650:	d054      	beq.n	1a0056fc <_dtoa_r+0x5cc>
1a005652:	2200      	movs	r2, #0
1a005654:	4b0e      	ldr	r3, [pc, #56]	; (1a005690 <_dtoa_r+0x560>)
1a005656:	f7fc faad 	bl	1a001bb4 <__aeabi_dmul>
1a00565a:	2200      	movs	r2, #0
1a00565c:	2300      	movs	r3, #0
1a00565e:	4606      	mov	r6, r0
1a005660:	460f      	mov	r7, r1
1a005662:	f7fc fd0f 	bl	1a002084 <__aeabi_dcmpeq>
1a005666:	2800      	cmp	r0, #0
1a005668:	d189      	bne.n	1a00557e <_dtoa_r+0x44e>
1a00566a:	f8cd b000 	str.w	fp, [sp]
1a00566e:	2501      	movs	r5, #1
1a005670:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
1a005674:	f8cd a008 	str.w	sl, [sp, #8]
1a005678:	e019      	b.n	1a0056ae <_dtoa_r+0x57e>
1a00567a:	bf00      	nop
1a00567c:	1a007718 	.word	0x1a007718
1a005680:	1a0076f0 	.word	0x1a0076f0
1a005684:	3ff00000 	.word	0x3ff00000
1a005688:	401c0000 	.word	0x401c0000
1a00568c:	3fe00000 	.word	0x3fe00000
1a005690:	40240000 	.word	0x40240000
1a005694:	40140000 	.word	0x40140000
1a005698:	f7fc fa8c 	bl	1a001bb4 <__aeabi_dmul>
1a00569c:	2200      	movs	r2, #0
1a00569e:	2300      	movs	r3, #0
1a0056a0:	4606      	mov	r6, r0
1a0056a2:	460f      	mov	r7, r1
1a0056a4:	f7fc fcee 	bl	1a002084 <__aeabi_dcmpeq>
1a0056a8:	2800      	cmp	r0, #0
1a0056aa:	f040 835c 	bne.w	1a005d66 <_dtoa_r+0xc36>
1a0056ae:	4642      	mov	r2, r8
1a0056b0:	464b      	mov	r3, r9
1a0056b2:	4630      	mov	r0, r6
1a0056b4:	4639      	mov	r1, r7
1a0056b6:	f7fc fba7 	bl	1a001e08 <__aeabi_ddiv>
1a0056ba:	f001 fdfb 	bl	1a0072b4 <__aeabi_d2iz>
1a0056be:	4682      	mov	sl, r0
1a0056c0:	f7fc fa0e 	bl	1a001ae0 <__aeabi_i2d>
1a0056c4:	4642      	mov	r2, r8
1a0056c6:	464b      	mov	r3, r9
1a0056c8:	f7fc fa74 	bl	1a001bb4 <__aeabi_dmul>
1a0056cc:	4602      	mov	r2, r0
1a0056ce:	460b      	mov	r3, r1
1a0056d0:	4630      	mov	r0, r6
1a0056d2:	4639      	mov	r1, r7
1a0056d4:	f7fc f8b6 	bl	1a001844 <__aeabi_dsub>
1a0056d8:	3501      	adds	r5, #1
1a0056da:	f10a 0c30 	add.w	ip, sl, #48	; 0x30
1a0056de:	45ab      	cmp	fp, r5
1a0056e0:	4606      	mov	r6, r0
1a0056e2:	460f      	mov	r7, r1
1a0056e4:	f04f 0200 	mov.w	r2, #0
1a0056e8:	4ba7      	ldr	r3, [pc, #668]	; (1a005988 <_dtoa_r+0x858>)
1a0056ea:	f804 cb01 	strb.w	ip, [r4], #1
1a0056ee:	d1d3      	bne.n	1a005698 <_dtoa_r+0x568>
1a0056f0:	f8dd b000 	ldr.w	fp, [sp]
1a0056f4:	f8cd a000 	str.w	sl, [sp]
1a0056f8:	f8dd a008 	ldr.w	sl, [sp, #8]
1a0056fc:	4632      	mov	r2, r6
1a0056fe:	463b      	mov	r3, r7
1a005700:	4630      	mov	r0, r6
1a005702:	4639      	mov	r1, r7
1a005704:	f7fc f8a0 	bl	1a001848 <__adddf3>
1a005708:	4642      	mov	r2, r8
1a00570a:	464b      	mov	r3, r9
1a00570c:	4606      	mov	r6, r0
1a00570e:	460f      	mov	r7, r1
1a005710:	f7fc fce0 	bl	1a0020d4 <__aeabi_dcmpgt>
1a005714:	b960      	cbnz	r0, 1a005730 <_dtoa_r+0x600>
1a005716:	4642      	mov	r2, r8
1a005718:	464b      	mov	r3, r9
1a00571a:	4630      	mov	r0, r6
1a00571c:	4639      	mov	r1, r7
1a00571e:	f7fc fcb1 	bl	1a002084 <__aeabi_dcmpeq>
1a005722:	2800      	cmp	r0, #0
1a005724:	f43f af2b 	beq.w	1a00557e <_dtoa_r+0x44e>
1a005728:	9b00      	ldr	r3, [sp, #0]
1a00572a:	07db      	lsls	r3, r3, #31
1a00572c:	f57f af27 	bpl.w	1a00557e <_dtoa_r+0x44e>
1a005730:	f814 5c01 	ldrb.w	r5, [r4, #-1]
1a005734:	9a03      	ldr	r2, [sp, #12]
1a005736:	1e63      	subs	r3, r4, #1
1a005738:	e004      	b.n	1a005744 <_dtoa_r+0x614>
1a00573a:	429a      	cmp	r2, r3
1a00573c:	f000 83c0 	beq.w	1a005ec0 <_dtoa_r+0xd90>
1a005740:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
1a005744:	2d39      	cmp	r5, #57	; 0x39
1a005746:	f103 0401 	add.w	r4, r3, #1
1a00574a:	d0f6      	beq.n	1a00573a <_dtoa_r+0x60a>
1a00574c:	1c6a      	adds	r2, r5, #1
1a00574e:	b2d2      	uxtb	r2, r2
1a005750:	701a      	strb	r2, [r3, #0]
1a005752:	e714      	b.n	1a00557e <_dtoa_r+0x44e>
1a005754:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a005756:	2a00      	cmp	r2, #0
1a005758:	d03c      	beq.n	1a0057d4 <_dtoa_r+0x6a4>
1a00575a:	9a02      	ldr	r2, [sp, #8]
1a00575c:	2a01      	cmp	r2, #1
1a00575e:	f340 8258 	ble.w	1a005c12 <_dtoa_r+0xae2>
1a005762:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a005764:	1e5e      	subs	r6, r3, #1
1a005766:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a005768:	42b3      	cmp	r3, r6
1a00576a:	f280 8234 	bge.w	1a005bd6 <_dtoa_r+0xaa6>
1a00576e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a005770:	960c      	str	r6, [sp, #48]	; 0x30
1a005772:	1af3      	subs	r3, r6, r3
1a005774:	4499      	add	r9, r3
1a005776:	2600      	movs	r6, #0
1a005778:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00577a:	2b00      	cmp	r3, #0
1a00577c:	f2c0 82f8 	blt.w	1a005d70 <_dtoa_r+0xc40>
1a005780:	9a08      	ldr	r2, [sp, #32]
1a005782:	4614      	mov	r4, r2
1a005784:	441a      	add	r2, r3
1a005786:	4498      	add	r8, r3
1a005788:	9208      	str	r2, [sp, #32]
1a00578a:	2101      	movs	r1, #1
1a00578c:	4650      	mov	r0, sl
1a00578e:	f000 ff7d 	bl	1a00668c <__i2b>
1a005792:	4605      	mov	r5, r0
1a005794:	e021      	b.n	1a0057da <_dtoa_r+0x6aa>
1a005796:	2301      	movs	r3, #1
1a005798:	f1b8 0f00 	cmp.w	r8, #0
1a00579c:	930d      	str	r3, [sp, #52]	; 0x34
1a00579e:	f6bf ad77 	bge.w	1a005290 <_dtoa_r+0x160>
1a0057a2:	f1c4 0301 	rsb	r3, r4, #1
1a0057a6:	9308      	str	r3, [sp, #32]
1a0057a8:	f04f 0800 	mov.w	r8, #0
1a0057ac:	e572      	b.n	1a005294 <_dtoa_r+0x164>
1a0057ae:	4648      	mov	r0, r9
1a0057b0:	f7fc f996 	bl	1a001ae0 <__aeabi_i2d>
1a0057b4:	4632      	mov	r2, r6
1a0057b6:	463b      	mov	r3, r7
1a0057b8:	f7fc fc64 	bl	1a002084 <__aeabi_dcmpeq>
1a0057bc:	2800      	cmp	r0, #0
1a0057be:	f47f ad4d 	bne.w	1a00525c <_dtoa_r+0x12c>
1a0057c2:	f109 39ff 	add.w	r9, r9, #4294967295
1a0057c6:	e549      	b.n	1a00525c <_dtoa_r+0x12c>
1a0057c8:	4b70      	ldr	r3, [pc, #448]	; (1a00598c <_dtoa_r+0x85c>)
1a0057ca:	9303      	str	r3, [sp, #12]
1a0057cc:	9803      	ldr	r0, [sp, #12]
1a0057ce:	b017      	add	sp, #92	; 0x5c
1a0057d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0057d4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
1a0057d6:	9c08      	ldr	r4, [sp, #32]
1a0057d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
1a0057da:	2c00      	cmp	r4, #0
1a0057dc:	dd0c      	ble.n	1a0057f8 <_dtoa_r+0x6c8>
1a0057de:	f1b8 0f00 	cmp.w	r8, #0
1a0057e2:	dd09      	ble.n	1a0057f8 <_dtoa_r+0x6c8>
1a0057e4:	4544      	cmp	r4, r8
1a0057e6:	9a08      	ldr	r2, [sp, #32]
1a0057e8:	4623      	mov	r3, r4
1a0057ea:	bfa8      	it	ge
1a0057ec:	4643      	movge	r3, r8
1a0057ee:	1ad2      	subs	r2, r2, r3
1a0057f0:	9208      	str	r2, [sp, #32]
1a0057f2:	1ae4      	subs	r4, r4, r3
1a0057f4:	eba8 0803 	sub.w	r8, r8, r3
1a0057f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a0057fa:	b1d3      	cbz	r3, 1a005832 <_dtoa_r+0x702>
1a0057fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a0057fe:	2b00      	cmp	r3, #0
1a005800:	f000 8189 	beq.w	1a005b16 <_dtoa_r+0x9e6>
1a005804:	2e00      	cmp	r6, #0
1a005806:	dd10      	ble.n	1a00582a <_dtoa_r+0x6fa>
1a005808:	4629      	mov	r1, r5
1a00580a:	4632      	mov	r2, r6
1a00580c:	4650      	mov	r0, sl
1a00580e:	f000 ffdf 	bl	1a0067d0 <__pow5mult>
1a005812:	465a      	mov	r2, fp
1a005814:	4601      	mov	r1, r0
1a005816:	4605      	mov	r5, r0
1a005818:	4650      	mov	r0, sl
1a00581a:	f000 ff41 	bl	1a0066a0 <__multiply>
1a00581e:	4659      	mov	r1, fp
1a005820:	4607      	mov	r7, r0
1a005822:	4650      	mov	r0, sl
1a005824:	f000 fe92 	bl	1a00654c <_Bfree>
1a005828:	46bb      	mov	fp, r7
1a00582a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a00582c:	1b9a      	subs	r2, r3, r6
1a00582e:	f040 8173 	bne.w	1a005b18 <_dtoa_r+0x9e8>
1a005832:	2101      	movs	r1, #1
1a005834:	4650      	mov	r0, sl
1a005836:	f000 ff29 	bl	1a00668c <__i2b>
1a00583a:	f1b9 0f00 	cmp.w	r9, #0
1a00583e:	4607      	mov	r7, r0
1a005840:	f300 808e 	bgt.w	1a005960 <_dtoa_r+0x830>
1a005844:	9b02      	ldr	r3, [sp, #8]
1a005846:	2b01      	cmp	r3, #1
1a005848:	f340 8171 	ble.w	1a005b2e <_dtoa_r+0x9fe>
1a00584c:	2600      	movs	r6, #0
1a00584e:	2001      	movs	r0, #1
1a005850:	f1b9 0f00 	cmp.w	r9, #0
1a005854:	f040 808f 	bne.w	1a005976 <_dtoa_r+0x846>
1a005858:	4440      	add	r0, r8
1a00585a:	f010 001f 	ands.w	r0, r0, #31
1a00585e:	d075      	beq.n	1a00594c <_dtoa_r+0x81c>
1a005860:	f1c0 0320 	rsb	r3, r0, #32
1a005864:	2b04      	cmp	r3, #4
1a005866:	f340 836d 	ble.w	1a005f44 <_dtoa_r+0xe14>
1a00586a:	f1c0 001c 	rsb	r0, r0, #28
1a00586e:	9b08      	ldr	r3, [sp, #32]
1a005870:	4403      	add	r3, r0
1a005872:	9308      	str	r3, [sp, #32]
1a005874:	4404      	add	r4, r0
1a005876:	4480      	add	r8, r0
1a005878:	9b08      	ldr	r3, [sp, #32]
1a00587a:	2b00      	cmp	r3, #0
1a00587c:	dd05      	ble.n	1a00588a <_dtoa_r+0x75a>
1a00587e:	4659      	mov	r1, fp
1a005880:	461a      	mov	r2, r3
1a005882:	4650      	mov	r0, sl
1a005884:	f000 fff4 	bl	1a006870 <__lshift>
1a005888:	4683      	mov	fp, r0
1a00588a:	f1b8 0f00 	cmp.w	r8, #0
1a00588e:	dd05      	ble.n	1a00589c <_dtoa_r+0x76c>
1a005890:	4639      	mov	r1, r7
1a005892:	4642      	mov	r2, r8
1a005894:	4650      	mov	r0, sl
1a005896:	f000 ffeb 	bl	1a006870 <__lshift>
1a00589a:	4607      	mov	r7, r0
1a00589c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1a00589e:	2b00      	cmp	r3, #0
1a0058a0:	f040 811e 	bne.w	1a005ae0 <_dtoa_r+0x9b0>
1a0058a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0058a6:	2b00      	cmp	r3, #0
1a0058a8:	f340 80f5 	ble.w	1a005a96 <_dtoa_r+0x966>
1a0058ac:	9b06      	ldr	r3, [sp, #24]
1a0058ae:	3301      	adds	r3, #1
1a0058b0:	9306      	str	r3, [sp, #24]
1a0058b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a0058b4:	2b00      	cmp	r3, #0
1a0058b6:	d177      	bne.n	1a0059a8 <_dtoa_r+0x878>
1a0058b8:	9c03      	ldr	r4, [sp, #12]
1a0058ba:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
1a0058be:	2601      	movs	r6, #1
1a0058c0:	e003      	b.n	1a0058ca <_dtoa_r+0x79a>
1a0058c2:	f000 fe4d 	bl	1a006560 <__multadd>
1a0058c6:	3601      	adds	r6, #1
1a0058c8:	4683      	mov	fp, r0
1a0058ca:	4639      	mov	r1, r7
1a0058cc:	4658      	mov	r0, fp
1a0058ce:	f7ff fb9b 	bl	1a005008 <quorem>
1a0058d2:	4546      	cmp	r6, r8
1a0058d4:	f100 0930 	add.w	r9, r0, #48	; 0x30
1a0058d8:	f804 9b01 	strb.w	r9, [r4], #1
1a0058dc:	f04f 0300 	mov.w	r3, #0
1a0058e0:	f04f 020a 	mov.w	r2, #10
1a0058e4:	4659      	mov	r1, fp
1a0058e6:	4650      	mov	r0, sl
1a0058e8:	dbeb      	blt.n	1a0058c2 <_dtoa_r+0x792>
1a0058ea:	2300      	movs	r3, #0
1a0058ec:	9300      	str	r3, [sp, #0]
1a0058ee:	4659      	mov	r1, fp
1a0058f0:	2201      	movs	r2, #1
1a0058f2:	4650      	mov	r0, sl
1a0058f4:	f000 ffbc 	bl	1a006870 <__lshift>
1a0058f8:	4639      	mov	r1, r7
1a0058fa:	4683      	mov	fp, r0
1a0058fc:	f001 f812 	bl	1a006924 <__mcmp>
1a005900:	2800      	cmp	r0, #0
1a005902:	f814 2c01 	ldrb.w	r2, [r4, #-1]
1a005906:	f340 816f 	ble.w	1a005be8 <_dtoa_r+0xab8>
1a00590a:	1e63      	subs	r3, r4, #1
1a00590c:	9903      	ldr	r1, [sp, #12]
1a00590e:	e004      	b.n	1a00591a <_dtoa_r+0x7ea>
1a005910:	4299      	cmp	r1, r3
1a005912:	f000 8177 	beq.w	1a005c04 <_dtoa_r+0xad4>
1a005916:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
1a00591a:	2a39      	cmp	r2, #57	; 0x39
1a00591c:	f103 0401 	add.w	r4, r3, #1
1a005920:	d0f6      	beq.n	1a005910 <_dtoa_r+0x7e0>
1a005922:	3201      	adds	r2, #1
1a005924:	701a      	strb	r2, [r3, #0]
1a005926:	4639      	mov	r1, r7
1a005928:	4650      	mov	r0, sl
1a00592a:	f000 fe0f 	bl	1a00654c <_Bfree>
1a00592e:	2d00      	cmp	r5, #0
1a005930:	f43f ae25 	beq.w	1a00557e <_dtoa_r+0x44e>
1a005934:	9900      	ldr	r1, [sp, #0]
1a005936:	b121      	cbz	r1, 1a005942 <_dtoa_r+0x812>
1a005938:	42a9      	cmp	r1, r5
1a00593a:	d002      	beq.n	1a005942 <_dtoa_r+0x812>
1a00593c:	4650      	mov	r0, sl
1a00593e:	f000 fe05 	bl	1a00654c <_Bfree>
1a005942:	4629      	mov	r1, r5
1a005944:	4650      	mov	r0, sl
1a005946:	f000 fe01 	bl	1a00654c <_Bfree>
1a00594a:	e618      	b.n	1a00557e <_dtoa_r+0x44e>
1a00594c:	201c      	movs	r0, #28
1a00594e:	e78e      	b.n	1a00586e <_dtoa_r+0x73e>
1a005950:	2401      	movs	r4, #1
1a005952:	e4b6      	b.n	1a0052c2 <_dtoa_r+0x192>
1a005954:	f1c3 0620 	rsb	r6, r3, #32
1a005958:	9b00      	ldr	r3, [sp, #0]
1a00595a:	fa03 f006 	lsl.w	r0, r3, r6
1a00595e:	e447      	b.n	1a0051f0 <_dtoa_r+0xc0>
1a005960:	4601      	mov	r1, r0
1a005962:	464a      	mov	r2, r9
1a005964:	4650      	mov	r0, sl
1a005966:	f000 ff33 	bl	1a0067d0 <__pow5mult>
1a00596a:	9b02      	ldr	r3, [sp, #8]
1a00596c:	2b01      	cmp	r3, #1
1a00596e:	4607      	mov	r7, r0
1a005970:	f340 81b2 	ble.w	1a005cd8 <_dtoa_r+0xba8>
1a005974:	2600      	movs	r6, #0
1a005976:	693b      	ldr	r3, [r7, #16]
1a005978:	eb07 0383 	add.w	r3, r7, r3, lsl #2
1a00597c:	6918      	ldr	r0, [r3, #16]
1a00597e:	f000 fe35 	bl	1a0065ec <__hi0bits>
1a005982:	f1c0 0020 	rsb	r0, r0, #32
1a005986:	e767      	b.n	1a005858 <_dtoa_r+0x728>
1a005988:	40240000 	.word	0x40240000
1a00598c:	1a0076bc 	.word	0x1a0076bc
1a005990:	4629      	mov	r1, r5
1a005992:	2300      	movs	r3, #0
1a005994:	220a      	movs	r2, #10
1a005996:	4650      	mov	r0, sl
1a005998:	f000 fde2 	bl	1a006560 <__multadd>
1a00599c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a00599e:	2b00      	cmp	r3, #0
1a0059a0:	4605      	mov	r5, r0
1a0059a2:	f340 82c1 	ble.w	1a005f28 <_dtoa_r+0xdf8>
1a0059a6:	9309      	str	r3, [sp, #36]	; 0x24
1a0059a8:	2c00      	cmp	r4, #0
1a0059aa:	f300 810d 	bgt.w	1a005bc8 <_dtoa_r+0xa98>
1a0059ae:	2e00      	cmp	r6, #0
1a0059b0:	f040 81c5 	bne.w	1a005d3e <_dtoa_r+0xc0e>
1a0059b4:	46a8      	mov	r8, r5
1a0059b6:	9b00      	ldr	r3, [sp, #0]
1a0059b8:	9902      	ldr	r1, [sp, #8]
1a0059ba:	9e03      	ldr	r6, [sp, #12]
1a0059bc:	f003 0201 	and.w	r2, r3, #1
1a0059c0:	920b      	str	r2, [sp, #44]	; 0x2c
1a0059c2:	430a      	orrs	r2, r1
1a0059c4:	920a      	str	r2, [sp, #40]	; 0x28
1a0059c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a0059c8:	1e73      	subs	r3, r6, #1
1a0059ca:	441a      	add	r2, r3
1a0059cc:	9209      	str	r2, [sp, #36]	; 0x24
1a0059ce:	463c      	mov	r4, r7
1a0059d0:	4621      	mov	r1, r4
1a0059d2:	4658      	mov	r0, fp
1a0059d4:	f7ff fb18 	bl	1a005008 <quorem>
1a0059d8:	4629      	mov	r1, r5
1a0059da:	9000      	str	r0, [sp, #0]
1a0059dc:	4658      	mov	r0, fp
1a0059de:	f000 ffa1 	bl	1a006924 <__mcmp>
1a0059e2:	4642      	mov	r2, r8
1a0059e4:	4607      	mov	r7, r0
1a0059e6:	4621      	mov	r1, r4
1a0059e8:	4650      	mov	r0, sl
1a0059ea:	f000 ffb7 	bl	1a00695c <__mdiff>
1a0059ee:	9b00      	ldr	r3, [sp, #0]
1a0059f0:	f103 0230 	add.w	r2, r3, #48	; 0x30
1a0059f4:	68c3      	ldr	r3, [r0, #12]
1a0059f6:	4681      	mov	r9, r0
1a0059f8:	2b00      	cmp	r3, #0
1a0059fa:	d13e      	bne.n	1a005a7a <_dtoa_r+0x94a>
1a0059fc:	4601      	mov	r1, r0
1a0059fe:	4658      	mov	r0, fp
1a005a00:	9208      	str	r2, [sp, #32]
1a005a02:	f000 ff8f 	bl	1a006924 <__mcmp>
1a005a06:	4649      	mov	r1, r9
1a005a08:	9004      	str	r0, [sp, #16]
1a005a0a:	4650      	mov	r0, sl
1a005a0c:	f000 fd9e 	bl	1a00654c <_Bfree>
1a005a10:	9b04      	ldr	r3, [sp, #16]
1a005a12:	9a08      	ldr	r2, [sp, #32]
1a005a14:	b91b      	cbnz	r3, 1a005a1e <_dtoa_r+0x8ee>
1a005a16:	990a      	ldr	r1, [sp, #40]	; 0x28
1a005a18:	2900      	cmp	r1, #0
1a005a1a:	f000 8271 	beq.w	1a005f00 <_dtoa_r+0xdd0>
1a005a1e:	2f00      	cmp	r7, #0
1a005a20:	f106 0901 	add.w	r9, r6, #1
1a005a24:	f2c0 816e 	blt.w	1a005d04 <_dtoa_r+0xbd4>
1a005a28:	9902      	ldr	r1, [sp, #8]
1a005a2a:	430f      	orrs	r7, r1
1a005a2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
1a005a2e:	4339      	orrs	r1, r7
1a005a30:	f000 8168 	beq.w	1a005d04 <_dtoa_r+0xbd4>
1a005a34:	2b00      	cmp	r3, #0
1a005a36:	f300 81a2 	bgt.w	1a005d7e <_dtoa_r+0xc4e>
1a005a3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a005a3c:	7032      	strb	r2, [r6, #0]
1a005a3e:	42b3      	cmp	r3, r6
1a005a40:	f000 81a9 	beq.w	1a005d96 <_dtoa_r+0xc66>
1a005a44:	4659      	mov	r1, fp
1a005a46:	2300      	movs	r3, #0
1a005a48:	220a      	movs	r2, #10
1a005a4a:	4650      	mov	r0, sl
1a005a4c:	f000 fd88 	bl	1a006560 <__multadd>
1a005a50:	4545      	cmp	r5, r8
1a005a52:	4683      	mov	fp, r0
1a005a54:	4629      	mov	r1, r5
1a005a56:	f04f 0300 	mov.w	r3, #0
1a005a5a:	f04f 020a 	mov.w	r2, #10
1a005a5e:	4650      	mov	r0, sl
1a005a60:	d013      	beq.n	1a005a8a <_dtoa_r+0x95a>
1a005a62:	f000 fd7d 	bl	1a006560 <__multadd>
1a005a66:	4641      	mov	r1, r8
1a005a68:	4605      	mov	r5, r0
1a005a6a:	2300      	movs	r3, #0
1a005a6c:	220a      	movs	r2, #10
1a005a6e:	4650      	mov	r0, sl
1a005a70:	f000 fd76 	bl	1a006560 <__multadd>
1a005a74:	464e      	mov	r6, r9
1a005a76:	4680      	mov	r8, r0
1a005a78:	e7aa      	b.n	1a0059d0 <_dtoa_r+0x8a0>
1a005a7a:	4601      	mov	r1, r0
1a005a7c:	4650      	mov	r0, sl
1a005a7e:	9204      	str	r2, [sp, #16]
1a005a80:	f000 fd64 	bl	1a00654c <_Bfree>
1a005a84:	2301      	movs	r3, #1
1a005a86:	9a04      	ldr	r2, [sp, #16]
1a005a88:	e7c9      	b.n	1a005a1e <_dtoa_r+0x8ee>
1a005a8a:	f000 fd69 	bl	1a006560 <__multadd>
1a005a8e:	464e      	mov	r6, r9
1a005a90:	4605      	mov	r5, r0
1a005a92:	4680      	mov	r8, r0
1a005a94:	e79c      	b.n	1a0059d0 <_dtoa_r+0x8a0>
1a005a96:	9b02      	ldr	r3, [sp, #8]
1a005a98:	2b02      	cmp	r3, #2
1a005a9a:	f340 8082 	ble.w	1a005ba2 <_dtoa_r+0xa72>
1a005a9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a005aa0:	2b00      	cmp	r3, #0
1a005aa2:	f47f adae 	bne.w	1a005602 <_dtoa_r+0x4d2>
1a005aa6:	4639      	mov	r1, r7
1a005aa8:	2205      	movs	r2, #5
1a005aaa:	4650      	mov	r0, sl
1a005aac:	f000 fd58 	bl	1a006560 <__multadd>
1a005ab0:	4601      	mov	r1, r0
1a005ab2:	4607      	mov	r7, r0
1a005ab4:	4658      	mov	r0, fp
1a005ab6:	f000 ff35 	bl	1a006924 <__mcmp>
1a005aba:	2800      	cmp	r0, #0
1a005abc:	f77f ada1 	ble.w	1a005602 <_dtoa_r+0x4d2>
1a005ac0:	9c03      	ldr	r4, [sp, #12]
1a005ac2:	9b06      	ldr	r3, [sp, #24]
1a005ac4:	2231      	movs	r2, #49	; 0x31
1a005ac6:	f804 2b01 	strb.w	r2, [r4], #1
1a005aca:	3301      	adds	r3, #1
1a005acc:	3301      	adds	r3, #1
1a005ace:	4639      	mov	r1, r7
1a005ad0:	4650      	mov	r0, sl
1a005ad2:	9306      	str	r3, [sp, #24]
1a005ad4:	f000 fd3a 	bl	1a00654c <_Bfree>
1a005ad8:	2d00      	cmp	r5, #0
1a005ada:	f47f af32 	bne.w	1a005942 <_dtoa_r+0x812>
1a005ade:	e54e      	b.n	1a00557e <_dtoa_r+0x44e>
1a005ae0:	4639      	mov	r1, r7
1a005ae2:	4658      	mov	r0, fp
1a005ae4:	f000 ff1e 	bl	1a006924 <__mcmp>
1a005ae8:	2800      	cmp	r0, #0
1a005aea:	f6bf aedb 	bge.w	1a0058a4 <_dtoa_r+0x774>
1a005aee:	4659      	mov	r1, fp
1a005af0:	2300      	movs	r3, #0
1a005af2:	220a      	movs	r2, #10
1a005af4:	4650      	mov	r0, sl
1a005af6:	f000 fd33 	bl	1a006560 <__multadd>
1a005afa:	9b06      	ldr	r3, [sp, #24]
1a005afc:	f103 38ff 	add.w	r8, r3, #4294967295
1a005b00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a005b02:	4683      	mov	fp, r0
1a005b04:	2b00      	cmp	r3, #0
1a005b06:	f47f af43 	bne.w	1a005990 <_dtoa_r+0x860>
1a005b0a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a005b0c:	2b00      	cmp	r3, #0
1a005b0e:	f340 8202 	ble.w	1a005f16 <_dtoa_r+0xde6>
1a005b12:	9309      	str	r3, [sp, #36]	; 0x24
1a005b14:	e6d0      	b.n	1a0058b8 <_dtoa_r+0x788>
1a005b16:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1a005b18:	4659      	mov	r1, fp
1a005b1a:	4650      	mov	r0, sl
1a005b1c:	f000 fe58 	bl	1a0067d0 <__pow5mult>
1a005b20:	4683      	mov	fp, r0
1a005b22:	e686      	b.n	1a005832 <_dtoa_r+0x702>
1a005b24:	4b9f      	ldr	r3, [pc, #636]	; (1a005da4 <_dtoa_r+0xc74>)
1a005b26:	9303      	str	r3, [sp, #12]
1a005b28:	3303      	adds	r3, #3
1a005b2a:	f7ff bbe5 	b.w	1a0052f8 <_dtoa_r+0x1c8>
1a005b2e:	e9dd 1200 	ldrd	r1, r2, [sp]
1a005b32:	2900      	cmp	r1, #0
1a005b34:	f47f ae8a 	bne.w	1a00584c <_dtoa_r+0x71c>
1a005b38:	f3c2 0313 	ubfx	r3, r2, #0, #20
1a005b3c:	2b00      	cmp	r3, #0
1a005b3e:	f000 80d5 	beq.w	1a005cec <_dtoa_r+0xbbc>
1a005b42:	9e00      	ldr	r6, [sp, #0]
1a005b44:	e683      	b.n	1a00584e <_dtoa_r+0x71e>
1a005b46:	2301      	movs	r3, #1
1a005b48:	930b      	str	r3, [sp, #44]	; 0x2c
1a005b4a:	980a      	ldr	r0, [sp, #40]	; 0x28
1a005b4c:	2800      	cmp	r0, #0
1a005b4e:	dd46      	ble.n	1a005bde <_dtoa_r+0xaae>
1a005b50:	900f      	str	r0, [sp, #60]	; 0x3c
1a005b52:	9009      	str	r0, [sp, #36]	; 0x24
1a005b54:	2100      	movs	r1, #0
1a005b56:	2817      	cmp	r0, #23
1a005b58:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
1a005b5c:	9d09      	ldr	r5, [sp, #36]	; 0x24
1a005b5e:	f77f ac19 	ble.w	1a005394 <_dtoa_r+0x264>
1a005b62:	2201      	movs	r2, #1
1a005b64:	2304      	movs	r3, #4
1a005b66:	005b      	lsls	r3, r3, #1
1a005b68:	f103 0614 	add.w	r6, r3, #20
1a005b6c:	42b0      	cmp	r0, r6
1a005b6e:	4611      	mov	r1, r2
1a005b70:	f102 0201 	add.w	r2, r2, #1
1a005b74:	d2f7      	bcs.n	1a005b66 <_dtoa_r+0xa36>
1a005b76:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
1a005b7a:	e40b      	b.n	1a005394 <_dtoa_r+0x264>
1a005b7c:	2301      	movs	r3, #1
1a005b7e:	930b      	str	r3, [sp, #44]	; 0x2c
1a005b80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a005b82:	9a06      	ldr	r2, [sp, #24]
1a005b84:	4413      	add	r3, r2
1a005b86:	930f      	str	r3, [sp, #60]	; 0x3c
1a005b88:	3301      	adds	r3, #1
1a005b8a:	2b01      	cmp	r3, #1
1a005b8c:	4618      	mov	r0, r3
1a005b8e:	9309      	str	r3, [sp, #36]	; 0x24
1a005b90:	bfb8      	it	lt
1a005b92:	2001      	movlt	r0, #1
1a005b94:	e7de      	b.n	1a005b54 <_dtoa_r+0xa24>
1a005b96:	2300      	movs	r3, #0
1a005b98:	930b      	str	r3, [sp, #44]	; 0x2c
1a005b9a:	e7f1      	b.n	1a005b80 <_dtoa_r+0xa50>
1a005b9c:	2300      	movs	r3, #0
1a005b9e:	930b      	str	r3, [sp, #44]	; 0x2c
1a005ba0:	e7d3      	b.n	1a005b4a <_dtoa_r+0xa1a>
1a005ba2:	9b06      	ldr	r3, [sp, #24]
1a005ba4:	3301      	adds	r3, #1
1a005ba6:	9306      	str	r3, [sp, #24]
1a005ba8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a005baa:	2b00      	cmp	r3, #0
1a005bac:	f47f aefc 	bne.w	1a0059a8 <_dtoa_r+0x878>
1a005bb0:	4639      	mov	r1, r7
1a005bb2:	4658      	mov	r0, fp
1a005bb4:	f7ff fa28 	bl	1a005008 <quorem>
1a005bb8:	9c03      	ldr	r4, [sp, #12]
1a005bba:	f100 0930 	add.w	r9, r0, #48	; 0x30
1a005bbe:	2300      	movs	r3, #0
1a005bc0:	f804 9b01 	strb.w	r9, [r4], #1
1a005bc4:	9300      	str	r3, [sp, #0]
1a005bc6:	e692      	b.n	1a0058ee <_dtoa_r+0x7be>
1a005bc8:	4629      	mov	r1, r5
1a005bca:	4622      	mov	r2, r4
1a005bcc:	4650      	mov	r0, sl
1a005bce:	f000 fe4f 	bl	1a006870 <__lshift>
1a005bd2:	4605      	mov	r5, r0
1a005bd4:	e6eb      	b.n	1a0059ae <_dtoa_r+0x87e>
1a005bd6:	1b9e      	subs	r6, r3, r6
1a005bd8:	e5ce      	b.n	1a005778 <_dtoa_r+0x648>
1a005bda:	2602      	movs	r6, #2
1a005bdc:	e403      	b.n	1a0053e6 <_dtoa_r+0x2b6>
1a005bde:	2501      	movs	r5, #1
1a005be0:	e9cd 5509 	strd	r5, r5, [sp, #36]	; 0x24
1a005be4:	f7ff bbd2 	b.w	1a00538c <_dtoa_r+0x25c>
1a005be8:	d103      	bne.n	1a005bf2 <_dtoa_r+0xac2>
1a005bea:	f019 0f01 	tst.w	r9, #1
1a005bee:	f47f ae8c 	bne.w	1a00590a <_dtoa_r+0x7da>
1a005bf2:	1e63      	subs	r3, r4, #1
1a005bf4:	e001      	b.n	1a005bfa <_dtoa_r+0xaca>
1a005bf6:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
1a005bfa:	2a30      	cmp	r2, #48	; 0x30
1a005bfc:	f103 0401 	add.w	r4, r3, #1
1a005c00:	d0f9      	beq.n	1a005bf6 <_dtoa_r+0xac6>
1a005c02:	e690      	b.n	1a005926 <_dtoa_r+0x7f6>
1a005c04:	9a06      	ldr	r2, [sp, #24]
1a005c06:	3201      	adds	r2, #1
1a005c08:	9206      	str	r2, [sp, #24]
1a005c0a:	9a03      	ldr	r2, [sp, #12]
1a005c0c:	2331      	movs	r3, #49	; 0x31
1a005c0e:	7013      	strb	r3, [r2, #0]
1a005c10:	e689      	b.n	1a005926 <_dtoa_r+0x7f6>
1a005c12:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1a005c14:	2a00      	cmp	r2, #0
1a005c16:	f000 8126 	beq.w	1a005e66 <_dtoa_r+0xd36>
1a005c1a:	f203 4333 	addw	r3, r3, #1075	; 0x433
1a005c1e:	9a08      	ldr	r2, [sp, #32]
1a005c20:	9e0c      	ldr	r6, [sp, #48]	; 0x30
1a005c22:	4614      	mov	r4, r2
1a005c24:	441a      	add	r2, r3
1a005c26:	4498      	add	r8, r3
1a005c28:	9208      	str	r2, [sp, #32]
1a005c2a:	e5ae      	b.n	1a00578a <_dtoa_r+0x65a>
1a005c2c:	4630      	mov	r0, r6
1a005c2e:	f7fb ff57 	bl	1a001ae0 <__aeabi_i2d>
1a005c32:	e9dd 2300 	ldrd	r2, r3, [sp]
1a005c36:	f7fb ffbd 	bl	1a001bb4 <__aeabi_dmul>
1a005c3a:	2200      	movs	r2, #0
1a005c3c:	4b5a      	ldr	r3, [pc, #360]	; (1a005da8 <_dtoa_r+0xc78>)
1a005c3e:	f7fb fe03 	bl	1a001848 <__adddf3>
1a005c42:	4604      	mov	r4, r0
1a005c44:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
1a005c48:	2200      	movs	r2, #0
1a005c4a:	4b58      	ldr	r3, [pc, #352]	; (1a005dac <_dtoa_r+0xc7c>)
1a005c4c:	e9dd 0100 	ldrd	r0, r1, [sp]
1a005c50:	f7fb fdf8 	bl	1a001844 <__aeabi_dsub>
1a005c54:	4622      	mov	r2, r4
1a005c56:	462b      	mov	r3, r5
1a005c58:	4606      	mov	r6, r0
1a005c5a:	460f      	mov	r7, r1
1a005c5c:	f7fc fa3a 	bl	1a0020d4 <__aeabi_dcmpgt>
1a005c60:	2800      	cmp	r0, #0
1a005c62:	f040 8089 	bne.w	1a005d78 <_dtoa_r+0xc48>
1a005c66:	4622      	mov	r2, r4
1a005c68:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
1a005c6c:	4630      	mov	r0, r6
1a005c6e:	4639      	mov	r1, r7
1a005c70:	f7fc fa12 	bl	1a002098 <__aeabi_dcmplt>
1a005c74:	2800      	cmp	r0, #0
1a005c76:	f43f ac9c 	beq.w	1a0055b2 <_dtoa_r+0x482>
1a005c7a:	2700      	movs	r7, #0
1a005c7c:	463d      	mov	r5, r7
1a005c7e:	e4c0      	b.n	1a005602 <_dtoa_r+0x4d2>
1a005c80:	f000 80f5 	beq.w	1a005e6e <_dtoa_r+0xd3e>
1a005c84:	9b06      	ldr	r3, [sp, #24]
1a005c86:	425c      	negs	r4, r3
1a005c88:	4b49      	ldr	r3, [pc, #292]	; (1a005db0 <_dtoa_r+0xc80>)
1a005c8a:	f004 020f 	and.w	r2, r4, #15
1a005c8e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a005c92:	e9d3 2300 	ldrd	r2, r3, [r3]
1a005c96:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1a005c9a:	f7fb ff8b 	bl	1a001bb4 <__aeabi_dmul>
1a005c9e:	1124      	asrs	r4, r4, #4
1a005ca0:	e9cd 0100 	strd	r0, r1, [sp]
1a005ca4:	f000 80e3 	beq.w	1a005e6e <_dtoa_r+0xd3e>
1a005ca8:	4d42      	ldr	r5, [pc, #264]	; (1a005db4 <_dtoa_r+0xc84>)
1a005caa:	2300      	movs	r3, #0
1a005cac:	2602      	movs	r6, #2
1a005cae:	07e2      	lsls	r2, r4, #31
1a005cb0:	d505      	bpl.n	1a005cbe <_dtoa_r+0xb8e>
1a005cb2:	e9d5 2300 	ldrd	r2, r3, [r5]
1a005cb6:	f7fb ff7d 	bl	1a001bb4 <__aeabi_dmul>
1a005cba:	3601      	adds	r6, #1
1a005cbc:	2301      	movs	r3, #1
1a005cbe:	1064      	asrs	r4, r4, #1
1a005cc0:	f105 0508 	add.w	r5, r5, #8
1a005cc4:	d1f3      	bne.n	1a005cae <_dtoa_r+0xb7e>
1a005cc6:	2b00      	cmp	r3, #0
1a005cc8:	f43f aba6 	beq.w	1a005418 <_dtoa_r+0x2e8>
1a005ccc:	e9cd 0100 	strd	r0, r1, [sp]
1a005cd0:	f7ff bba2 	b.w	1a005418 <_dtoa_r+0x2e8>
1a005cd4:	900d      	str	r0, [sp, #52]	; 0x34
1a005cd6:	e564      	b.n	1a0057a2 <_dtoa_r+0x672>
1a005cd8:	e9dd 1200 	ldrd	r1, r2, [sp]
1a005cdc:	2900      	cmp	r1, #0
1a005cde:	f47f ae49 	bne.w	1a005974 <_dtoa_r+0x844>
1a005ce2:	f3c2 0313 	ubfx	r3, r2, #0, #20
1a005ce6:	2b00      	cmp	r3, #0
1a005ce8:	f47f ae44 	bne.w	1a005974 <_dtoa_r+0x844>
1a005cec:	4e32      	ldr	r6, [pc, #200]	; (1a005db8 <_dtoa_r+0xc88>)
1a005cee:	4016      	ands	r6, r2
1a005cf0:	2e00      	cmp	r6, #0
1a005cf2:	f43f adac 	beq.w	1a00584e <_dtoa_r+0x71e>
1a005cf6:	9b08      	ldr	r3, [sp, #32]
1a005cf8:	3301      	adds	r3, #1
1a005cfa:	9308      	str	r3, [sp, #32]
1a005cfc:	f108 0801 	add.w	r8, r8, #1
1a005d00:	2601      	movs	r6, #1
1a005d02:	e5a4      	b.n	1a00584e <_dtoa_r+0x71e>
1a005d04:	2b00      	cmp	r3, #0
1a005d06:	4627      	mov	r7, r4
1a005d08:	464c      	mov	r4, r9
1a005d0a:	4691      	mov	r9, r2
1a005d0c:	dd12      	ble.n	1a005d34 <_dtoa_r+0xc04>
1a005d0e:	4659      	mov	r1, fp
1a005d10:	2201      	movs	r2, #1
1a005d12:	4650      	mov	r0, sl
1a005d14:	f000 fdac 	bl	1a006870 <__lshift>
1a005d18:	4639      	mov	r1, r7
1a005d1a:	4683      	mov	fp, r0
1a005d1c:	f000 fe02 	bl	1a006924 <__mcmp>
1a005d20:	2800      	cmp	r0, #0
1a005d22:	f340 80df 	ble.w	1a005ee4 <_dtoa_r+0xdb4>
1a005d26:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
1a005d2a:	f000 80d0 	beq.w	1a005ece <_dtoa_r+0xd9e>
1a005d2e:	9b00      	ldr	r3, [sp, #0]
1a005d30:	f103 0931 	add.w	r9, r3, #49	; 0x31
1a005d34:	9500      	str	r5, [sp, #0]
1a005d36:	f886 9000 	strb.w	r9, [r6]
1a005d3a:	4645      	mov	r5, r8
1a005d3c:	e5f3      	b.n	1a005926 <_dtoa_r+0x7f6>
1a005d3e:	6869      	ldr	r1, [r5, #4]
1a005d40:	4650      	mov	r0, sl
1a005d42:	f000 fbdd 	bl	1a006500 <_Balloc>
1a005d46:	692b      	ldr	r3, [r5, #16]
1a005d48:	3302      	adds	r3, #2
1a005d4a:	009a      	lsls	r2, r3, #2
1a005d4c:	4604      	mov	r4, r0
1a005d4e:	f105 010c 	add.w	r1, r5, #12
1a005d52:	300c      	adds	r0, #12
1a005d54:	f7fd f93e 	bl	1a002fd4 <memcpy>
1a005d58:	4621      	mov	r1, r4
1a005d5a:	2201      	movs	r2, #1
1a005d5c:	4650      	mov	r0, sl
1a005d5e:	f000 fd87 	bl	1a006870 <__lshift>
1a005d62:	4680      	mov	r8, r0
1a005d64:	e627      	b.n	1a0059b6 <_dtoa_r+0x886>
1a005d66:	f8dd b000 	ldr.w	fp, [sp]
1a005d6a:	f8dd a008 	ldr.w	sl, [sp, #8]
1a005d6e:	e406      	b.n	1a00557e <_dtoa_r+0x44e>
1a005d70:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
1a005d74:	1a9c      	subs	r4, r3, r2
1a005d76:	e508      	b.n	1a00578a <_dtoa_r+0x65a>
1a005d78:	2700      	movs	r7, #0
1a005d7a:	463d      	mov	r5, r7
1a005d7c:	e6a0      	b.n	1a005ac0 <_dtoa_r+0x990>
1a005d7e:	2a39      	cmp	r2, #57	; 0x39
1a005d80:	4627      	mov	r7, r4
1a005d82:	464c      	mov	r4, r9
1a005d84:	f000 80a3 	beq.w	1a005ece <_dtoa_r+0xd9e>
1a005d88:	f102 0901 	add.w	r9, r2, #1
1a005d8c:	9500      	str	r5, [sp, #0]
1a005d8e:	f886 9000 	strb.w	r9, [r6]
1a005d92:	4645      	mov	r5, r8
1a005d94:	e5c7      	b.n	1a005926 <_dtoa_r+0x7f6>
1a005d96:	4627      	mov	r7, r4
1a005d98:	9500      	str	r5, [sp, #0]
1a005d9a:	464c      	mov	r4, r9
1a005d9c:	4645      	mov	r5, r8
1a005d9e:	4691      	mov	r9, r2
1a005da0:	e5a5      	b.n	1a0058ee <_dtoa_r+0x7be>
1a005da2:	bf00      	nop
1a005da4:	1a0076e0 	.word	0x1a0076e0
1a005da8:	401c0000 	.word	0x401c0000
1a005dac:	40140000 	.word	0x40140000
1a005db0:	1a007718 	.word	0x1a007718
1a005db4:	1a0076f0 	.word	0x1a0076f0
1a005db8:	7ff00000 	.word	0x7ff00000
1a005dbc:	e9dd 0100 	ldrd	r0, r1, [sp]
1a005dc0:	f7fb fef8 	bl	1a001bb4 <__aeabi_dmul>
1a005dc4:	9b03      	ldr	r3, [sp, #12]
1a005dc6:	701d      	strb	r5, [r3, #0]
1a005dc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a005dca:	2b01      	cmp	r3, #1
1a005dcc:	e9cd 0100 	strd	r0, r1, [sp]
1a005dd0:	d023      	beq.n	1a005e1a <_dtoa_r+0xcea>
1a005dd2:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a005dd4:	9a03      	ldr	r2, [sp, #12]
1a005dd6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
1a005dda:	4413      	add	r3, r2
1a005ddc:	46c1      	mov	r9, r8
1a005dde:	4698      	mov	r8, r3
1a005de0:	2200      	movs	r2, #0
1a005de2:	4b64      	ldr	r3, [pc, #400]	; (1a005f74 <_dtoa_r+0xe44>)
1a005de4:	4630      	mov	r0, r6
1a005de6:	4639      	mov	r1, r7
1a005de8:	f7fb fee4 	bl	1a001bb4 <__aeabi_dmul>
1a005dec:	460f      	mov	r7, r1
1a005dee:	4606      	mov	r6, r0
1a005df0:	f001 fa60 	bl	1a0072b4 <__aeabi_d2iz>
1a005df4:	4605      	mov	r5, r0
1a005df6:	f7fb fe73 	bl	1a001ae0 <__aeabi_i2d>
1a005dfa:	3530      	adds	r5, #48	; 0x30
1a005dfc:	4602      	mov	r2, r0
1a005dfe:	460b      	mov	r3, r1
1a005e00:	4630      	mov	r0, r6
1a005e02:	4639      	mov	r1, r7
1a005e04:	f7fb fd1e 	bl	1a001844 <__aeabi_dsub>
1a005e08:	f804 5b01 	strb.w	r5, [r4], #1
1a005e0c:	45a0      	cmp	r8, r4
1a005e0e:	4606      	mov	r6, r0
1a005e10:	460f      	mov	r7, r1
1a005e12:	d1e5      	bne.n	1a005de0 <_dtoa_r+0xcb0>
1a005e14:	46c8      	mov	r8, r9
1a005e16:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
1a005e1a:	4b57      	ldr	r3, [pc, #348]	; (1a005f78 <_dtoa_r+0xe48>)
1a005e1c:	2200      	movs	r2, #0
1a005e1e:	e9dd 0100 	ldrd	r0, r1, [sp]
1a005e22:	f7fb fd11 	bl	1a001848 <__adddf3>
1a005e26:	4632      	mov	r2, r6
1a005e28:	463b      	mov	r3, r7
1a005e2a:	f7fc f935 	bl	1a002098 <__aeabi_dcmplt>
1a005e2e:	2800      	cmp	r0, #0
1a005e30:	d152      	bne.n	1a005ed8 <_dtoa_r+0xda8>
1a005e32:	e9dd 2300 	ldrd	r2, r3, [sp]
1a005e36:	2000      	movs	r0, #0
1a005e38:	494f      	ldr	r1, [pc, #316]	; (1a005f78 <_dtoa_r+0xe48>)
1a005e3a:	f7fb fd03 	bl	1a001844 <__aeabi_dsub>
1a005e3e:	4632      	mov	r2, r6
1a005e40:	463b      	mov	r3, r7
1a005e42:	f7fc f947 	bl	1a0020d4 <__aeabi_dcmpgt>
1a005e46:	2800      	cmp	r0, #0
1a005e48:	f43f abb3 	beq.w	1a0055b2 <_dtoa_r+0x482>
1a005e4c:	e000      	b.n	1a005e50 <_dtoa_r+0xd20>
1a005e4e:	4614      	mov	r4, r2
1a005e50:	f814 3c01 	ldrb.w	r3, [r4, #-1]
1a005e54:	2b30      	cmp	r3, #48	; 0x30
1a005e56:	f104 32ff 	add.w	r2, r4, #4294967295
1a005e5a:	d0f8      	beq.n	1a005e4e <_dtoa_r+0xd1e>
1a005e5c:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a005e5e:	3301      	adds	r3, #1
1a005e60:	9306      	str	r3, [sp, #24]
1a005e62:	f7ff bb8c 	b.w	1a00557e <_dtoa_r+0x44e>
1a005e66:	9b14      	ldr	r3, [sp, #80]	; 0x50
1a005e68:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
1a005e6c:	e6d7      	b.n	1a005c1e <_dtoa_r+0xaee>
1a005e6e:	2602      	movs	r6, #2
1a005e70:	f7ff bad2 	b.w	1a005418 <_dtoa_r+0x2e8>
1a005e74:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a005e76:	2b00      	cmp	r3, #0
1a005e78:	f43f aed8 	beq.w	1a005c2c <_dtoa_r+0xafc>
1a005e7c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
1a005e7e:	2f00      	cmp	r7, #0
1a005e80:	f77f ab97 	ble.w	1a0055b2 <_dtoa_r+0x482>
1a005e84:	2200      	movs	r2, #0
1a005e86:	4b3b      	ldr	r3, [pc, #236]	; (1a005f74 <_dtoa_r+0xe44>)
1a005e88:	4620      	mov	r0, r4
1a005e8a:	4629      	mov	r1, r5
1a005e8c:	f7fb fe92 	bl	1a001bb4 <__aeabi_dmul>
1a005e90:	4604      	mov	r4, r0
1a005e92:	460d      	mov	r5, r1
1a005e94:	1c70      	adds	r0, r6, #1
1a005e96:	e9cd 4500 	strd	r4, r5, [sp]
1a005e9a:	f7fb fe21 	bl	1a001ae0 <__aeabi_i2d>
1a005e9e:	4622      	mov	r2, r4
1a005ea0:	462b      	mov	r3, r5
1a005ea2:	f7fb fe87 	bl	1a001bb4 <__aeabi_dmul>
1a005ea6:	4b35      	ldr	r3, [pc, #212]	; (1a005f7c <_dtoa_r+0xe4c>)
1a005ea8:	2200      	movs	r2, #0
1a005eaa:	f7fb fccd 	bl	1a001848 <__adddf3>
1a005eae:	9b06      	ldr	r3, [sp, #24]
1a005eb0:	9710      	str	r7, [sp, #64]	; 0x40
1a005eb2:	3b01      	subs	r3, #1
1a005eb4:	4604      	mov	r4, r0
1a005eb6:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
1a005eba:	9312      	str	r3, [sp, #72]	; 0x48
1a005ebc:	f7ff bacf 	b.w	1a00545e <_dtoa_r+0x32e>
1a005ec0:	9a06      	ldr	r2, [sp, #24]
1a005ec2:	3201      	adds	r2, #1
1a005ec4:	9206      	str	r2, [sp, #24]
1a005ec6:	2231      	movs	r2, #49	; 0x31
1a005ec8:	701a      	strb	r2, [r3, #0]
1a005eca:	f7ff bb58 	b.w	1a00557e <_dtoa_r+0x44e>
1a005ece:	2239      	movs	r2, #57	; 0x39
1a005ed0:	9500      	str	r5, [sp, #0]
1a005ed2:	7032      	strb	r2, [r6, #0]
1a005ed4:	4645      	mov	r5, r8
1a005ed6:	e518      	b.n	1a00590a <_dtoa_r+0x7da>
1a005ed8:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a005eda:	3301      	adds	r3, #1
1a005edc:	9306      	str	r3, [sp, #24]
1a005ede:	f814 5c01 	ldrb.w	r5, [r4, #-1]
1a005ee2:	e427      	b.n	1a005734 <_dtoa_r+0x604>
1a005ee4:	f47f af26 	bne.w	1a005d34 <_dtoa_r+0xc04>
1a005ee8:	f019 0f01 	tst.w	r9, #1
1a005eec:	f47f af1b 	bne.w	1a005d26 <_dtoa_r+0xbf6>
1a005ef0:	e720      	b.n	1a005d34 <_dtoa_r+0xc04>
1a005ef2:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a005ef4:	3301      	adds	r3, #1
1a005ef6:	46da      	mov	sl, fp
1a005ef8:	9306      	str	r3, [sp, #24]
1a005efa:	f8dd b000 	ldr.w	fp, [sp]
1a005efe:	e419      	b.n	1a005734 <_dtoa_r+0x604>
1a005f00:	2a39      	cmp	r2, #57	; 0x39
1a005f02:	463b      	mov	r3, r7
1a005f04:	4691      	mov	r9, r2
1a005f06:	4627      	mov	r7, r4
1a005f08:	f106 0401 	add.w	r4, r6, #1
1a005f0c:	d0df      	beq.n	1a005ece <_dtoa_r+0xd9e>
1a005f0e:	2b00      	cmp	r3, #0
1a005f10:	f73f af0d 	bgt.w	1a005d2e <_dtoa_r+0xbfe>
1a005f14:	e70e      	b.n	1a005d34 <_dtoa_r+0xc04>
1a005f16:	9b02      	ldr	r3, [sp, #8]
1a005f18:	2b02      	cmp	r3, #2
1a005f1a:	f77f ae49 	ble.w	1a005bb0 <_dtoa_r+0xa80>
1a005f1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a005f20:	9309      	str	r3, [sp, #36]	; 0x24
1a005f22:	f8cd 8018 	str.w	r8, [sp, #24]
1a005f26:	e5ba      	b.n	1a005a9e <_dtoa_r+0x96e>
1a005f28:	9b02      	ldr	r3, [sp, #8]
1a005f2a:	2b02      	cmp	r3, #2
1a005f2c:	dcf7      	bgt.n	1a005f1e <_dtoa_r+0xdee>
1a005f2e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a005f30:	e539      	b.n	1a0059a6 <_dtoa_r+0x876>
1a005f32:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a005f34:	3301      	adds	r3, #1
1a005f36:	9306      	str	r3, [sp, #24]
1a005f38:	f7ff bbfc 	b.w	1a005734 <_dtoa_r+0x604>
1a005f3c:	4b10      	ldr	r3, [pc, #64]	; (1a005f80 <_dtoa_r+0xe50>)
1a005f3e:	9303      	str	r3, [sp, #12]
1a005f40:	f7ff b934 	b.w	1a0051ac <_dtoa_r+0x7c>
1a005f44:	f43f ac98 	beq.w	1a005878 <_dtoa_r+0x748>
1a005f48:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
1a005f4c:	e48f      	b.n	1a00586e <_dtoa_r+0x73e>
1a005f4e:	2400      	movs	r4, #0
1a005f50:	f8ca 4044 	str.w	r4, [sl, #68]	; 0x44
1a005f54:	4621      	mov	r1, r4
1a005f56:	4650      	mov	r0, sl
1a005f58:	f000 fad2 	bl	1a006500 <_Balloc>
1a005f5c:	f04f 33ff 	mov.w	r3, #4294967295
1a005f60:	e9cd 3409 	strd	r3, r4, [sp, #36]	; 0x24
1a005f64:	930f      	str	r3, [sp, #60]	; 0x3c
1a005f66:	2301      	movs	r3, #1
1a005f68:	9003      	str	r0, [sp, #12]
1a005f6a:	f8ca 0040 	str.w	r0, [sl, #64]	; 0x40
1a005f6e:	930b      	str	r3, [sp, #44]	; 0x2c
1a005f70:	f7ff bb23 	b.w	1a0055ba <_dtoa_r+0x48a>
1a005f74:	40240000 	.word	0x40240000
1a005f78:	3fe00000 	.word	0x3fe00000
1a005f7c:	401c0000 	.word	0x401c0000
1a005f80:	1a0076e4 	.word	0x1a0076e4

1a005f84 <__sfvwrite_r>:
1a005f84:	6893      	ldr	r3, [r2, #8]
1a005f86:	2b00      	cmp	r3, #0
1a005f88:	f000 8102 	beq.w	1a006190 <__sfvwrite_r+0x20c>
1a005f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a005f90:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
1a005f94:	b29b      	uxth	r3, r3
1a005f96:	460c      	mov	r4, r1
1a005f98:	0719      	lsls	r1, r3, #28
1a005f9a:	b083      	sub	sp, #12
1a005f9c:	4682      	mov	sl, r0
1a005f9e:	4690      	mov	r8, r2
1a005fa0:	d535      	bpl.n	1a00600e <__sfvwrite_r+0x8a>
1a005fa2:	6922      	ldr	r2, [r4, #16]
1a005fa4:	b39a      	cbz	r2, 1a00600e <__sfvwrite_r+0x8a>
1a005fa6:	f013 0202 	ands.w	r2, r3, #2
1a005faa:	f8d8 6000 	ldr.w	r6, [r8]
1a005fae:	d03d      	beq.n	1a00602c <__sfvwrite_r+0xa8>
1a005fb0:	2700      	movs	r7, #0
1a005fb2:	f8d4 b024 	ldr.w	fp, [r4, #36]	; 0x24
1a005fb6:	f8d4 c01c 	ldr.w	ip, [r4, #28]
1a005fba:	f8df 92cc 	ldr.w	r9, [pc, #716]	; 1a006288 <__sfvwrite_r+0x304>
1a005fbe:	463d      	mov	r5, r7
1a005fc0:	454d      	cmp	r5, r9
1a005fc2:	462b      	mov	r3, r5
1a005fc4:	463a      	mov	r2, r7
1a005fc6:	bf28      	it	cs
1a005fc8:	464b      	movcs	r3, r9
1a005fca:	4661      	mov	r1, ip
1a005fcc:	4650      	mov	r0, sl
1a005fce:	b1d5      	cbz	r5, 1a006006 <__sfvwrite_r+0x82>
1a005fd0:	47d8      	blx	fp
1a005fd2:	2800      	cmp	r0, #0
1a005fd4:	f340 80d2 	ble.w	1a00617c <__sfvwrite_r+0x1f8>
1a005fd8:	f8d8 3008 	ldr.w	r3, [r8, #8]
1a005fdc:	1a1b      	subs	r3, r3, r0
1a005fde:	4407      	add	r7, r0
1a005fe0:	1a2d      	subs	r5, r5, r0
1a005fe2:	f8c8 3008 	str.w	r3, [r8, #8]
1a005fe6:	2b00      	cmp	r3, #0
1a005fe8:	f000 80b7 	beq.w	1a00615a <__sfvwrite_r+0x1d6>
1a005fec:	f8d4 c01c 	ldr.w	ip, [r4, #28]
1a005ff0:	f8d4 b024 	ldr.w	fp, [r4, #36]	; 0x24
1a005ff4:	454d      	cmp	r5, r9
1a005ff6:	462b      	mov	r3, r5
1a005ff8:	463a      	mov	r2, r7
1a005ffa:	bf28      	it	cs
1a005ffc:	464b      	movcs	r3, r9
1a005ffe:	4661      	mov	r1, ip
1a006000:	4650      	mov	r0, sl
1a006002:	2d00      	cmp	r5, #0
1a006004:	d1e4      	bne.n	1a005fd0 <__sfvwrite_r+0x4c>
1a006006:	e9d6 7500 	ldrd	r7, r5, [r6]
1a00600a:	3608      	adds	r6, #8
1a00600c:	e7d8      	b.n	1a005fc0 <__sfvwrite_r+0x3c>
1a00600e:	4621      	mov	r1, r4
1a006010:	4650      	mov	r0, sl
1a006012:	f7fe ff91 	bl	1a004f38 <__swsetup_r>
1a006016:	2800      	cmp	r0, #0
1a006018:	f040 8130 	bne.w	1a00627c <__sfvwrite_r+0x2f8>
1a00601c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a006020:	f8d8 6000 	ldr.w	r6, [r8]
1a006024:	b29b      	uxth	r3, r3
1a006026:	f013 0202 	ands.w	r2, r3, #2
1a00602a:	d1c1      	bne.n	1a005fb0 <__sfvwrite_r+0x2c>
1a00602c:	f013 0901 	ands.w	r9, r3, #1
1a006030:	f040 80b0 	bne.w	1a006194 <__sfvwrite_r+0x210>
1a006034:	68a7      	ldr	r7, [r4, #8]
1a006036:	6820      	ldr	r0, [r4, #0]
1a006038:	464d      	mov	r5, r9
1a00603a:	2d00      	cmp	r5, #0
1a00603c:	d054      	beq.n	1a0060e8 <__sfvwrite_r+0x164>
1a00603e:	059a      	lsls	r2, r3, #22
1a006040:	f140 80bc 	bpl.w	1a0061bc <__sfvwrite_r+0x238>
1a006044:	42af      	cmp	r7, r5
1a006046:	46bb      	mov	fp, r7
1a006048:	f200 80e7 	bhi.w	1a00621a <__sfvwrite_r+0x296>
1a00604c:	f413 6f90 	tst.w	r3, #1152	; 0x480
1a006050:	d02f      	beq.n	1a0060b2 <__sfvwrite_r+0x12e>
1a006052:	e9d4 1704 	ldrd	r1, r7, [r4, #16]
1a006056:	eb07 0747 	add.w	r7, r7, r7, lsl #1
1a00605a:	eba0 0b01 	sub.w	fp, r0, r1
1a00605e:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
1a006062:	1c68      	adds	r0, r5, #1
1a006064:	107f      	asrs	r7, r7, #1
1a006066:	4458      	add	r0, fp
1a006068:	42b8      	cmp	r0, r7
1a00606a:	463a      	mov	r2, r7
1a00606c:	bf84      	itt	hi
1a00606e:	4607      	movhi	r7, r0
1a006070:	463a      	movhi	r2, r7
1a006072:	055b      	lsls	r3, r3, #21
1a006074:	f140 80e9 	bpl.w	1a00624a <__sfvwrite_r+0x2c6>
1a006078:	4611      	mov	r1, r2
1a00607a:	4650      	mov	r0, sl
1a00607c:	f7fc fcf2 	bl	1a002a64 <_malloc_r>
1a006080:	2800      	cmp	r0, #0
1a006082:	f000 80f5 	beq.w	1a006270 <__sfvwrite_r+0x2ec>
1a006086:	465a      	mov	r2, fp
1a006088:	6921      	ldr	r1, [r4, #16]
1a00608a:	9001      	str	r0, [sp, #4]
1a00608c:	f7fc ffa2 	bl	1a002fd4 <memcpy>
1a006090:	89a2      	ldrh	r2, [r4, #12]
1a006092:	9b01      	ldr	r3, [sp, #4]
1a006094:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
1a006098:	f042 0280 	orr.w	r2, r2, #128	; 0x80
1a00609c:	81a2      	strh	r2, [r4, #12]
1a00609e:	eba7 020b 	sub.w	r2, r7, fp
1a0060a2:	eb03 000b 	add.w	r0, r3, fp
1a0060a6:	6167      	str	r7, [r4, #20]
1a0060a8:	6123      	str	r3, [r4, #16]
1a0060aa:	6020      	str	r0, [r4, #0]
1a0060ac:	60a2      	str	r2, [r4, #8]
1a0060ae:	462f      	mov	r7, r5
1a0060b0:	46ab      	mov	fp, r5
1a0060b2:	465a      	mov	r2, fp
1a0060b4:	4649      	mov	r1, r9
1a0060b6:	f000 f9bb 	bl	1a006430 <memmove>
1a0060ba:	68a2      	ldr	r2, [r4, #8]
1a0060bc:	6823      	ldr	r3, [r4, #0]
1a0060be:	1bd2      	subs	r2, r2, r7
1a0060c0:	445b      	add	r3, fp
1a0060c2:	462f      	mov	r7, r5
1a0060c4:	60a2      	str	r2, [r4, #8]
1a0060c6:	6023      	str	r3, [r4, #0]
1a0060c8:	2500      	movs	r5, #0
1a0060ca:	f8d8 3008 	ldr.w	r3, [r8, #8]
1a0060ce:	1bdb      	subs	r3, r3, r7
1a0060d0:	44b9      	add	r9, r7
1a0060d2:	f8c8 3008 	str.w	r3, [r8, #8]
1a0060d6:	2b00      	cmp	r3, #0
1a0060d8:	d03f      	beq.n	1a00615a <__sfvwrite_r+0x1d6>
1a0060da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a0060de:	68a7      	ldr	r7, [r4, #8]
1a0060e0:	6820      	ldr	r0, [r4, #0]
1a0060e2:	b29b      	uxth	r3, r3
1a0060e4:	2d00      	cmp	r5, #0
1a0060e6:	d1aa      	bne.n	1a00603e <__sfvwrite_r+0xba>
1a0060e8:	e9d6 9500 	ldrd	r9, r5, [r6]
1a0060ec:	3608      	adds	r6, #8
1a0060ee:	e7a4      	b.n	1a00603a <__sfvwrite_r+0xb6>
1a0060f0:	f10b 0308 	add.w	r3, fp, #8
1a0060f4:	e953 6702 	ldrd	r6, r7, [r3, #-8]
1a0060f8:	469b      	mov	fp, r3
1a0060fa:	3308      	adds	r3, #8
1a0060fc:	2f00      	cmp	r7, #0
1a0060fe:	d0f9      	beq.n	1a0060f4 <__sfvwrite_r+0x170>
1a006100:	463a      	mov	r2, r7
1a006102:	210a      	movs	r1, #10
1a006104:	4630      	mov	r0, r6
1a006106:	f000 f943 	bl	1a006390 <memchr>
1a00610a:	2800      	cmp	r0, #0
1a00610c:	d053      	beq.n	1a0061b6 <__sfvwrite_r+0x232>
1a00610e:	3001      	adds	r0, #1
1a006110:	eba0 0906 	sub.w	r9, r0, r6
1a006114:	464b      	mov	r3, r9
1a006116:	e9d4 1204 	ldrd	r1, r2, [r4, #16]
1a00611a:	6820      	ldr	r0, [r4, #0]
1a00611c:	42bb      	cmp	r3, r7
1a00611e:	bf28      	it	cs
1a006120:	463b      	movcs	r3, r7
1a006122:	4288      	cmp	r0, r1
1a006124:	d903      	bls.n	1a00612e <__sfvwrite_r+0x1aa>
1a006126:	68a5      	ldr	r5, [r4, #8]
1a006128:	4415      	add	r5, r2
1a00612a:	42ab      	cmp	r3, r5
1a00612c:	dc19      	bgt.n	1a006162 <__sfvwrite_r+0x1de>
1a00612e:	429a      	cmp	r2, r3
1a006130:	dc7d      	bgt.n	1a00622e <__sfvwrite_r+0x2aa>
1a006132:	4613      	mov	r3, r2
1a006134:	6a65      	ldr	r5, [r4, #36]	; 0x24
1a006136:	69e1      	ldr	r1, [r4, #28]
1a006138:	4632      	mov	r2, r6
1a00613a:	4650      	mov	r0, sl
1a00613c:	47a8      	blx	r5
1a00613e:	1e05      	subs	r5, r0, #0
1a006140:	dd1c      	ble.n	1a00617c <__sfvwrite_r+0x1f8>
1a006142:	ebb9 0905 	subs.w	r9, r9, r5
1a006146:	d06b      	beq.n	1a006220 <__sfvwrite_r+0x29c>
1a006148:	2001      	movs	r0, #1
1a00614a:	f8d8 3008 	ldr.w	r3, [r8, #8]
1a00614e:	1b5b      	subs	r3, r3, r5
1a006150:	442e      	add	r6, r5
1a006152:	1b7f      	subs	r7, r7, r5
1a006154:	f8c8 3008 	str.w	r3, [r8, #8]
1a006158:	bb13      	cbnz	r3, 1a0061a0 <__sfvwrite_r+0x21c>
1a00615a:	2000      	movs	r0, #0
1a00615c:	b003      	add	sp, #12
1a00615e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006162:	4631      	mov	r1, r6
1a006164:	462a      	mov	r2, r5
1a006166:	f000 f963 	bl	1a006430 <memmove>
1a00616a:	6823      	ldr	r3, [r4, #0]
1a00616c:	442b      	add	r3, r5
1a00616e:	6023      	str	r3, [r4, #0]
1a006170:	4621      	mov	r1, r4
1a006172:	4650      	mov	r0, sl
1a006174:	f7fc fa48 	bl	1a002608 <_fflush_r>
1a006178:	2800      	cmp	r0, #0
1a00617a:	d0e2      	beq.n	1a006142 <__sfvwrite_r+0x1be>
1a00617c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a006180:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a006184:	f04f 30ff 	mov.w	r0, #4294967295
1a006188:	81a3      	strh	r3, [r4, #12]
1a00618a:	b003      	add	sp, #12
1a00618c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006190:	2000      	movs	r0, #0
1a006192:	4770      	bx	lr
1a006194:	4633      	mov	r3, r6
1a006196:	4691      	mov	r9, r2
1a006198:	4610      	mov	r0, r2
1a00619a:	4617      	mov	r7, r2
1a00619c:	464e      	mov	r6, r9
1a00619e:	469b      	mov	fp, r3
1a0061a0:	2f00      	cmp	r7, #0
1a0061a2:	d0a5      	beq.n	1a0060f0 <__sfvwrite_r+0x16c>
1a0061a4:	2800      	cmp	r0, #0
1a0061a6:	d1b5      	bne.n	1a006114 <__sfvwrite_r+0x190>
1a0061a8:	463a      	mov	r2, r7
1a0061aa:	210a      	movs	r1, #10
1a0061ac:	4630      	mov	r0, r6
1a0061ae:	f000 f8ef 	bl	1a006390 <memchr>
1a0061b2:	2800      	cmp	r0, #0
1a0061b4:	d1ab      	bne.n	1a00610e <__sfvwrite_r+0x18a>
1a0061b6:	1c7b      	adds	r3, r7, #1
1a0061b8:	4699      	mov	r9, r3
1a0061ba:	e7ac      	b.n	1a006116 <__sfvwrite_r+0x192>
1a0061bc:	6923      	ldr	r3, [r4, #16]
1a0061be:	4283      	cmp	r3, r0
1a0061c0:	d315      	bcc.n	1a0061ee <__sfvwrite_r+0x26a>
1a0061c2:	6961      	ldr	r1, [r4, #20]
1a0061c4:	42a9      	cmp	r1, r5
1a0061c6:	d812      	bhi.n	1a0061ee <__sfvwrite_r+0x26a>
1a0061c8:	4b2e      	ldr	r3, [pc, #184]	; (1a006284 <__sfvwrite_r+0x300>)
1a0061ca:	6a67      	ldr	r7, [r4, #36]	; 0x24
1a0061cc:	429d      	cmp	r5, r3
1a0061ce:	bf94      	ite	ls
1a0061d0:	462b      	movls	r3, r5
1a0061d2:	f06f 4300 	mvnhi.w	r3, #2147483648	; 0x80000000
1a0061d6:	464a      	mov	r2, r9
1a0061d8:	fb93 f3f1 	sdiv	r3, r3, r1
1a0061dc:	4650      	mov	r0, sl
1a0061de:	fb01 f303 	mul.w	r3, r1, r3
1a0061e2:	69e1      	ldr	r1, [r4, #28]
1a0061e4:	47b8      	blx	r7
1a0061e6:	1e07      	subs	r7, r0, #0
1a0061e8:	ddc8      	ble.n	1a00617c <__sfvwrite_r+0x1f8>
1a0061ea:	1bed      	subs	r5, r5, r7
1a0061ec:	e76d      	b.n	1a0060ca <__sfvwrite_r+0x146>
1a0061ee:	42af      	cmp	r7, r5
1a0061f0:	bf28      	it	cs
1a0061f2:	462f      	movcs	r7, r5
1a0061f4:	463a      	mov	r2, r7
1a0061f6:	4649      	mov	r1, r9
1a0061f8:	f000 f91a 	bl	1a006430 <memmove>
1a0061fc:	68a3      	ldr	r3, [r4, #8]
1a0061fe:	6822      	ldr	r2, [r4, #0]
1a006200:	1bdb      	subs	r3, r3, r7
1a006202:	443a      	add	r2, r7
1a006204:	60a3      	str	r3, [r4, #8]
1a006206:	6022      	str	r2, [r4, #0]
1a006208:	2b00      	cmp	r3, #0
1a00620a:	d1ee      	bne.n	1a0061ea <__sfvwrite_r+0x266>
1a00620c:	4621      	mov	r1, r4
1a00620e:	4650      	mov	r0, sl
1a006210:	f7fc f9fa 	bl	1a002608 <_fflush_r>
1a006214:	2800      	cmp	r0, #0
1a006216:	d0e8      	beq.n	1a0061ea <__sfvwrite_r+0x266>
1a006218:	e7b0      	b.n	1a00617c <__sfvwrite_r+0x1f8>
1a00621a:	462f      	mov	r7, r5
1a00621c:	46ab      	mov	fp, r5
1a00621e:	e748      	b.n	1a0060b2 <__sfvwrite_r+0x12e>
1a006220:	4621      	mov	r1, r4
1a006222:	4650      	mov	r0, sl
1a006224:	f7fc f9f0 	bl	1a002608 <_fflush_r>
1a006228:	2800      	cmp	r0, #0
1a00622a:	d08e      	beq.n	1a00614a <__sfvwrite_r+0x1c6>
1a00622c:	e7a6      	b.n	1a00617c <__sfvwrite_r+0x1f8>
1a00622e:	461a      	mov	r2, r3
1a006230:	4631      	mov	r1, r6
1a006232:	9301      	str	r3, [sp, #4]
1a006234:	f000 f8fc 	bl	1a006430 <memmove>
1a006238:	9b01      	ldr	r3, [sp, #4]
1a00623a:	68a1      	ldr	r1, [r4, #8]
1a00623c:	6822      	ldr	r2, [r4, #0]
1a00623e:	1ac9      	subs	r1, r1, r3
1a006240:	441a      	add	r2, r3
1a006242:	60a1      	str	r1, [r4, #8]
1a006244:	6022      	str	r2, [r4, #0]
1a006246:	461d      	mov	r5, r3
1a006248:	e77b      	b.n	1a006142 <__sfvwrite_r+0x1be>
1a00624a:	4650      	mov	r0, sl
1a00624c:	f000 fc62 	bl	1a006b14 <_realloc_r>
1a006250:	4603      	mov	r3, r0
1a006252:	2800      	cmp	r0, #0
1a006254:	f47f af23 	bne.w	1a00609e <__sfvwrite_r+0x11a>
1a006258:	6921      	ldr	r1, [r4, #16]
1a00625a:	4650      	mov	r0, sl
1a00625c:	f7fc fab6 	bl	1a0027cc <_free_r>
1a006260:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a006264:	220c      	movs	r2, #12
1a006266:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a00626a:	f8ca 2000 	str.w	r2, [sl]
1a00626e:	e787      	b.n	1a006180 <__sfvwrite_r+0x1fc>
1a006270:	230c      	movs	r3, #12
1a006272:	f8ca 3000 	str.w	r3, [sl]
1a006276:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a00627a:	e781      	b.n	1a006180 <__sfvwrite_r+0x1fc>
1a00627c:	f04f 30ff 	mov.w	r0, #4294967295
1a006280:	e76c      	b.n	1a00615c <__sfvwrite_r+0x1d8>
1a006282:	bf00      	nop
1a006284:	7ffffffe 	.word	0x7ffffffe
1a006288:	7ffffc00 	.word	0x7ffffc00

1a00628c <_localeconv_r>:
1a00628c:	4800      	ldr	r0, [pc, #0]	; (1a006290 <_localeconv_r+0x4>)
1a00628e:	4770      	bx	lr
1a006290:	10000978 	.word	0x10000978

1a006294 <__swhatbuf_r>:
1a006294:	b570      	push	{r4, r5, r6, lr}
1a006296:	460c      	mov	r4, r1
1a006298:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1a00629c:	2900      	cmp	r1, #0
1a00629e:	b096      	sub	sp, #88	; 0x58
1a0062a0:	4615      	mov	r5, r2
1a0062a2:	461e      	mov	r6, r3
1a0062a4:	db14      	blt.n	1a0062d0 <__swhatbuf_r+0x3c>
1a0062a6:	466a      	mov	r2, sp
1a0062a8:	f7fa f9a3 	bl	1a0005f2 <_fstat_r>
1a0062ac:	2800      	cmp	r0, #0
1a0062ae:	db0f      	blt.n	1a0062d0 <__swhatbuf_r+0x3c>
1a0062b0:	9a01      	ldr	r2, [sp, #4]
1a0062b2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
1a0062b6:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
1a0062ba:	fab2 f282 	clz	r2, r2
1a0062be:	0952      	lsrs	r2, r2, #5
1a0062c0:	f44f 6380 	mov.w	r3, #1024	; 0x400
1a0062c4:	f44f 6000 	mov.w	r0, #2048	; 0x800
1a0062c8:	6032      	str	r2, [r6, #0]
1a0062ca:	602b      	str	r3, [r5, #0]
1a0062cc:	b016      	add	sp, #88	; 0x58
1a0062ce:	bd70      	pop	{r4, r5, r6, pc}
1a0062d0:	89a2      	ldrh	r2, [r4, #12]
1a0062d2:	2300      	movs	r3, #0
1a0062d4:	f012 0080 	ands.w	r0, r2, #128	; 0x80
1a0062d8:	6033      	str	r3, [r6, #0]
1a0062da:	d004      	beq.n	1a0062e6 <__swhatbuf_r+0x52>
1a0062dc:	2240      	movs	r2, #64	; 0x40
1a0062de:	4618      	mov	r0, r3
1a0062e0:	602a      	str	r2, [r5, #0]
1a0062e2:	b016      	add	sp, #88	; 0x58
1a0062e4:	bd70      	pop	{r4, r5, r6, pc}
1a0062e6:	f44f 6380 	mov.w	r3, #1024	; 0x400
1a0062ea:	602b      	str	r3, [r5, #0]
1a0062ec:	b016      	add	sp, #88	; 0x58
1a0062ee:	bd70      	pop	{r4, r5, r6, pc}

1a0062f0 <__smakebuf_r>:
1a0062f0:	898a      	ldrh	r2, [r1, #12]
1a0062f2:	0792      	lsls	r2, r2, #30
1a0062f4:	460b      	mov	r3, r1
1a0062f6:	d506      	bpl.n	1a006306 <__smakebuf_r+0x16>
1a0062f8:	f101 0243 	add.w	r2, r1, #67	; 0x43
1a0062fc:	2101      	movs	r1, #1
1a0062fe:	601a      	str	r2, [r3, #0]
1a006300:	e9c3 2104 	strd	r2, r1, [r3, #16]
1a006304:	4770      	bx	lr
1a006306:	b570      	push	{r4, r5, r6, lr}
1a006308:	b082      	sub	sp, #8
1a00630a:	ab01      	add	r3, sp, #4
1a00630c:	466a      	mov	r2, sp
1a00630e:	460c      	mov	r4, r1
1a006310:	4606      	mov	r6, r0
1a006312:	f7ff ffbf 	bl	1a006294 <__swhatbuf_r>
1a006316:	9900      	ldr	r1, [sp, #0]
1a006318:	4605      	mov	r5, r0
1a00631a:	4630      	mov	r0, r6
1a00631c:	f7fc fba2 	bl	1a002a64 <_malloc_r>
1a006320:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a006324:	b170      	cbz	r0, 1a006344 <__smakebuf_r+0x54>
1a006326:	4916      	ldr	r1, [pc, #88]	; (1a006380 <__smakebuf_r+0x90>)
1a006328:	63f1      	str	r1, [r6, #60]	; 0x3c
1a00632a:	9a01      	ldr	r2, [sp, #4]
1a00632c:	9900      	ldr	r1, [sp, #0]
1a00632e:	6020      	str	r0, [r4, #0]
1a006330:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a006334:	81a3      	strh	r3, [r4, #12]
1a006336:	e9c4 0104 	strd	r0, r1, [r4, #16]
1a00633a:	b98a      	cbnz	r2, 1a006360 <__smakebuf_r+0x70>
1a00633c:	432b      	orrs	r3, r5
1a00633e:	81a3      	strh	r3, [r4, #12]
1a006340:	b002      	add	sp, #8
1a006342:	bd70      	pop	{r4, r5, r6, pc}
1a006344:	059a      	lsls	r2, r3, #22
1a006346:	d4fb      	bmi.n	1a006340 <__smakebuf_r+0x50>
1a006348:	f023 0303 	bic.w	r3, r3, #3
1a00634c:	f104 0243 	add.w	r2, r4, #67	; 0x43
1a006350:	f043 0302 	orr.w	r3, r3, #2
1a006354:	2101      	movs	r1, #1
1a006356:	81a3      	strh	r3, [r4, #12]
1a006358:	6022      	str	r2, [r4, #0]
1a00635a:	e9c4 2104 	strd	r2, r1, [r4, #16]
1a00635e:	e7ef      	b.n	1a006340 <__smakebuf_r+0x50>
1a006360:	4630      	mov	r0, r6
1a006362:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1a006366:	f7fa f949 	bl	1a0005fc <_isatty_r>
1a00636a:	b910      	cbnz	r0, 1a006372 <__smakebuf_r+0x82>
1a00636c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a006370:	e7e4      	b.n	1a00633c <__smakebuf_r+0x4c>
1a006372:	89a3      	ldrh	r3, [r4, #12]
1a006374:	f023 0303 	bic.w	r3, r3, #3
1a006378:	f043 0301 	orr.w	r3, r3, #1
1a00637c:	b21b      	sxth	r3, r3
1a00637e:	e7dd      	b.n	1a00633c <__smakebuf_r+0x4c>
1a006380:	1a0026b5 	.word	0x1a0026b5
1a006384:	ffffffff 	.word	0xffffffff
1a006388:	ffffffff 	.word	0xffffffff
1a00638c:	ffffffff 	.word	0xffffffff

1a006390 <memchr>:
1a006390:	f001 01ff 	and.w	r1, r1, #255	; 0xff
1a006394:	2a10      	cmp	r2, #16
1a006396:	db2b      	blt.n	1a0063f0 <memchr+0x60>
1a006398:	f010 0f07 	tst.w	r0, #7
1a00639c:	d008      	beq.n	1a0063b0 <memchr+0x20>
1a00639e:	f810 3b01 	ldrb.w	r3, [r0], #1
1a0063a2:	3a01      	subs	r2, #1
1a0063a4:	428b      	cmp	r3, r1
1a0063a6:	d02d      	beq.n	1a006404 <memchr+0x74>
1a0063a8:	f010 0f07 	tst.w	r0, #7
1a0063ac:	b342      	cbz	r2, 1a006400 <memchr+0x70>
1a0063ae:	d1f6      	bne.n	1a00639e <memchr+0xe>
1a0063b0:	b4f0      	push	{r4, r5, r6, r7}
1a0063b2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
1a0063b6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1a0063ba:	f022 0407 	bic.w	r4, r2, #7
1a0063be:	f07f 0700 	mvns.w	r7, #0
1a0063c2:	2300      	movs	r3, #0
1a0063c4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
1a0063c8:	3c08      	subs	r4, #8
1a0063ca:	ea85 0501 	eor.w	r5, r5, r1
1a0063ce:	ea86 0601 	eor.w	r6, r6, r1
1a0063d2:	fa85 f547 	uadd8	r5, r5, r7
1a0063d6:	faa3 f587 	sel	r5, r3, r7
1a0063da:	fa86 f647 	uadd8	r6, r6, r7
1a0063de:	faa5 f687 	sel	r6, r5, r7
1a0063e2:	b98e      	cbnz	r6, 1a006408 <memchr+0x78>
1a0063e4:	d1ee      	bne.n	1a0063c4 <memchr+0x34>
1a0063e6:	bcf0      	pop	{r4, r5, r6, r7}
1a0063e8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
1a0063ec:	f002 0207 	and.w	r2, r2, #7
1a0063f0:	b132      	cbz	r2, 1a006400 <memchr+0x70>
1a0063f2:	f810 3b01 	ldrb.w	r3, [r0], #1
1a0063f6:	3a01      	subs	r2, #1
1a0063f8:	ea83 0301 	eor.w	r3, r3, r1
1a0063fc:	b113      	cbz	r3, 1a006404 <memchr+0x74>
1a0063fe:	d1f8      	bne.n	1a0063f2 <memchr+0x62>
1a006400:	2000      	movs	r0, #0
1a006402:	4770      	bx	lr
1a006404:	3801      	subs	r0, #1
1a006406:	4770      	bx	lr
1a006408:	2d00      	cmp	r5, #0
1a00640a:	bf06      	itte	eq
1a00640c:	4635      	moveq	r5, r6
1a00640e:	3803      	subeq	r0, #3
1a006410:	3807      	subne	r0, #7
1a006412:	f015 0f01 	tst.w	r5, #1
1a006416:	d107      	bne.n	1a006428 <memchr+0x98>
1a006418:	3001      	adds	r0, #1
1a00641a:	f415 7f80 	tst.w	r5, #256	; 0x100
1a00641e:	bf02      	ittt	eq
1a006420:	3001      	addeq	r0, #1
1a006422:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
1a006426:	3001      	addeq	r0, #1
1a006428:	bcf0      	pop	{r4, r5, r6, r7}
1a00642a:	3801      	subs	r0, #1
1a00642c:	4770      	bx	lr
1a00642e:	bf00      	nop

1a006430 <memmove>:
1a006430:	4288      	cmp	r0, r1
1a006432:	b4f0      	push	{r4, r5, r6, r7}
1a006434:	d90d      	bls.n	1a006452 <memmove+0x22>
1a006436:	188b      	adds	r3, r1, r2
1a006438:	4283      	cmp	r3, r0
1a00643a:	d90a      	bls.n	1a006452 <memmove+0x22>
1a00643c:	1884      	adds	r4, r0, r2
1a00643e:	b132      	cbz	r2, 1a00644e <memmove+0x1e>
1a006440:	4622      	mov	r2, r4
1a006442:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
1a006446:	f802 4d01 	strb.w	r4, [r2, #-1]!
1a00644a:	4299      	cmp	r1, r3
1a00644c:	d1f9      	bne.n	1a006442 <memmove+0x12>
1a00644e:	bcf0      	pop	{r4, r5, r6, r7}
1a006450:	4770      	bx	lr
1a006452:	2a0f      	cmp	r2, #15
1a006454:	d80e      	bhi.n	1a006474 <memmove+0x44>
1a006456:	4603      	mov	r3, r0
1a006458:	1e54      	subs	r4, r2, #1
1a00645a:	2a00      	cmp	r2, #0
1a00645c:	d0f7      	beq.n	1a00644e <memmove+0x1e>
1a00645e:	3401      	adds	r4, #1
1a006460:	440c      	add	r4, r1
1a006462:	3b01      	subs	r3, #1
1a006464:	f811 2b01 	ldrb.w	r2, [r1], #1
1a006468:	f803 2f01 	strb.w	r2, [r3, #1]!
1a00646c:	42a1      	cmp	r1, r4
1a00646e:	d1f9      	bne.n	1a006464 <memmove+0x34>
1a006470:	bcf0      	pop	{r4, r5, r6, r7}
1a006472:	4770      	bx	lr
1a006474:	ea40 0301 	orr.w	r3, r0, r1
1a006478:	079b      	lsls	r3, r3, #30
1a00647a:	d13b      	bne.n	1a0064f4 <memmove+0xc4>
1a00647c:	f1a2 0710 	sub.w	r7, r2, #16
1a006480:	093f      	lsrs	r7, r7, #4
1a006482:	f101 0620 	add.w	r6, r1, #32
1a006486:	eb06 1607 	add.w	r6, r6, r7, lsl #4
1a00648a:	f101 0310 	add.w	r3, r1, #16
1a00648e:	f100 0410 	add.w	r4, r0, #16
1a006492:	f853 5c10 	ldr.w	r5, [r3, #-16]
1a006496:	f844 5c10 	str.w	r5, [r4, #-16]
1a00649a:	f853 5c0c 	ldr.w	r5, [r3, #-12]
1a00649e:	f844 5c0c 	str.w	r5, [r4, #-12]
1a0064a2:	f853 5c08 	ldr.w	r5, [r3, #-8]
1a0064a6:	f844 5c08 	str.w	r5, [r4, #-8]
1a0064aa:	f853 5c04 	ldr.w	r5, [r3, #-4]
1a0064ae:	f844 5c04 	str.w	r5, [r4, #-4]
1a0064b2:	3310      	adds	r3, #16
1a0064b4:	42b3      	cmp	r3, r6
1a0064b6:	f104 0410 	add.w	r4, r4, #16
1a0064ba:	d1ea      	bne.n	1a006492 <memmove+0x62>
1a0064bc:	1c7b      	adds	r3, r7, #1
1a0064be:	011b      	lsls	r3, r3, #4
1a0064c0:	f012 0f0c 	tst.w	r2, #12
1a0064c4:	4419      	add	r1, r3
1a0064c6:	f002 050f 	and.w	r5, r2, #15
1a0064ca:	4403      	add	r3, r0
1a0064cc:	d015      	beq.n	1a0064fa <memmove+0xca>
1a0064ce:	3d04      	subs	r5, #4
1a0064d0:	08ad      	lsrs	r5, r5, #2
1a0064d2:	eb03 0c85 	add.w	ip, r3, r5, lsl #2
1a0064d6:	1f1c      	subs	r4, r3, #4
1a0064d8:	460e      	mov	r6, r1
1a0064da:	f856 7b04 	ldr.w	r7, [r6], #4
1a0064de:	f844 7f04 	str.w	r7, [r4, #4]!
1a0064e2:	4564      	cmp	r4, ip
1a0064e4:	d1f9      	bne.n	1a0064da <memmove+0xaa>
1a0064e6:	3501      	adds	r5, #1
1a0064e8:	00ad      	lsls	r5, r5, #2
1a0064ea:	442b      	add	r3, r5
1a0064ec:	4429      	add	r1, r5
1a0064ee:	f002 0203 	and.w	r2, r2, #3
1a0064f2:	e7b1      	b.n	1a006458 <memmove+0x28>
1a0064f4:	1e54      	subs	r4, r2, #1
1a0064f6:	4603      	mov	r3, r0
1a0064f8:	e7b1      	b.n	1a00645e <memmove+0x2e>
1a0064fa:	462a      	mov	r2, r5
1a0064fc:	e7ac      	b.n	1a006458 <memmove+0x28>
1a0064fe:	bf00      	nop

1a006500 <_Balloc>:
1a006500:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
1a006502:	b570      	push	{r4, r5, r6, lr}
1a006504:	4605      	mov	r5, r0
1a006506:	460c      	mov	r4, r1
1a006508:	b14b      	cbz	r3, 1a00651e <_Balloc+0x1e>
1a00650a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1a00650e:	b180      	cbz	r0, 1a006532 <_Balloc+0x32>
1a006510:	6802      	ldr	r2, [r0, #0]
1a006512:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
1a006516:	2300      	movs	r3, #0
1a006518:	e9c0 3303 	strd	r3, r3, [r0, #12]
1a00651c:	bd70      	pop	{r4, r5, r6, pc}
1a00651e:	2221      	movs	r2, #33	; 0x21
1a006520:	2104      	movs	r1, #4
1a006522:	f000 fd63 	bl	1a006fec <_calloc_r>
1a006526:	4603      	mov	r3, r0
1a006528:	64e8      	str	r0, [r5, #76]	; 0x4c
1a00652a:	2800      	cmp	r0, #0
1a00652c:	d1ed      	bne.n	1a00650a <_Balloc+0xa>
1a00652e:	2000      	movs	r0, #0
1a006530:	bd70      	pop	{r4, r5, r6, pc}
1a006532:	2101      	movs	r1, #1
1a006534:	fa01 f604 	lsl.w	r6, r1, r4
1a006538:	1d72      	adds	r2, r6, #5
1a00653a:	4628      	mov	r0, r5
1a00653c:	0092      	lsls	r2, r2, #2
1a00653e:	f000 fd55 	bl	1a006fec <_calloc_r>
1a006542:	2800      	cmp	r0, #0
1a006544:	d0f3      	beq.n	1a00652e <_Balloc+0x2e>
1a006546:	e9c0 4601 	strd	r4, r6, [r0, #4]
1a00654a:	e7e4      	b.n	1a006516 <_Balloc+0x16>

1a00654c <_Bfree>:
1a00654c:	b131      	cbz	r1, 1a00655c <_Bfree+0x10>
1a00654e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
1a006550:	684a      	ldr	r2, [r1, #4]
1a006552:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1a006556:	6008      	str	r0, [r1, #0]
1a006558:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
1a00655c:	4770      	bx	lr
1a00655e:	bf00      	nop

1a006560 <__multadd>:
1a006560:	b5f0      	push	{r4, r5, r6, r7, lr}
1a006562:	690c      	ldr	r4, [r1, #16]
1a006564:	b083      	sub	sp, #12
1a006566:	460d      	mov	r5, r1
1a006568:	4606      	mov	r6, r0
1a00656a:	f101 0c14 	add.w	ip, r1, #20
1a00656e:	2700      	movs	r7, #0
1a006570:	f8dc 0000 	ldr.w	r0, [ip]
1a006574:	b281      	uxth	r1, r0
1a006576:	fb02 3301 	mla	r3, r2, r1, r3
1a00657a:	0c19      	lsrs	r1, r3, #16
1a00657c:	0c00      	lsrs	r0, r0, #16
1a00657e:	fb02 1000 	mla	r0, r2, r0, r1
1a006582:	b29b      	uxth	r3, r3
1a006584:	3701      	adds	r7, #1
1a006586:	eb03 4300 	add.w	r3, r3, r0, lsl #16
1a00658a:	42bc      	cmp	r4, r7
1a00658c:	f84c 3b04 	str.w	r3, [ip], #4
1a006590:	ea4f 4310 	mov.w	r3, r0, lsr #16
1a006594:	dcec      	bgt.n	1a006570 <__multadd+0x10>
1a006596:	b13b      	cbz	r3, 1a0065a8 <__multadd+0x48>
1a006598:	68aa      	ldr	r2, [r5, #8]
1a00659a:	42a2      	cmp	r2, r4
1a00659c:	dd07      	ble.n	1a0065ae <__multadd+0x4e>
1a00659e:	eb05 0284 	add.w	r2, r5, r4, lsl #2
1a0065a2:	3401      	adds	r4, #1
1a0065a4:	6153      	str	r3, [r2, #20]
1a0065a6:	612c      	str	r4, [r5, #16]
1a0065a8:	4628      	mov	r0, r5
1a0065aa:	b003      	add	sp, #12
1a0065ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a0065ae:	6869      	ldr	r1, [r5, #4]
1a0065b0:	9301      	str	r3, [sp, #4]
1a0065b2:	3101      	adds	r1, #1
1a0065b4:	4630      	mov	r0, r6
1a0065b6:	f7ff ffa3 	bl	1a006500 <_Balloc>
1a0065ba:	692a      	ldr	r2, [r5, #16]
1a0065bc:	3202      	adds	r2, #2
1a0065be:	f105 010c 	add.w	r1, r5, #12
1a0065c2:	4607      	mov	r7, r0
1a0065c4:	0092      	lsls	r2, r2, #2
1a0065c6:	300c      	adds	r0, #12
1a0065c8:	f7fc fd04 	bl	1a002fd4 <memcpy>
1a0065cc:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
1a0065ce:	6869      	ldr	r1, [r5, #4]
1a0065d0:	9b01      	ldr	r3, [sp, #4]
1a0065d2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
1a0065d6:	6028      	str	r0, [r5, #0]
1a0065d8:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
1a0065dc:	463d      	mov	r5, r7
1a0065de:	eb05 0284 	add.w	r2, r5, r4, lsl #2
1a0065e2:	3401      	adds	r4, #1
1a0065e4:	6153      	str	r3, [r2, #20]
1a0065e6:	612c      	str	r4, [r5, #16]
1a0065e8:	e7de      	b.n	1a0065a8 <__multadd+0x48>
1a0065ea:	bf00      	nop

1a0065ec <__hi0bits>:
1a0065ec:	0c02      	lsrs	r2, r0, #16
1a0065ee:	0412      	lsls	r2, r2, #16
1a0065f0:	4603      	mov	r3, r0
1a0065f2:	b9ca      	cbnz	r2, 1a006628 <__hi0bits+0x3c>
1a0065f4:	0403      	lsls	r3, r0, #16
1a0065f6:	2010      	movs	r0, #16
1a0065f8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
1a0065fc:	bf04      	itt	eq
1a0065fe:	021b      	lsleq	r3, r3, #8
1a006600:	3008      	addeq	r0, #8
1a006602:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
1a006606:	bf04      	itt	eq
1a006608:	011b      	lsleq	r3, r3, #4
1a00660a:	3004      	addeq	r0, #4
1a00660c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
1a006610:	bf04      	itt	eq
1a006612:	009b      	lsleq	r3, r3, #2
1a006614:	3002      	addeq	r0, #2
1a006616:	2b00      	cmp	r3, #0
1a006618:	db05      	blt.n	1a006626 <__hi0bits+0x3a>
1a00661a:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
1a00661e:	f100 0001 	add.w	r0, r0, #1
1a006622:	bf08      	it	eq
1a006624:	2020      	moveq	r0, #32
1a006626:	4770      	bx	lr
1a006628:	2000      	movs	r0, #0
1a00662a:	e7e5      	b.n	1a0065f8 <__hi0bits+0xc>

1a00662c <__lo0bits>:
1a00662c:	6803      	ldr	r3, [r0, #0]
1a00662e:	f013 0207 	ands.w	r2, r3, #7
1a006632:	4601      	mov	r1, r0
1a006634:	d007      	beq.n	1a006646 <__lo0bits+0x1a>
1a006636:	07da      	lsls	r2, r3, #31
1a006638:	d420      	bmi.n	1a00667c <__lo0bits+0x50>
1a00663a:	0798      	lsls	r0, r3, #30
1a00663c:	d522      	bpl.n	1a006684 <__lo0bits+0x58>
1a00663e:	085b      	lsrs	r3, r3, #1
1a006640:	600b      	str	r3, [r1, #0]
1a006642:	2001      	movs	r0, #1
1a006644:	4770      	bx	lr
1a006646:	b298      	uxth	r0, r3
1a006648:	b9b0      	cbnz	r0, 1a006678 <__lo0bits+0x4c>
1a00664a:	0c1b      	lsrs	r3, r3, #16
1a00664c:	2010      	movs	r0, #16
1a00664e:	f013 0fff 	tst.w	r3, #255	; 0xff
1a006652:	bf04      	itt	eq
1a006654:	0a1b      	lsreq	r3, r3, #8
1a006656:	3008      	addeq	r0, #8
1a006658:	071a      	lsls	r2, r3, #28
1a00665a:	bf04      	itt	eq
1a00665c:	091b      	lsreq	r3, r3, #4
1a00665e:	3004      	addeq	r0, #4
1a006660:	079a      	lsls	r2, r3, #30
1a006662:	bf04      	itt	eq
1a006664:	089b      	lsreq	r3, r3, #2
1a006666:	3002      	addeq	r0, #2
1a006668:	07da      	lsls	r2, r3, #31
1a00666a:	d403      	bmi.n	1a006674 <__lo0bits+0x48>
1a00666c:	085b      	lsrs	r3, r3, #1
1a00666e:	f100 0001 	add.w	r0, r0, #1
1a006672:	d005      	beq.n	1a006680 <__lo0bits+0x54>
1a006674:	600b      	str	r3, [r1, #0]
1a006676:	4770      	bx	lr
1a006678:	4610      	mov	r0, r2
1a00667a:	e7e8      	b.n	1a00664e <__lo0bits+0x22>
1a00667c:	2000      	movs	r0, #0
1a00667e:	4770      	bx	lr
1a006680:	2020      	movs	r0, #32
1a006682:	4770      	bx	lr
1a006684:	089b      	lsrs	r3, r3, #2
1a006686:	600b      	str	r3, [r1, #0]
1a006688:	2002      	movs	r0, #2
1a00668a:	4770      	bx	lr

1a00668c <__i2b>:
1a00668c:	b510      	push	{r4, lr}
1a00668e:	460c      	mov	r4, r1
1a006690:	2101      	movs	r1, #1
1a006692:	f7ff ff35 	bl	1a006500 <_Balloc>
1a006696:	2201      	movs	r2, #1
1a006698:	e9c0 2404 	strd	r2, r4, [r0, #16]
1a00669c:	bd10      	pop	{r4, pc}
1a00669e:	bf00      	nop

1a0066a0 <__multiply>:
1a0066a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a0066a4:	690e      	ldr	r6, [r1, #16]
1a0066a6:	6917      	ldr	r7, [r2, #16]
1a0066a8:	42be      	cmp	r6, r7
1a0066aa:	b083      	sub	sp, #12
1a0066ac:	460c      	mov	r4, r1
1a0066ae:	4615      	mov	r5, r2
1a0066b0:	db05      	blt.n	1a0066be <__multiply+0x1e>
1a0066b2:	463a      	mov	r2, r7
1a0066b4:	462b      	mov	r3, r5
1a0066b6:	4637      	mov	r7, r6
1a0066b8:	460d      	mov	r5, r1
1a0066ba:	4616      	mov	r6, r2
1a0066bc:	461c      	mov	r4, r3
1a0066be:	e9d5 1301 	ldrd	r1, r3, [r5, #4]
1a0066c2:	eb07 0806 	add.w	r8, r7, r6
1a0066c6:	4543      	cmp	r3, r8
1a0066c8:	bfb8      	it	lt
1a0066ca:	3101      	addlt	r1, #1
1a0066cc:	f7ff ff18 	bl	1a006500 <_Balloc>
1a0066d0:	f100 0a14 	add.w	sl, r0, #20
1a0066d4:	eb0a 0988 	add.w	r9, sl, r8, lsl #2
1a0066d8:	45ca      	cmp	sl, r9
1a0066da:	9000      	str	r0, [sp, #0]
1a0066dc:	d205      	bcs.n	1a0066ea <__multiply+0x4a>
1a0066de:	4653      	mov	r3, sl
1a0066e0:	2100      	movs	r1, #0
1a0066e2:	f843 1b04 	str.w	r1, [r3], #4
1a0066e6:	4599      	cmp	r9, r3
1a0066e8:	d8fb      	bhi.n	1a0066e2 <__multiply+0x42>
1a0066ea:	f104 0e14 	add.w	lr, r4, #20
1a0066ee:	eb0e 0b86 	add.w	fp, lr, r6, lsl #2
1a0066f2:	f105 0314 	add.w	r3, r5, #20
1a0066f6:	45de      	cmp	lr, fp
1a0066f8:	eb03 0787 	add.w	r7, r3, r7, lsl #2
1a0066fc:	d253      	bcs.n	1a0067a6 <__multiply+0x106>
1a0066fe:	f8cd 8004 	str.w	r8, [sp, #4]
1a006702:	4698      	mov	r8, r3
1a006704:	e005      	b.n	1a006712 <__multiply+0x72>
1a006706:	0c09      	lsrs	r1, r1, #16
1a006708:	d128      	bne.n	1a00675c <__multiply+0xbc>
1a00670a:	45f3      	cmp	fp, lr
1a00670c:	f10a 0a04 	add.w	sl, sl, #4
1a006710:	d947      	bls.n	1a0067a2 <__multiply+0x102>
1a006712:	f85e 1b04 	ldr.w	r1, [lr], #4
1a006716:	b28e      	uxth	r6, r1
1a006718:	2e00      	cmp	r6, #0
1a00671a:	d0f4      	beq.n	1a006706 <__multiply+0x66>
1a00671c:	4645      	mov	r5, r8
1a00671e:	4654      	mov	r4, sl
1a006720:	2300      	movs	r3, #0
1a006722:	f855 1b04 	ldr.w	r1, [r5], #4
1a006726:	6820      	ldr	r0, [r4, #0]
1a006728:	b28a      	uxth	r2, r1
1a00672a:	fa1f fc80 	uxth.w	ip, r0
1a00672e:	fb06 c202 	mla	r2, r6, r2, ip
1a006732:	0c09      	lsrs	r1, r1, #16
1a006734:	0c00      	lsrs	r0, r0, #16
1a006736:	4413      	add	r3, r2
1a006738:	fb06 0201 	mla	r2, r6, r1, r0
1a00673c:	eb02 4213 	add.w	r2, r2, r3, lsr #16
1a006740:	b29b      	uxth	r3, r3
1a006742:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a006746:	42af      	cmp	r7, r5
1a006748:	f844 3b04 	str.w	r3, [r4], #4
1a00674c:	ea4f 4312 	mov.w	r3, r2, lsr #16
1a006750:	d8e7      	bhi.n	1a006722 <__multiply+0x82>
1a006752:	6023      	str	r3, [r4, #0]
1a006754:	f85e 1c04 	ldr.w	r1, [lr, #-4]
1a006758:	0c09      	lsrs	r1, r1, #16
1a00675a:	d0d6      	beq.n	1a00670a <__multiply+0x6a>
1a00675c:	f8da 3000 	ldr.w	r3, [sl]
1a006760:	4640      	mov	r0, r8
1a006762:	461a      	mov	r2, r3
1a006764:	4654      	mov	r4, sl
1a006766:	f04f 0c00 	mov.w	ip, #0
1a00676a:	8805      	ldrh	r5, [r0, #0]
1a00676c:	0c12      	lsrs	r2, r2, #16
1a00676e:	fb01 2205 	mla	r2, r1, r5, r2
1a006772:	4494      	add	ip, r2
1a006774:	b29b      	uxth	r3, r3
1a006776:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
1a00677a:	f844 3b04 	str.w	r3, [r4], #4
1a00677e:	f850 3b04 	ldr.w	r3, [r0], #4
1a006782:	6822      	ldr	r2, [r4, #0]
1a006784:	0c1b      	lsrs	r3, r3, #16
1a006786:	b295      	uxth	r5, r2
1a006788:	fb01 5303 	mla	r3, r1, r3, r5
1a00678c:	eb03 431c 	add.w	r3, r3, ip, lsr #16
1a006790:	4287      	cmp	r7, r0
1a006792:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1a006796:	d8e8      	bhi.n	1a00676a <__multiply+0xca>
1a006798:	45f3      	cmp	fp, lr
1a00679a:	6023      	str	r3, [r4, #0]
1a00679c:	f10a 0a04 	add.w	sl, sl, #4
1a0067a0:	d8b7      	bhi.n	1a006712 <__multiply+0x72>
1a0067a2:	f8dd 8004 	ldr.w	r8, [sp, #4]
1a0067a6:	f1b8 0f00 	cmp.w	r8, #0
1a0067aa:	dd0b      	ble.n	1a0067c4 <__multiply+0x124>
1a0067ac:	f859 3c04 	ldr.w	r3, [r9, #-4]
1a0067b0:	f1a9 0904 	sub.w	r9, r9, #4
1a0067b4:	b11b      	cbz	r3, 1a0067be <__multiply+0x11e>
1a0067b6:	e005      	b.n	1a0067c4 <__multiply+0x124>
1a0067b8:	f859 3d04 	ldr.w	r3, [r9, #-4]!
1a0067bc:	b913      	cbnz	r3, 1a0067c4 <__multiply+0x124>
1a0067be:	f1b8 0801 	subs.w	r8, r8, #1
1a0067c2:	d1f9      	bne.n	1a0067b8 <__multiply+0x118>
1a0067c4:	9800      	ldr	r0, [sp, #0]
1a0067c6:	f8c0 8010 	str.w	r8, [r0, #16]
1a0067ca:	b003      	add	sp, #12
1a0067cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1a0067d0 <__pow5mult>:
1a0067d0:	f012 0303 	ands.w	r3, r2, #3
1a0067d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0067d8:	4614      	mov	r4, r2
1a0067da:	4607      	mov	r7, r0
1a0067dc:	d12e      	bne.n	1a00683c <__pow5mult+0x6c>
1a0067de:	460d      	mov	r5, r1
1a0067e0:	10a4      	asrs	r4, r4, #2
1a0067e2:	d01c      	beq.n	1a00681e <__pow5mult+0x4e>
1a0067e4:	6cbe      	ldr	r6, [r7, #72]	; 0x48
1a0067e6:	b396      	cbz	r6, 1a00684e <__pow5mult+0x7e>
1a0067e8:	07e3      	lsls	r3, r4, #31
1a0067ea:	f04f 0800 	mov.w	r8, #0
1a0067ee:	d406      	bmi.n	1a0067fe <__pow5mult+0x2e>
1a0067f0:	1064      	asrs	r4, r4, #1
1a0067f2:	d014      	beq.n	1a00681e <__pow5mult+0x4e>
1a0067f4:	6830      	ldr	r0, [r6, #0]
1a0067f6:	b1a8      	cbz	r0, 1a006824 <__pow5mult+0x54>
1a0067f8:	4606      	mov	r6, r0
1a0067fa:	07e3      	lsls	r3, r4, #31
1a0067fc:	d5f8      	bpl.n	1a0067f0 <__pow5mult+0x20>
1a0067fe:	4632      	mov	r2, r6
1a006800:	4629      	mov	r1, r5
1a006802:	4638      	mov	r0, r7
1a006804:	f7ff ff4c 	bl	1a0066a0 <__multiply>
1a006808:	b1b5      	cbz	r5, 1a006838 <__pow5mult+0x68>
1a00680a:	686a      	ldr	r2, [r5, #4]
1a00680c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
1a00680e:	1064      	asrs	r4, r4, #1
1a006810:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1a006814:	6029      	str	r1, [r5, #0]
1a006816:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
1a00681a:	4605      	mov	r5, r0
1a00681c:	d1ea      	bne.n	1a0067f4 <__pow5mult+0x24>
1a00681e:	4628      	mov	r0, r5
1a006820:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a006824:	4632      	mov	r2, r6
1a006826:	4631      	mov	r1, r6
1a006828:	4638      	mov	r0, r7
1a00682a:	f7ff ff39 	bl	1a0066a0 <__multiply>
1a00682e:	6030      	str	r0, [r6, #0]
1a006830:	f8c0 8000 	str.w	r8, [r0]
1a006834:	4606      	mov	r6, r0
1a006836:	e7e0      	b.n	1a0067fa <__pow5mult+0x2a>
1a006838:	4605      	mov	r5, r0
1a00683a:	e7d9      	b.n	1a0067f0 <__pow5mult+0x20>
1a00683c:	3b01      	subs	r3, #1
1a00683e:	4a0b      	ldr	r2, [pc, #44]	; (1a00686c <__pow5mult+0x9c>)
1a006840:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1a006844:	2300      	movs	r3, #0
1a006846:	f7ff fe8b 	bl	1a006560 <__multadd>
1a00684a:	4605      	mov	r5, r0
1a00684c:	e7c8      	b.n	1a0067e0 <__pow5mult+0x10>
1a00684e:	2101      	movs	r1, #1
1a006850:	4638      	mov	r0, r7
1a006852:	f7ff fe55 	bl	1a006500 <_Balloc>
1a006856:	f240 2371 	movw	r3, #625	; 0x271
1a00685a:	6143      	str	r3, [r0, #20]
1a00685c:	2201      	movs	r2, #1
1a00685e:	2300      	movs	r3, #0
1a006860:	6102      	str	r2, [r0, #16]
1a006862:	4606      	mov	r6, r0
1a006864:	64b8      	str	r0, [r7, #72]	; 0x48
1a006866:	6003      	str	r3, [r0, #0]
1a006868:	e7be      	b.n	1a0067e8 <__pow5mult+0x18>
1a00686a:	bf00      	nop
1a00686c:	1a0077e0 	.word	0x1a0077e0

1a006870 <__lshift>:
1a006870:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a006874:	690e      	ldr	r6, [r1, #16]
1a006876:	460d      	mov	r5, r1
1a006878:	ea4f 1962 	mov.w	r9, r2, asr #5
1a00687c:	e9d1 1301 	ldrd	r1, r3, [r1, #4]
1a006880:	444e      	add	r6, r9
1a006882:	1c74      	adds	r4, r6, #1
1a006884:	429c      	cmp	r4, r3
1a006886:	4690      	mov	r8, r2
1a006888:	4607      	mov	r7, r0
1a00688a:	dd04      	ble.n	1a006896 <__lshift+0x26>
1a00688c:	005b      	lsls	r3, r3, #1
1a00688e:	429c      	cmp	r4, r3
1a006890:	f101 0101 	add.w	r1, r1, #1
1a006894:	dcfa      	bgt.n	1a00688c <__lshift+0x1c>
1a006896:	4638      	mov	r0, r7
1a006898:	f7ff fe32 	bl	1a006500 <_Balloc>
1a00689c:	f1b9 0f00 	cmp.w	r9, #0
1a0068a0:	f100 0c14 	add.w	ip, r0, #20
1a0068a4:	dd0e      	ble.n	1a0068c4 <__lshift+0x54>
1a0068a6:	f109 0905 	add.w	r9, r9, #5
1a0068aa:	ea4f 0989 	mov.w	r9, r9, lsl #2
1a0068ae:	eb00 0109 	add.w	r1, r0, r9
1a0068b2:	4663      	mov	r3, ip
1a0068b4:	2200      	movs	r2, #0
1a0068b6:	f843 2b04 	str.w	r2, [r3], #4
1a0068ba:	428b      	cmp	r3, r1
1a0068bc:	d1fb      	bne.n	1a0068b6 <__lshift+0x46>
1a0068be:	f1a9 0914 	sub.w	r9, r9, #20
1a0068c2:	44cc      	add	ip, r9
1a0068c4:	6929      	ldr	r1, [r5, #16]
1a0068c6:	f105 0314 	add.w	r3, r5, #20
1a0068ca:	f018 081f 	ands.w	r8, r8, #31
1a0068ce:	eb03 0e81 	add.w	lr, r3, r1, lsl #2
1a0068d2:	d01d      	beq.n	1a006910 <__lshift+0xa0>
1a0068d4:	f1c8 0920 	rsb	r9, r8, #32
1a0068d8:	2200      	movs	r2, #0
1a0068da:	6819      	ldr	r1, [r3, #0]
1a0068dc:	fa01 f108 	lsl.w	r1, r1, r8
1a0068e0:	4311      	orrs	r1, r2
1a0068e2:	f84c 1b04 	str.w	r1, [ip], #4
1a0068e6:	f853 2b04 	ldr.w	r2, [r3], #4
1a0068ea:	4573      	cmp	r3, lr
1a0068ec:	fa22 f209 	lsr.w	r2, r2, r9
1a0068f0:	d3f3      	bcc.n	1a0068da <__lshift+0x6a>
1a0068f2:	f8cc 2000 	str.w	r2, [ip]
1a0068f6:	2a00      	cmp	r2, #0
1a0068f8:	bf18      	it	ne
1a0068fa:	4626      	movne	r6, r4
1a0068fc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
1a0068fe:	686a      	ldr	r2, [r5, #4]
1a006900:	6106      	str	r6, [r0, #16]
1a006902:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1a006906:	6029      	str	r1, [r5, #0]
1a006908:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
1a00690c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a006910:	f1ac 0c04 	sub.w	ip, ip, #4
1a006914:	f853 2b04 	ldr.w	r2, [r3], #4
1a006918:	f84c 2f04 	str.w	r2, [ip, #4]!
1a00691c:	459e      	cmp	lr, r3
1a00691e:	d8f9      	bhi.n	1a006914 <__lshift+0xa4>
1a006920:	e7ec      	b.n	1a0068fc <__lshift+0x8c>
1a006922:	bf00      	nop

1a006924 <__mcmp>:
1a006924:	b430      	push	{r4, r5}
1a006926:	690b      	ldr	r3, [r1, #16]
1a006928:	4605      	mov	r5, r0
1a00692a:	6900      	ldr	r0, [r0, #16]
1a00692c:	1ac0      	subs	r0, r0, r3
1a00692e:	d110      	bne.n	1a006952 <__mcmp+0x2e>
1a006930:	009b      	lsls	r3, r3, #2
1a006932:	3514      	adds	r5, #20
1a006934:	3114      	adds	r1, #20
1a006936:	4419      	add	r1, r3
1a006938:	442b      	add	r3, r5
1a00693a:	e001      	b.n	1a006940 <__mcmp+0x1c>
1a00693c:	429d      	cmp	r5, r3
1a00693e:	d208      	bcs.n	1a006952 <__mcmp+0x2e>
1a006940:	f853 4d04 	ldr.w	r4, [r3, #-4]!
1a006944:	f851 2d04 	ldr.w	r2, [r1, #-4]!
1a006948:	4294      	cmp	r4, r2
1a00694a:	d0f7      	beq.n	1a00693c <__mcmp+0x18>
1a00694c:	d203      	bcs.n	1a006956 <__mcmp+0x32>
1a00694e:	f04f 30ff 	mov.w	r0, #4294967295
1a006952:	bc30      	pop	{r4, r5}
1a006954:	4770      	bx	lr
1a006956:	2001      	movs	r0, #1
1a006958:	bc30      	pop	{r4, r5}
1a00695a:	4770      	bx	lr

1a00695c <__mdiff>:
1a00695c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a006960:	460f      	mov	r7, r1
1a006962:	690d      	ldr	r5, [r1, #16]
1a006964:	6911      	ldr	r1, [r2, #16]
1a006966:	1a6d      	subs	r5, r5, r1
1a006968:	2d00      	cmp	r5, #0
1a00696a:	4690      	mov	r8, r2
1a00696c:	4684      	mov	ip, r0
1a00696e:	f107 0414 	add.w	r4, r7, #20
1a006972:	f102 0614 	add.w	r6, r2, #20
1a006976:	d114      	bne.n	1a0069a2 <__mdiff+0x46>
1a006978:	0089      	lsls	r1, r1, #2
1a00697a:	1863      	adds	r3, r4, r1
1a00697c:	4431      	add	r1, r6
1a00697e:	e001      	b.n	1a006984 <__mdiff+0x28>
1a006980:	42a3      	cmp	r3, r4
1a006982:	d95d      	bls.n	1a006a40 <__mdiff+0xe4>
1a006984:	f853 0d04 	ldr.w	r0, [r3, #-4]!
1a006988:	f851 2d04 	ldr.w	r2, [r1, #-4]!
1a00698c:	4290      	cmp	r0, r2
1a00698e:	d0f7      	beq.n	1a006980 <__mdiff+0x24>
1a006990:	d209      	bcs.n	1a0069a6 <__mdiff+0x4a>
1a006992:	4622      	mov	r2, r4
1a006994:	463b      	mov	r3, r7
1a006996:	4634      	mov	r4, r6
1a006998:	4647      	mov	r7, r8
1a00699a:	4616      	mov	r6, r2
1a00699c:	4698      	mov	r8, r3
1a00699e:	2501      	movs	r5, #1
1a0069a0:	e001      	b.n	1a0069a6 <__mdiff+0x4a>
1a0069a2:	dbf6      	blt.n	1a006992 <__mdiff+0x36>
1a0069a4:	2500      	movs	r5, #0
1a0069a6:	4660      	mov	r0, ip
1a0069a8:	6879      	ldr	r1, [r7, #4]
1a0069aa:	f7ff fda9 	bl	1a006500 <_Balloc>
1a0069ae:	693f      	ldr	r7, [r7, #16]
1a0069b0:	f8d8 3010 	ldr.w	r3, [r8, #16]
1a0069b4:	60c5      	str	r5, [r0, #12]
1a0069b6:	eb06 0e83 	add.w	lr, r6, r3, lsl #2
1a0069ba:	eb04 0c87 	add.w	ip, r4, r7, lsl #2
1a0069be:	f100 0514 	add.w	r5, r0, #20
1a0069c2:	2200      	movs	r2, #0
1a0069c4:	e000      	b.n	1a0069c8 <__mdiff+0x6c>
1a0069c6:	460d      	mov	r5, r1
1a0069c8:	f856 1b04 	ldr.w	r1, [r6], #4
1a0069cc:	f854 8b04 	ldr.w	r8, [r4], #4
1a0069d0:	fa1f f981 	uxth.w	r9, r1
1a0069d4:	fa12 f388 	uxtah	r3, r2, r8
1a0069d8:	0c0a      	lsrs	r2, r1, #16
1a0069da:	eba3 0309 	sub.w	r3, r3, r9
1a0069de:	ebc2 4218 	rsb	r2, r2, r8, lsr #16
1a0069e2:	eb02 4223 	add.w	r2, r2, r3, asr #16
1a0069e6:	4629      	mov	r1, r5
1a0069e8:	b29b      	uxth	r3, r3
1a0069ea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a0069ee:	45b6      	cmp	lr, r6
1a0069f0:	ea4f 4222 	mov.w	r2, r2, asr #16
1a0069f4:	f841 3b04 	str.w	r3, [r1], #4
1a0069f8:	46a0      	mov	r8, r4
1a0069fa:	d8e4      	bhi.n	1a0069c6 <__mdiff+0x6a>
1a0069fc:	45a4      	cmp	ip, r4
1a0069fe:	d916      	bls.n	1a006a2e <__mdiff+0xd2>
1a006a00:	460e      	mov	r6, r1
1a006a02:	f858 5b04 	ldr.w	r5, [r8], #4
1a006a06:	fa12 f385 	uxtah	r3, r2, r5
1a006a0a:	141a      	asrs	r2, r3, #16
1a006a0c:	eb02 4215 	add.w	r2, r2, r5, lsr #16
1a006a10:	b29b      	uxth	r3, r3
1a006a12:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a006a16:	45c4      	cmp	ip, r8
1a006a18:	f846 3b04 	str.w	r3, [r6], #4
1a006a1c:	ea4f 4222 	mov.w	r2, r2, asr #16
1a006a20:	d8ef      	bhi.n	1a006a02 <__mdiff+0xa6>
1a006a22:	f10c 35ff 	add.w	r5, ip, #4294967295
1a006a26:	1b2d      	subs	r5, r5, r4
1a006a28:	f025 0503 	bic.w	r5, r5, #3
1a006a2c:	440d      	add	r5, r1
1a006a2e:	b923      	cbnz	r3, 1a006a3a <__mdiff+0xde>
1a006a30:	f855 3d04 	ldr.w	r3, [r5, #-4]!
1a006a34:	3f01      	subs	r7, #1
1a006a36:	2b00      	cmp	r3, #0
1a006a38:	d0fa      	beq.n	1a006a30 <__mdiff+0xd4>
1a006a3a:	6107      	str	r7, [r0, #16]
1a006a3c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a006a40:	4660      	mov	r0, ip
1a006a42:	2100      	movs	r1, #0
1a006a44:	f7ff fd5c 	bl	1a006500 <_Balloc>
1a006a48:	2201      	movs	r2, #1
1a006a4a:	2300      	movs	r3, #0
1a006a4c:	e9c0 2304 	strd	r2, r3, [r0, #16]
1a006a50:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

1a006a54 <__d2b>:
1a006a54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1a006a58:	460f      	mov	r7, r1
1a006a5a:	b083      	sub	sp, #12
1a006a5c:	2101      	movs	r1, #1
1a006a5e:	ec55 4b10 	vmov	r4, r5, d0
1a006a62:	4616      	mov	r6, r2
1a006a64:	f7ff fd4c 	bl	1a006500 <_Balloc>
1a006a68:	f3c5 580a 	ubfx	r8, r5, #20, #11
1a006a6c:	4681      	mov	r9, r0
1a006a6e:	f3c5 0313 	ubfx	r3, r5, #0, #20
1a006a72:	f1b8 0f00 	cmp.w	r8, #0
1a006a76:	d001      	beq.n	1a006a7c <__d2b+0x28>
1a006a78:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
1a006a7c:	2c00      	cmp	r4, #0
1a006a7e:	9301      	str	r3, [sp, #4]
1a006a80:	d02b      	beq.n	1a006ada <__d2b+0x86>
1a006a82:	4668      	mov	r0, sp
1a006a84:	9400      	str	r4, [sp, #0]
1a006a86:	f7ff fdd1 	bl	1a00662c <__lo0bits>
1a006a8a:	b9d0      	cbnz	r0, 1a006ac2 <__d2b+0x6e>
1a006a8c:	e9dd 2300 	ldrd	r2, r3, [sp]
1a006a90:	f8c9 2014 	str.w	r2, [r9, #20]
1a006a94:	2b00      	cmp	r3, #0
1a006a96:	bf14      	ite	ne
1a006a98:	2102      	movne	r1, #2
1a006a9a:	2101      	moveq	r1, #1
1a006a9c:	f8c9 3018 	str.w	r3, [r9, #24]
1a006aa0:	f8c9 1010 	str.w	r1, [r9, #16]
1a006aa4:	f1b8 0f00 	cmp.w	r8, #0
1a006aa8:	d024      	beq.n	1a006af4 <__d2b+0xa0>
1a006aaa:	f2a8 4833 	subw	r8, r8, #1075	; 0x433
1a006aae:	eb08 0300 	add.w	r3, r8, r0
1a006ab2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
1a006ab6:	603b      	str	r3, [r7, #0]
1a006ab8:	6030      	str	r0, [r6, #0]
1a006aba:	4648      	mov	r0, r9
1a006abc:	b003      	add	sp, #12
1a006abe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a006ac2:	e9dd 1300 	ldrd	r1, r3, [sp]
1a006ac6:	f1c0 0220 	rsb	r2, r0, #32
1a006aca:	fa03 f202 	lsl.w	r2, r3, r2
1a006ace:	430a      	orrs	r2, r1
1a006ad0:	40c3      	lsrs	r3, r0
1a006ad2:	9301      	str	r3, [sp, #4]
1a006ad4:	f8c9 2014 	str.w	r2, [r9, #20]
1a006ad8:	e7dc      	b.n	1a006a94 <__d2b+0x40>
1a006ada:	a801      	add	r0, sp, #4
1a006adc:	f7ff fda6 	bl	1a00662c <__lo0bits>
1a006ae0:	9b01      	ldr	r3, [sp, #4]
1a006ae2:	f8c9 3014 	str.w	r3, [r9, #20]
1a006ae6:	2101      	movs	r1, #1
1a006ae8:	3020      	adds	r0, #32
1a006aea:	f8c9 1010 	str.w	r1, [r9, #16]
1a006aee:	f1b8 0f00 	cmp.w	r8, #0
1a006af2:	d1da      	bne.n	1a006aaa <__d2b+0x56>
1a006af4:	eb09 0381 	add.w	r3, r9, r1, lsl #2
1a006af8:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
1a006afc:	6038      	str	r0, [r7, #0]
1a006afe:	6918      	ldr	r0, [r3, #16]
1a006b00:	f7ff fd74 	bl	1a0065ec <__hi0bits>
1a006b04:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
1a006b08:	6030      	str	r0, [r6, #0]
1a006b0a:	4648      	mov	r0, r9
1a006b0c:	b003      	add	sp, #12
1a006b0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a006b12:	bf00      	nop

1a006b14 <_realloc_r>:
1a006b14:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a006b18:	4617      	mov	r7, r2
1a006b1a:	2900      	cmp	r1, #0
1a006b1c:	f000 80bb 	beq.w	1a006c96 <_realloc_r+0x182>
1a006b20:	f107 040b 	add.w	r4, r7, #11
1a006b24:	4681      	mov	r9, r0
1a006b26:	460d      	mov	r5, r1
1a006b28:	f7fc fb3e 	bl	1a0031a8 <__malloc_lock>
1a006b2c:	2c16      	cmp	r4, #22
1a006b2e:	d85e      	bhi.n	1a006bee <_realloc_r+0xda>
1a006b30:	2410      	movs	r4, #16
1a006b32:	4622      	mov	r2, r4
1a006b34:	42a7      	cmp	r7, r4
1a006b36:	d85f      	bhi.n	1a006bf8 <_realloc_r+0xe4>
1a006b38:	f855 ec04 	ldr.w	lr, [r5, #-4]
1a006b3c:	f02e 0603 	bic.w	r6, lr, #3
1a006b40:	f1a5 0808 	sub.w	r8, r5, #8
1a006b44:	4296      	cmp	r6, r2
1a006b46:	eb08 0a06 	add.w	sl, r8, r6
1a006b4a:	f280 8081 	bge.w	1a006c50 <_realloc_r+0x13c>
1a006b4e:	4bcb      	ldr	r3, [pc, #812]	; (1a006e7c <_realloc_r+0x368>)
1a006b50:	f8da 0004 	ldr.w	r0, [sl, #4]
1a006b54:	6899      	ldr	r1, [r3, #8]
1a006b56:	4551      	cmp	r1, sl
1a006b58:	f000 80b5 	beq.w	1a006cc6 <_realloc_r+0x1b2>
1a006b5c:	f020 0301 	bic.w	r3, r0, #1
1a006b60:	4453      	add	r3, sl
1a006b62:	685b      	ldr	r3, [r3, #4]
1a006b64:	07db      	lsls	r3, r3, #31
1a006b66:	f100 808a 	bmi.w	1a006c7e <_realloc_r+0x16a>
1a006b6a:	f020 0003 	bic.w	r0, r0, #3
1a006b6e:	1833      	adds	r3, r6, r0
1a006b70:	4293      	cmp	r3, r2
1a006b72:	f280 8112 	bge.w	1a006d9a <_realloc_r+0x286>
1a006b76:	f01e 0f01 	tst.w	lr, #1
1a006b7a:	d10f      	bne.n	1a006b9c <_realloc_r+0x88>
1a006b7c:	f855 3c08 	ldr.w	r3, [r5, #-8]
1a006b80:	eba8 0b03 	sub.w	fp, r8, r3
1a006b84:	f8db 1004 	ldr.w	r1, [fp, #4]
1a006b88:	f021 0103 	bic.w	r1, r1, #3
1a006b8c:	4408      	add	r0, r1
1a006b8e:	1983      	adds	r3, r0, r6
1a006b90:	4293      	cmp	r3, r2
1a006b92:	f280 8116 	bge.w	1a006dc2 <_realloc_r+0x2ae>
1a006b96:	1873      	adds	r3, r6, r1
1a006b98:	4293      	cmp	r3, r2
1a006b9a:	da34      	bge.n	1a006c06 <_realloc_r+0xf2>
1a006b9c:	4639      	mov	r1, r7
1a006b9e:	4648      	mov	r0, r9
1a006ba0:	f7fb ff60 	bl	1a002a64 <_malloc_r>
1a006ba4:	4607      	mov	r7, r0
1a006ba6:	b1e0      	cbz	r0, 1a006be2 <_realloc_r+0xce>
1a006ba8:	f855 3c04 	ldr.w	r3, [r5, #-4]
1a006bac:	f023 0301 	bic.w	r3, r3, #1
1a006bb0:	4443      	add	r3, r8
1a006bb2:	f1a0 0208 	sub.w	r2, r0, #8
1a006bb6:	4293      	cmp	r3, r2
1a006bb8:	f000 80f7 	beq.w	1a006daa <_realloc_r+0x296>
1a006bbc:	1f32      	subs	r2, r6, #4
1a006bbe:	2a24      	cmp	r2, #36	; 0x24
1a006bc0:	f200 80fb 	bhi.w	1a006dba <_realloc_r+0x2a6>
1a006bc4:	2a13      	cmp	r2, #19
1a006bc6:	6829      	ldr	r1, [r5, #0]
1a006bc8:	f200 80c9 	bhi.w	1a006d5e <_realloc_r+0x24a>
1a006bcc:	4603      	mov	r3, r0
1a006bce:	462a      	mov	r2, r5
1a006bd0:	6019      	str	r1, [r3, #0]
1a006bd2:	6851      	ldr	r1, [r2, #4]
1a006bd4:	6059      	str	r1, [r3, #4]
1a006bd6:	6892      	ldr	r2, [r2, #8]
1a006bd8:	609a      	str	r2, [r3, #8]
1a006bda:	4629      	mov	r1, r5
1a006bdc:	4648      	mov	r0, r9
1a006bde:	f7fb fdf5 	bl	1a0027cc <_free_r>
1a006be2:	4648      	mov	r0, r9
1a006be4:	f7fc fae6 	bl	1a0031b4 <__malloc_unlock>
1a006be8:	4638      	mov	r0, r7
1a006bea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006bee:	f024 0407 	bic.w	r4, r4, #7
1a006bf2:	2c00      	cmp	r4, #0
1a006bf4:	4622      	mov	r2, r4
1a006bf6:	da9d      	bge.n	1a006b34 <_realloc_r+0x20>
1a006bf8:	230c      	movs	r3, #12
1a006bfa:	f8c9 3000 	str.w	r3, [r9]
1a006bfe:	2700      	movs	r7, #0
1a006c00:	4638      	mov	r0, r7
1a006c02:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006c06:	465f      	mov	r7, fp
1a006c08:	f8db 100c 	ldr.w	r1, [fp, #12]
1a006c0c:	f857 0f08 	ldr.w	r0, [r7, #8]!
1a006c10:	1f32      	subs	r2, r6, #4
1a006c12:	2a24      	cmp	r2, #36	; 0x24
1a006c14:	60c1      	str	r1, [r0, #12]
1a006c16:	eb0b 0a03 	add.w	sl, fp, r3
1a006c1a:	6088      	str	r0, [r1, #8]
1a006c1c:	f200 80d9 	bhi.w	1a006dd2 <_realloc_r+0x2be>
1a006c20:	2a13      	cmp	r2, #19
1a006c22:	6829      	ldr	r1, [r5, #0]
1a006c24:	f240 80d3 	bls.w	1a006dce <_realloc_r+0x2ba>
1a006c28:	f8cb 1008 	str.w	r1, [fp, #8]
1a006c2c:	6869      	ldr	r1, [r5, #4]
1a006c2e:	f8cb 100c 	str.w	r1, [fp, #12]
1a006c32:	2a1b      	cmp	r2, #27
1a006c34:	68a9      	ldr	r1, [r5, #8]
1a006c36:	f200 80e0 	bhi.w	1a006dfa <_realloc_r+0x2e6>
1a006c3a:	f10b 0210 	add.w	r2, fp, #16
1a006c3e:	3508      	adds	r5, #8
1a006c40:	6011      	str	r1, [r2, #0]
1a006c42:	6869      	ldr	r1, [r5, #4]
1a006c44:	6051      	str	r1, [r2, #4]
1a006c46:	68a9      	ldr	r1, [r5, #8]
1a006c48:	6091      	str	r1, [r2, #8]
1a006c4a:	461e      	mov	r6, r3
1a006c4c:	46d8      	mov	r8, fp
1a006c4e:	463d      	mov	r5, r7
1a006c50:	f8d8 3004 	ldr.w	r3, [r8, #4]
1a006c54:	1b32      	subs	r2, r6, r4
1a006c56:	2a0f      	cmp	r2, #15
1a006c58:	f003 0301 	and.w	r3, r3, #1
1a006c5c:	d820      	bhi.n	1a006ca0 <_realloc_r+0x18c>
1a006c5e:	4333      	orrs	r3, r6
1a006c60:	f8c8 3004 	str.w	r3, [r8, #4]
1a006c64:	f8da 3004 	ldr.w	r3, [sl, #4]
1a006c68:	f043 0301 	orr.w	r3, r3, #1
1a006c6c:	f8ca 3004 	str.w	r3, [sl, #4]
1a006c70:	4648      	mov	r0, r9
1a006c72:	462f      	mov	r7, r5
1a006c74:	f7fc fa9e 	bl	1a0031b4 <__malloc_unlock>
1a006c78:	4638      	mov	r0, r7
1a006c7a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006c7e:	f01e 0f01 	tst.w	lr, #1
1a006c82:	d18b      	bne.n	1a006b9c <_realloc_r+0x88>
1a006c84:	f855 3c08 	ldr.w	r3, [r5, #-8]
1a006c88:	eba8 0b03 	sub.w	fp, r8, r3
1a006c8c:	f8db 1004 	ldr.w	r1, [fp, #4]
1a006c90:	f021 0103 	bic.w	r1, r1, #3
1a006c94:	e77f      	b.n	1a006b96 <_realloc_r+0x82>
1a006c96:	4611      	mov	r1, r2
1a006c98:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a006c9c:	f7fb bee2 	b.w	1a002a64 <_malloc_r>
1a006ca0:	eb08 0104 	add.w	r1, r8, r4
1a006ca4:	4323      	orrs	r3, r4
1a006ca6:	f042 0201 	orr.w	r2, r2, #1
1a006caa:	f8c8 3004 	str.w	r3, [r8, #4]
1a006cae:	604a      	str	r2, [r1, #4]
1a006cb0:	f8da 3004 	ldr.w	r3, [sl, #4]
1a006cb4:	f043 0301 	orr.w	r3, r3, #1
1a006cb8:	3108      	adds	r1, #8
1a006cba:	f8ca 3004 	str.w	r3, [sl, #4]
1a006cbe:	4648      	mov	r0, r9
1a006cc0:	f7fb fd84 	bl	1a0027cc <_free_r>
1a006cc4:	e7d4      	b.n	1a006c70 <_realloc_r+0x15c>
1a006cc6:	f020 0003 	bic.w	r0, r0, #3
1a006cca:	1831      	adds	r1, r6, r0
1a006ccc:	f104 0c10 	add.w	ip, r4, #16
1a006cd0:	4561      	cmp	r1, ip
1a006cd2:	da4f      	bge.n	1a006d74 <_realloc_r+0x260>
1a006cd4:	f01e 0f01 	tst.w	lr, #1
1a006cd8:	f47f af60 	bne.w	1a006b9c <_realloc_r+0x88>
1a006cdc:	f855 1c08 	ldr.w	r1, [r5, #-8]
1a006ce0:	eba8 0b01 	sub.w	fp, r8, r1
1a006ce4:	f8db 1004 	ldr.w	r1, [fp, #4]
1a006ce8:	f021 0103 	bic.w	r1, r1, #3
1a006cec:	4408      	add	r0, r1
1a006cee:	eb00 0a06 	add.w	sl, r0, r6
1a006cf2:	45d4      	cmp	ip, sl
1a006cf4:	f73f af4f 	bgt.w	1a006b96 <_realloc_r+0x82>
1a006cf8:	465f      	mov	r7, fp
1a006cfa:	f8db 100c 	ldr.w	r1, [fp, #12]
1a006cfe:	f857 0f08 	ldr.w	r0, [r7, #8]!
1a006d02:	1f32      	subs	r2, r6, #4
1a006d04:	2a24      	cmp	r2, #36	; 0x24
1a006d06:	60c1      	str	r1, [r0, #12]
1a006d08:	6088      	str	r0, [r1, #8]
1a006d0a:	f200 8099 	bhi.w	1a006e40 <_realloc_r+0x32c>
1a006d0e:	2a13      	cmp	r2, #19
1a006d10:	6829      	ldr	r1, [r5, #0]
1a006d12:	f240 8093 	bls.w	1a006e3c <_realloc_r+0x328>
1a006d16:	f8cb 1008 	str.w	r1, [fp, #8]
1a006d1a:	6869      	ldr	r1, [r5, #4]
1a006d1c:	f8cb 100c 	str.w	r1, [fp, #12]
1a006d20:	2a1b      	cmp	r2, #27
1a006d22:	68a9      	ldr	r1, [r5, #8]
1a006d24:	f200 8092 	bhi.w	1a006e4c <_realloc_r+0x338>
1a006d28:	f10b 0210 	add.w	r2, fp, #16
1a006d2c:	3508      	adds	r5, #8
1a006d2e:	6011      	str	r1, [r2, #0]
1a006d30:	6869      	ldr	r1, [r5, #4]
1a006d32:	6051      	str	r1, [r2, #4]
1a006d34:	68a9      	ldr	r1, [r5, #8]
1a006d36:	6091      	str	r1, [r2, #8]
1a006d38:	eb0b 0104 	add.w	r1, fp, r4
1a006d3c:	ebaa 0204 	sub.w	r2, sl, r4
1a006d40:	f042 0201 	orr.w	r2, r2, #1
1a006d44:	6099      	str	r1, [r3, #8]
1a006d46:	604a      	str	r2, [r1, #4]
1a006d48:	f8db 3004 	ldr.w	r3, [fp, #4]
1a006d4c:	f003 0301 	and.w	r3, r3, #1
1a006d50:	431c      	orrs	r4, r3
1a006d52:	4648      	mov	r0, r9
1a006d54:	f8cb 4004 	str.w	r4, [fp, #4]
1a006d58:	f7fc fa2c 	bl	1a0031b4 <__malloc_unlock>
1a006d5c:	e750      	b.n	1a006c00 <_realloc_r+0xec>
1a006d5e:	6001      	str	r1, [r0, #0]
1a006d60:	686b      	ldr	r3, [r5, #4]
1a006d62:	6043      	str	r3, [r0, #4]
1a006d64:	2a1b      	cmp	r2, #27
1a006d66:	d83c      	bhi.n	1a006de2 <_realloc_r+0x2ce>
1a006d68:	f105 0208 	add.w	r2, r5, #8
1a006d6c:	f100 0308 	add.w	r3, r0, #8
1a006d70:	68a9      	ldr	r1, [r5, #8]
1a006d72:	e72d      	b.n	1a006bd0 <_realloc_r+0xbc>
1a006d74:	eb08 0004 	add.w	r0, r8, r4
1a006d78:	1b0a      	subs	r2, r1, r4
1a006d7a:	f042 0201 	orr.w	r2, r2, #1
1a006d7e:	6098      	str	r0, [r3, #8]
1a006d80:	6042      	str	r2, [r0, #4]
1a006d82:	f855 3c04 	ldr.w	r3, [r5, #-4]
1a006d86:	f003 0301 	and.w	r3, r3, #1
1a006d8a:	431c      	orrs	r4, r3
1a006d8c:	4648      	mov	r0, r9
1a006d8e:	f845 4c04 	str.w	r4, [r5, #-4]
1a006d92:	f7fc fa0f 	bl	1a0031b4 <__malloc_unlock>
1a006d96:	462f      	mov	r7, r5
1a006d98:	e732      	b.n	1a006c00 <_realloc_r+0xec>
1a006d9a:	e9da 1202 	ldrd	r1, r2, [sl, #8]
1a006d9e:	461e      	mov	r6, r3
1a006da0:	60ca      	str	r2, [r1, #12]
1a006da2:	eb08 0a03 	add.w	sl, r8, r3
1a006da6:	6091      	str	r1, [r2, #8]
1a006da8:	e752      	b.n	1a006c50 <_realloc_r+0x13c>
1a006daa:	f850 3c04 	ldr.w	r3, [r0, #-4]
1a006dae:	f023 0303 	bic.w	r3, r3, #3
1a006db2:	441e      	add	r6, r3
1a006db4:	eb08 0a06 	add.w	sl, r8, r6
1a006db8:	e74a      	b.n	1a006c50 <_realloc_r+0x13c>
1a006dba:	4629      	mov	r1, r5
1a006dbc:	f7ff fb38 	bl	1a006430 <memmove>
1a006dc0:	e70b      	b.n	1a006bda <_realloc_r+0xc6>
1a006dc2:	e9da 1202 	ldrd	r1, r2, [sl, #8]
1a006dc6:	465f      	mov	r7, fp
1a006dc8:	60ca      	str	r2, [r1, #12]
1a006dca:	6091      	str	r1, [r2, #8]
1a006dcc:	e71c      	b.n	1a006c08 <_realloc_r+0xf4>
1a006dce:	463a      	mov	r2, r7
1a006dd0:	e736      	b.n	1a006c40 <_realloc_r+0x12c>
1a006dd2:	4629      	mov	r1, r5
1a006dd4:	4638      	mov	r0, r7
1a006dd6:	461e      	mov	r6, r3
1a006dd8:	46d8      	mov	r8, fp
1a006dda:	f7ff fb29 	bl	1a006430 <memmove>
1a006dde:	463d      	mov	r5, r7
1a006de0:	e736      	b.n	1a006c50 <_realloc_r+0x13c>
1a006de2:	68ab      	ldr	r3, [r5, #8]
1a006de4:	6083      	str	r3, [r0, #8]
1a006de6:	68eb      	ldr	r3, [r5, #12]
1a006de8:	60c3      	str	r3, [r0, #12]
1a006dea:	2a24      	cmp	r2, #36	; 0x24
1a006dec:	d011      	beq.n	1a006e12 <_realloc_r+0x2fe>
1a006dee:	f105 0210 	add.w	r2, r5, #16
1a006df2:	f100 0310 	add.w	r3, r0, #16
1a006df6:	6929      	ldr	r1, [r5, #16]
1a006df8:	e6ea      	b.n	1a006bd0 <_realloc_r+0xbc>
1a006dfa:	f8cb 1010 	str.w	r1, [fp, #16]
1a006dfe:	68e9      	ldr	r1, [r5, #12]
1a006e00:	f8cb 1014 	str.w	r1, [fp, #20]
1a006e04:	2a24      	cmp	r2, #36	; 0x24
1a006e06:	d00e      	beq.n	1a006e26 <_realloc_r+0x312>
1a006e08:	6929      	ldr	r1, [r5, #16]
1a006e0a:	f10b 0218 	add.w	r2, fp, #24
1a006e0e:	3510      	adds	r5, #16
1a006e10:	e716      	b.n	1a006c40 <_realloc_r+0x12c>
1a006e12:	692b      	ldr	r3, [r5, #16]
1a006e14:	6103      	str	r3, [r0, #16]
1a006e16:	696b      	ldr	r3, [r5, #20]
1a006e18:	6143      	str	r3, [r0, #20]
1a006e1a:	69a9      	ldr	r1, [r5, #24]
1a006e1c:	f105 0218 	add.w	r2, r5, #24
1a006e20:	f100 0318 	add.w	r3, r0, #24
1a006e24:	e6d4      	b.n	1a006bd0 <_realloc_r+0xbc>
1a006e26:	692a      	ldr	r2, [r5, #16]
1a006e28:	f8cb 2018 	str.w	r2, [fp, #24]
1a006e2c:	696a      	ldr	r2, [r5, #20]
1a006e2e:	f8cb 201c 	str.w	r2, [fp, #28]
1a006e32:	69a9      	ldr	r1, [r5, #24]
1a006e34:	f10b 0220 	add.w	r2, fp, #32
1a006e38:	3518      	adds	r5, #24
1a006e3a:	e701      	b.n	1a006c40 <_realloc_r+0x12c>
1a006e3c:	463a      	mov	r2, r7
1a006e3e:	e776      	b.n	1a006d2e <_realloc_r+0x21a>
1a006e40:	4629      	mov	r1, r5
1a006e42:	4638      	mov	r0, r7
1a006e44:	f7ff faf4 	bl	1a006430 <memmove>
1a006e48:	4b0c      	ldr	r3, [pc, #48]	; (1a006e7c <_realloc_r+0x368>)
1a006e4a:	e775      	b.n	1a006d38 <_realloc_r+0x224>
1a006e4c:	f8cb 1010 	str.w	r1, [fp, #16]
1a006e50:	68e9      	ldr	r1, [r5, #12]
1a006e52:	f8cb 1014 	str.w	r1, [fp, #20]
1a006e56:	2a24      	cmp	r2, #36	; 0x24
1a006e58:	d004      	beq.n	1a006e64 <_realloc_r+0x350>
1a006e5a:	6929      	ldr	r1, [r5, #16]
1a006e5c:	f10b 0218 	add.w	r2, fp, #24
1a006e60:	3510      	adds	r5, #16
1a006e62:	e764      	b.n	1a006d2e <_realloc_r+0x21a>
1a006e64:	692a      	ldr	r2, [r5, #16]
1a006e66:	f8cb 2018 	str.w	r2, [fp, #24]
1a006e6a:	696a      	ldr	r2, [r5, #20]
1a006e6c:	f8cb 201c 	str.w	r2, [fp, #28]
1a006e70:	69a9      	ldr	r1, [r5, #24]
1a006e72:	f10b 0220 	add.w	r2, fp, #32
1a006e76:	3518      	adds	r5, #24
1a006e78:	e759      	b.n	1a006d2e <_realloc_r+0x21a>
1a006e7a:	bf00      	nop
1a006e7c:	10000478 	.word	0x10000478

1a006e80 <frexp>:
1a006e80:	ec53 2b10 	vmov	r2, r3, d0
1a006e84:	b570      	push	{r4, r5, r6, lr}
1a006e86:	4e16      	ldr	r6, [pc, #88]	; (1a006ee0 <frexp+0x60>)
1a006e88:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
1a006e8c:	2500      	movs	r5, #0
1a006e8e:	42b1      	cmp	r1, r6
1a006e90:	4604      	mov	r4, r0
1a006e92:	6005      	str	r5, [r0, #0]
1a006e94:	dc21      	bgt.n	1a006eda <frexp+0x5a>
1a006e96:	ee10 6a10 	vmov	r6, s0
1a006e9a:	430e      	orrs	r6, r1
1a006e9c:	d01d      	beq.n	1a006eda <frexp+0x5a>
1a006e9e:	4e11      	ldr	r6, [pc, #68]	; (1a006ee4 <frexp+0x64>)
1a006ea0:	401e      	ands	r6, r3
1a006ea2:	4618      	mov	r0, r3
1a006ea4:	b966      	cbnz	r6, 1a006ec0 <frexp+0x40>
1a006ea6:	4619      	mov	r1, r3
1a006ea8:	2200      	movs	r2, #0
1a006eaa:	ee10 0a10 	vmov	r0, s0
1a006eae:	4b0e      	ldr	r3, [pc, #56]	; (1a006ee8 <frexp+0x68>)
1a006eb0:	f7fa fe80 	bl	1a001bb4 <__aeabi_dmul>
1a006eb4:	f06f 0535 	mvn.w	r5, #53	; 0x35
1a006eb8:	4602      	mov	r2, r0
1a006eba:	4608      	mov	r0, r1
1a006ebc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a006ec0:	f020 40ff 	bic.w	r0, r0, #2139095040	; 0x7f800000
1a006ec4:	1509      	asrs	r1, r1, #20
1a006ec6:	f420 00e0 	bic.w	r0, r0, #7340032	; 0x700000
1a006eca:	f2a1 31fe 	subw	r1, r1, #1022	; 0x3fe
1a006ece:	f040 537f 	orr.w	r3, r0, #1069547520	; 0x3fc00000
1a006ed2:	4429      	add	r1, r5
1a006ed4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
1a006ed8:	6021      	str	r1, [r4, #0]
1a006eda:	ec43 2b10 	vmov	d0, r2, r3
1a006ede:	bd70      	pop	{r4, r5, r6, pc}
1a006ee0:	7fefffff 	.word	0x7fefffff
1a006ee4:	7ff00000 	.word	0x7ff00000
1a006ee8:	43500000 	.word	0x43500000

1a006eec <strncpy>:
1a006eec:	b470      	push	{r4, r5, r6}
1a006eee:	ea40 0401 	orr.w	r4, r0, r1
1a006ef2:	07a3      	lsls	r3, r4, #30
1a006ef4:	d127      	bne.n	1a006f46 <strncpy+0x5a>
1a006ef6:	2a03      	cmp	r2, #3
1a006ef8:	d925      	bls.n	1a006f46 <strncpy+0x5a>
1a006efa:	460b      	mov	r3, r1
1a006efc:	4606      	mov	r6, r0
1a006efe:	4619      	mov	r1, r3
1a006f00:	f853 5b04 	ldr.w	r5, [r3], #4
1a006f04:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
1a006f08:	ea24 0405 	bic.w	r4, r4, r5
1a006f0c:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
1a006f10:	d106      	bne.n	1a006f20 <strncpy+0x34>
1a006f12:	3a04      	subs	r2, #4
1a006f14:	2a03      	cmp	r2, #3
1a006f16:	f846 5b04 	str.w	r5, [r6], #4
1a006f1a:	4619      	mov	r1, r3
1a006f1c:	d8ef      	bhi.n	1a006efe <strncpy+0x12>
1a006f1e:	b182      	cbz	r2, 1a006f42 <strncpy+0x56>
1a006f20:	4633      	mov	r3, r6
1a006f22:	780c      	ldrb	r4, [r1, #0]
1a006f24:	f803 4b01 	strb.w	r4, [r3], #1
1a006f28:	1e55      	subs	r5, r2, #1
1a006f2a:	b174      	cbz	r4, 1a006f4a <strncpy+0x5e>
1a006f2c:	4432      	add	r2, r6
1a006f2e:	442e      	add	r6, r5
1a006f30:	e005      	b.n	1a006f3e <strncpy+0x52>
1a006f32:	f811 4f01 	ldrb.w	r4, [r1, #1]!
1a006f36:	1af5      	subs	r5, r6, r3
1a006f38:	f803 4b01 	strb.w	r4, [r3], #1
1a006f3c:	b12c      	cbz	r4, 1a006f4a <strncpy+0x5e>
1a006f3e:	429a      	cmp	r2, r3
1a006f40:	d1f7      	bne.n	1a006f32 <strncpy+0x46>
1a006f42:	bc70      	pop	{r4, r5, r6}
1a006f44:	4770      	bx	lr
1a006f46:	4606      	mov	r6, r0
1a006f48:	e7e9      	b.n	1a006f1e <strncpy+0x32>
1a006f4a:	2d00      	cmp	r5, #0
1a006f4c:	d0f9      	beq.n	1a006f42 <strncpy+0x56>
1a006f4e:	441d      	add	r5, r3
1a006f50:	2200      	movs	r2, #0
1a006f52:	f803 2b01 	strb.w	r2, [r3], #1
1a006f56:	42ab      	cmp	r3, r5
1a006f58:	d1fb      	bne.n	1a006f52 <strncpy+0x66>
1a006f5a:	bc70      	pop	{r4, r5, r6}
1a006f5c:	4770      	bx	lr
1a006f5e:	bf00      	nop

1a006f60 <__sprint_r.part.0>:
1a006f60:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a006f64:	6e4b      	ldr	r3, [r1, #100]	; 0x64
1a006f66:	049c      	lsls	r4, r3, #18
1a006f68:	4693      	mov	fp, r2
1a006f6a:	d52d      	bpl.n	1a006fc8 <__sprint_r.part.0+0x68>
1a006f6c:	6893      	ldr	r3, [r2, #8]
1a006f6e:	6812      	ldr	r2, [r2, #0]
1a006f70:	b343      	cbz	r3, 1a006fc4 <__sprint_r.part.0+0x64>
1a006f72:	460e      	mov	r6, r1
1a006f74:	4607      	mov	r7, r0
1a006f76:	f102 0908 	add.w	r9, r2, #8
1a006f7a:	e959 5a02 	ldrd	r5, sl, [r9, #-8]
1a006f7e:	ea5f 089a 	movs.w	r8, sl, lsr #2
1a006f82:	d015      	beq.n	1a006fb0 <__sprint_r.part.0+0x50>
1a006f84:	3d04      	subs	r5, #4
1a006f86:	2400      	movs	r4, #0
1a006f88:	e001      	b.n	1a006f8e <__sprint_r.part.0+0x2e>
1a006f8a:	45a0      	cmp	r8, r4
1a006f8c:	d00e      	beq.n	1a006fac <__sprint_r.part.0+0x4c>
1a006f8e:	4632      	mov	r2, r6
1a006f90:	f855 1f04 	ldr.w	r1, [r5, #4]!
1a006f94:	4638      	mov	r0, r7
1a006f96:	f000 f8a9 	bl	1a0070ec <_fputwc_r>
1a006f9a:	1c43      	adds	r3, r0, #1
1a006f9c:	f104 0401 	add.w	r4, r4, #1
1a006fa0:	d1f3      	bne.n	1a006f8a <__sprint_r.part.0+0x2a>
1a006fa2:	2300      	movs	r3, #0
1a006fa4:	e9cb 3301 	strd	r3, r3, [fp, #4]
1a006fa8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006fac:	f8db 3008 	ldr.w	r3, [fp, #8]
1a006fb0:	f02a 0a03 	bic.w	sl, sl, #3
1a006fb4:	eba3 030a 	sub.w	r3, r3, sl
1a006fb8:	f8cb 3008 	str.w	r3, [fp, #8]
1a006fbc:	f109 0908 	add.w	r9, r9, #8
1a006fc0:	2b00      	cmp	r3, #0
1a006fc2:	d1da      	bne.n	1a006f7a <__sprint_r.part.0+0x1a>
1a006fc4:	2000      	movs	r0, #0
1a006fc6:	e7ec      	b.n	1a006fa2 <__sprint_r.part.0+0x42>
1a006fc8:	f7fe ffdc 	bl	1a005f84 <__sfvwrite_r>
1a006fcc:	2300      	movs	r3, #0
1a006fce:	e9cb 3301 	strd	r3, r3, [fp, #4]
1a006fd2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006fd6:	bf00      	nop

1a006fd8 <__sprint_r>:
1a006fd8:	6893      	ldr	r3, [r2, #8]
1a006fda:	b10b      	cbz	r3, 1a006fe0 <__sprint_r+0x8>
1a006fdc:	f7ff bfc0 	b.w	1a006f60 <__sprint_r.part.0>
1a006fe0:	b410      	push	{r4}
1a006fe2:	4618      	mov	r0, r3
1a006fe4:	6053      	str	r3, [r2, #4]
1a006fe6:	f85d 4b04 	ldr.w	r4, [sp], #4
1a006fea:	4770      	bx	lr

1a006fec <_calloc_r>:
1a006fec:	b510      	push	{r4, lr}
1a006fee:	fb02 f101 	mul.w	r1, r2, r1
1a006ff2:	f7fb fd37 	bl	1a002a64 <_malloc_r>
1a006ff6:	4604      	mov	r4, r0
1a006ff8:	b168      	cbz	r0, 1a007016 <_calloc_r+0x2a>
1a006ffa:	f850 2c04 	ldr.w	r2, [r0, #-4]
1a006ffe:	f022 0203 	bic.w	r2, r2, #3
1a007002:	3a04      	subs	r2, #4
1a007004:	2a24      	cmp	r2, #36	; 0x24
1a007006:	d818      	bhi.n	1a00703a <_calloc_r+0x4e>
1a007008:	2a13      	cmp	r2, #19
1a00700a:	d806      	bhi.n	1a00701a <_calloc_r+0x2e>
1a00700c:	4602      	mov	r2, r0
1a00700e:	2300      	movs	r3, #0
1a007010:	e9c2 3300 	strd	r3, r3, [r2]
1a007014:	6093      	str	r3, [r2, #8]
1a007016:	4620      	mov	r0, r4
1a007018:	bd10      	pop	{r4, pc}
1a00701a:	2300      	movs	r3, #0
1a00701c:	2a1b      	cmp	r2, #27
1a00701e:	e9c0 3300 	strd	r3, r3, [r0]
1a007022:	d90f      	bls.n	1a007044 <_calloc_r+0x58>
1a007024:	2a24      	cmp	r2, #36	; 0x24
1a007026:	e9c0 3302 	strd	r3, r3, [r0, #8]
1a00702a:	bf12      	itee	ne
1a00702c:	f100 0210 	addne.w	r2, r0, #16
1a007030:	e9c0 3304 	strdeq	r3, r3, [r0, #16]
1a007034:	f100 0218 	addeq.w	r2, r0, #24
1a007038:	e7e9      	b.n	1a00700e <_calloc_r+0x22>
1a00703a:	2100      	movs	r1, #0
1a00703c:	f7fc f864 	bl	1a003108 <memset>
1a007040:	4620      	mov	r0, r4
1a007042:	bd10      	pop	{r4, pc}
1a007044:	f100 0208 	add.w	r2, r0, #8
1a007048:	e7e1      	b.n	1a00700e <_calloc_r+0x22>
1a00704a:	bf00      	nop

1a00704c <__fputwc>:
1a00704c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a007050:	b082      	sub	sp, #8
1a007052:	4680      	mov	r8, r0
1a007054:	4689      	mov	r9, r1
1a007056:	4614      	mov	r4, r2
1a007058:	f000 f87a 	bl	1a007150 <__locale_mb_cur_max>
1a00705c:	2801      	cmp	r0, #1
1a00705e:	d103      	bne.n	1a007068 <__fputwc+0x1c>
1a007060:	f109 33ff 	add.w	r3, r9, #4294967295
1a007064:	2bfe      	cmp	r3, #254	; 0xfe
1a007066:	d933      	bls.n	1a0070d0 <__fputwc+0x84>
1a007068:	464a      	mov	r2, r9
1a00706a:	f104 035c 	add.w	r3, r4, #92	; 0x5c
1a00706e:	a901      	add	r1, sp, #4
1a007070:	4640      	mov	r0, r8
1a007072:	f000 f8e1 	bl	1a007238 <_wcrtomb_r>
1a007076:	1c42      	adds	r2, r0, #1
1a007078:	4606      	mov	r6, r0
1a00707a:	d02f      	beq.n	1a0070dc <__fputwc+0x90>
1a00707c:	b320      	cbz	r0, 1a0070c8 <__fputwc+0x7c>
1a00707e:	f89d c004 	ldrb.w	ip, [sp, #4]
1a007082:	2500      	movs	r5, #0
1a007084:	f10d 0a04 	add.w	sl, sp, #4
1a007088:	e009      	b.n	1a00709e <__fputwc+0x52>
1a00708a:	6823      	ldr	r3, [r4, #0]
1a00708c:	1c5a      	adds	r2, r3, #1
1a00708e:	6022      	str	r2, [r4, #0]
1a007090:	f883 c000 	strb.w	ip, [r3]
1a007094:	3501      	adds	r5, #1
1a007096:	42b5      	cmp	r5, r6
1a007098:	d216      	bcs.n	1a0070c8 <__fputwc+0x7c>
1a00709a:	f815 c00a 	ldrb.w	ip, [r5, sl]
1a00709e:	68a3      	ldr	r3, [r4, #8]
1a0070a0:	3b01      	subs	r3, #1
1a0070a2:	2b00      	cmp	r3, #0
1a0070a4:	60a3      	str	r3, [r4, #8]
1a0070a6:	daf0      	bge.n	1a00708a <__fputwc+0x3e>
1a0070a8:	69a7      	ldr	r7, [r4, #24]
1a0070aa:	42bb      	cmp	r3, r7
1a0070ac:	4661      	mov	r1, ip
1a0070ae:	4622      	mov	r2, r4
1a0070b0:	4640      	mov	r0, r8
1a0070b2:	db02      	blt.n	1a0070ba <__fputwc+0x6e>
1a0070b4:	f1bc 0f0a 	cmp.w	ip, #10
1a0070b8:	d1e7      	bne.n	1a00708a <__fputwc+0x3e>
1a0070ba:	f000 f865 	bl	1a007188 <__swbuf_r>
1a0070be:	1c43      	adds	r3, r0, #1
1a0070c0:	d1e8      	bne.n	1a007094 <__fputwc+0x48>
1a0070c2:	b002      	add	sp, #8
1a0070c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a0070c8:	4648      	mov	r0, r9
1a0070ca:	b002      	add	sp, #8
1a0070cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a0070d0:	fa5f fc89 	uxtb.w	ip, r9
1a0070d4:	4606      	mov	r6, r0
1a0070d6:	f88d c004 	strb.w	ip, [sp, #4]
1a0070da:	e7d2      	b.n	1a007082 <__fputwc+0x36>
1a0070dc:	89a3      	ldrh	r3, [r4, #12]
1a0070de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a0070e2:	81a3      	strh	r3, [r4, #12]
1a0070e4:	b002      	add	sp, #8
1a0070e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a0070ea:	bf00      	nop

1a0070ec <_fputwc_r>:
1a0070ec:	b530      	push	{r4, r5, lr}
1a0070ee:	4605      	mov	r5, r0
1a0070f0:	6e50      	ldr	r0, [r2, #100]	; 0x64
1a0070f2:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
1a0070f6:	07c0      	lsls	r0, r0, #31
1a0070f8:	4614      	mov	r4, r2
1a0070fa:	b083      	sub	sp, #12
1a0070fc:	b29a      	uxth	r2, r3
1a0070fe:	d401      	bmi.n	1a007104 <_fputwc_r+0x18>
1a007100:	0590      	lsls	r0, r2, #22
1a007102:	d51c      	bpl.n	1a00713e <_fputwc_r+0x52>
1a007104:	0490      	lsls	r0, r2, #18
1a007106:	d406      	bmi.n	1a007116 <_fputwc_r+0x2a>
1a007108:	6e62      	ldr	r2, [r4, #100]	; 0x64
1a00710a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
1a00710e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
1a007112:	81a3      	strh	r3, [r4, #12]
1a007114:	6662      	str	r2, [r4, #100]	; 0x64
1a007116:	4628      	mov	r0, r5
1a007118:	4622      	mov	r2, r4
1a00711a:	f7ff ff97 	bl	1a00704c <__fputwc>
1a00711e:	6e63      	ldr	r3, [r4, #100]	; 0x64
1a007120:	07da      	lsls	r2, r3, #31
1a007122:	4605      	mov	r5, r0
1a007124:	d402      	bmi.n	1a00712c <_fputwc_r+0x40>
1a007126:	89a3      	ldrh	r3, [r4, #12]
1a007128:	059b      	lsls	r3, r3, #22
1a00712a:	d502      	bpl.n	1a007132 <_fputwc_r+0x46>
1a00712c:	4628      	mov	r0, r5
1a00712e:	b003      	add	sp, #12
1a007130:	bd30      	pop	{r4, r5, pc}
1a007132:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a007134:	f7fb fc94 	bl	1a002a60 <__retarget_lock_release_recursive>
1a007138:	4628      	mov	r0, r5
1a00713a:	b003      	add	sp, #12
1a00713c:	bd30      	pop	{r4, r5, pc}
1a00713e:	6da0      	ldr	r0, [r4, #88]	; 0x58
1a007140:	9101      	str	r1, [sp, #4]
1a007142:	f7fb fc8b 	bl	1a002a5c <__retarget_lock_acquire_recursive>
1a007146:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1a00714a:	9901      	ldr	r1, [sp, #4]
1a00714c:	b29a      	uxth	r2, r3
1a00714e:	e7d9      	b.n	1a007104 <_fputwc_r+0x18>

1a007150 <__locale_mb_cur_max>:
1a007150:	4b01      	ldr	r3, [pc, #4]	; (1a007158 <__locale_mb_cur_max+0x8>)
1a007152:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
1a007156:	4770      	bx	lr
1a007158:	10000888 	.word	0x10000888

1a00715c <__ascii_mbtowc>:
1a00715c:	b082      	sub	sp, #8
1a00715e:	b149      	cbz	r1, 1a007174 <__ascii_mbtowc+0x18>
1a007160:	b15a      	cbz	r2, 1a00717a <__ascii_mbtowc+0x1e>
1a007162:	b16b      	cbz	r3, 1a007180 <__ascii_mbtowc+0x24>
1a007164:	7813      	ldrb	r3, [r2, #0]
1a007166:	600b      	str	r3, [r1, #0]
1a007168:	7812      	ldrb	r2, [r2, #0]
1a00716a:	1c10      	adds	r0, r2, #0
1a00716c:	bf18      	it	ne
1a00716e:	2001      	movne	r0, #1
1a007170:	b002      	add	sp, #8
1a007172:	4770      	bx	lr
1a007174:	a901      	add	r1, sp, #4
1a007176:	2a00      	cmp	r2, #0
1a007178:	d1f3      	bne.n	1a007162 <__ascii_mbtowc+0x6>
1a00717a:	4610      	mov	r0, r2
1a00717c:	b002      	add	sp, #8
1a00717e:	4770      	bx	lr
1a007180:	f06f 0001 	mvn.w	r0, #1
1a007184:	e7f4      	b.n	1a007170 <__ascii_mbtowc+0x14>
1a007186:	bf00      	nop

1a007188 <__swbuf_r>:
1a007188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a00718a:	460d      	mov	r5, r1
1a00718c:	4614      	mov	r4, r2
1a00718e:	4606      	mov	r6, r0
1a007190:	b110      	cbz	r0, 1a007198 <__swbuf_r+0x10>
1a007192:	6b83      	ldr	r3, [r0, #56]	; 0x38
1a007194:	2b00      	cmp	r3, #0
1a007196:	d043      	beq.n	1a007220 <__swbuf_r+0x98>
1a007198:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a00719c:	69a3      	ldr	r3, [r4, #24]
1a00719e:	60a3      	str	r3, [r4, #8]
1a0071a0:	b291      	uxth	r1, r2
1a0071a2:	0708      	lsls	r0, r1, #28
1a0071a4:	d51b      	bpl.n	1a0071de <__swbuf_r+0x56>
1a0071a6:	6923      	ldr	r3, [r4, #16]
1a0071a8:	b1cb      	cbz	r3, 1a0071de <__swbuf_r+0x56>
1a0071aa:	b2ed      	uxtb	r5, r5
1a0071ac:	0489      	lsls	r1, r1, #18
1a0071ae:	462f      	mov	r7, r5
1a0071b0:	d522      	bpl.n	1a0071f8 <__swbuf_r+0x70>
1a0071b2:	6822      	ldr	r2, [r4, #0]
1a0071b4:	6961      	ldr	r1, [r4, #20]
1a0071b6:	1ad3      	subs	r3, r2, r3
1a0071b8:	4299      	cmp	r1, r3
1a0071ba:	dd29      	ble.n	1a007210 <__swbuf_r+0x88>
1a0071bc:	3301      	adds	r3, #1
1a0071be:	68a1      	ldr	r1, [r4, #8]
1a0071c0:	1c50      	adds	r0, r2, #1
1a0071c2:	3901      	subs	r1, #1
1a0071c4:	60a1      	str	r1, [r4, #8]
1a0071c6:	6020      	str	r0, [r4, #0]
1a0071c8:	7015      	strb	r5, [r2, #0]
1a0071ca:	6962      	ldr	r2, [r4, #20]
1a0071cc:	429a      	cmp	r2, r3
1a0071ce:	d02a      	beq.n	1a007226 <__swbuf_r+0x9e>
1a0071d0:	89a3      	ldrh	r3, [r4, #12]
1a0071d2:	07db      	lsls	r3, r3, #31
1a0071d4:	d501      	bpl.n	1a0071da <__swbuf_r+0x52>
1a0071d6:	2d0a      	cmp	r5, #10
1a0071d8:	d025      	beq.n	1a007226 <__swbuf_r+0x9e>
1a0071da:	4638      	mov	r0, r7
1a0071dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a0071de:	4621      	mov	r1, r4
1a0071e0:	4630      	mov	r0, r6
1a0071e2:	f7fd fea9 	bl	1a004f38 <__swsetup_r>
1a0071e6:	bb20      	cbnz	r0, 1a007232 <__swbuf_r+0xaa>
1a0071e8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1a0071ec:	6923      	ldr	r3, [r4, #16]
1a0071ee:	b291      	uxth	r1, r2
1a0071f0:	b2ed      	uxtb	r5, r5
1a0071f2:	0489      	lsls	r1, r1, #18
1a0071f4:	462f      	mov	r7, r5
1a0071f6:	d4dc      	bmi.n	1a0071b2 <__swbuf_r+0x2a>
1a0071f8:	6e61      	ldr	r1, [r4, #100]	; 0x64
1a0071fa:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
1a0071fe:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
1a007202:	81a2      	strh	r2, [r4, #12]
1a007204:	6822      	ldr	r2, [r4, #0]
1a007206:	6661      	str	r1, [r4, #100]	; 0x64
1a007208:	6961      	ldr	r1, [r4, #20]
1a00720a:	1ad3      	subs	r3, r2, r3
1a00720c:	4299      	cmp	r1, r3
1a00720e:	dcd5      	bgt.n	1a0071bc <__swbuf_r+0x34>
1a007210:	4621      	mov	r1, r4
1a007212:	4630      	mov	r0, r6
1a007214:	f7fb f9f8 	bl	1a002608 <_fflush_r>
1a007218:	b958      	cbnz	r0, 1a007232 <__swbuf_r+0xaa>
1a00721a:	6822      	ldr	r2, [r4, #0]
1a00721c:	2301      	movs	r3, #1
1a00721e:	e7ce      	b.n	1a0071be <__swbuf_r+0x36>
1a007220:	f7fb fa4e 	bl	1a0026c0 <__sinit>
1a007224:	e7b8      	b.n	1a007198 <__swbuf_r+0x10>
1a007226:	4621      	mov	r1, r4
1a007228:	4630      	mov	r0, r6
1a00722a:	f7fb f9ed 	bl	1a002608 <_fflush_r>
1a00722e:	2800      	cmp	r0, #0
1a007230:	d0d3      	beq.n	1a0071da <__swbuf_r+0x52>
1a007232:	f04f 37ff 	mov.w	r7, #4294967295
1a007236:	e7d0      	b.n	1a0071da <__swbuf_r+0x52>

1a007238 <_wcrtomb_r>:
1a007238:	b5f0      	push	{r4, r5, r6, r7, lr}
1a00723a:	4c0b      	ldr	r4, [pc, #44]	; (1a007268 <_wcrtomb_r+0x30>)
1a00723c:	b085      	sub	sp, #20
1a00723e:	4606      	mov	r6, r0
1a007240:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
1a007244:	461f      	mov	r7, r3
1a007246:	b121      	cbz	r1, 1a007252 <_wcrtomb_r+0x1a>
1a007248:	47a0      	blx	r4
1a00724a:	1c43      	adds	r3, r0, #1
1a00724c:	d006      	beq.n	1a00725c <_wcrtomb_r+0x24>
1a00724e:	b005      	add	sp, #20
1a007250:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a007252:	460a      	mov	r2, r1
1a007254:	a901      	add	r1, sp, #4
1a007256:	47a0      	blx	r4
1a007258:	1c43      	adds	r3, r0, #1
1a00725a:	d1f8      	bne.n	1a00724e <_wcrtomb_r+0x16>
1a00725c:	2200      	movs	r2, #0
1a00725e:	238a      	movs	r3, #138	; 0x8a
1a007260:	603a      	str	r2, [r7, #0]
1a007262:	6033      	str	r3, [r6, #0]
1a007264:	b005      	add	sp, #20
1a007266:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a007268:	10000888 	.word	0x10000888

1a00726c <__ascii_wctomb>:
1a00726c:	b149      	cbz	r1, 1a007282 <__ascii_wctomb+0x16>
1a00726e:	2aff      	cmp	r2, #255	; 0xff
1a007270:	d802      	bhi.n	1a007278 <__ascii_wctomb+0xc>
1a007272:	700a      	strb	r2, [r1, #0]
1a007274:	2001      	movs	r0, #1
1a007276:	4770      	bx	lr
1a007278:	238a      	movs	r3, #138	; 0x8a
1a00727a:	6003      	str	r3, [r0, #0]
1a00727c:	f04f 30ff 	mov.w	r0, #4294967295
1a007280:	4770      	bx	lr
1a007282:	4608      	mov	r0, r1
1a007284:	4770      	bx	lr
1a007286:	bf00      	nop

1a007288 <__aeabi_dcmpun>:
1a007288:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a00728c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a007290:	d102      	bne.n	1a007298 <__aeabi_dcmpun+0x10>
1a007292:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1a007296:	d10a      	bne.n	1a0072ae <__aeabi_dcmpun+0x26>
1a007298:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a00729c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a0072a0:	d102      	bne.n	1a0072a8 <__aeabi_dcmpun+0x20>
1a0072a2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1a0072a6:	d102      	bne.n	1a0072ae <__aeabi_dcmpun+0x26>
1a0072a8:	f04f 0000 	mov.w	r0, #0
1a0072ac:	4770      	bx	lr
1a0072ae:	f04f 0001 	mov.w	r0, #1
1a0072b2:	4770      	bx	lr

1a0072b4 <__aeabi_d2iz>:
1a0072b4:	ea4f 0241 	mov.w	r2, r1, lsl #1
1a0072b8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
1a0072bc:	d215      	bcs.n	1a0072ea <__aeabi_d2iz+0x36>
1a0072be:	d511      	bpl.n	1a0072e4 <__aeabi_d2iz+0x30>
1a0072c0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
1a0072c4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
1a0072c8:	d912      	bls.n	1a0072f0 <__aeabi_d2iz+0x3c>
1a0072ca:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1a0072ce:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
1a0072d2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
1a0072d6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
1a0072da:	fa23 f002 	lsr.w	r0, r3, r2
1a0072de:	bf18      	it	ne
1a0072e0:	4240      	negne	r0, r0
1a0072e2:	4770      	bx	lr
1a0072e4:	f04f 0000 	mov.w	r0, #0
1a0072e8:	4770      	bx	lr
1a0072ea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1a0072ee:	d105      	bne.n	1a0072fc <__aeabi_d2iz+0x48>
1a0072f0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
1a0072f4:	bf08      	it	eq
1a0072f6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
1a0072fa:	4770      	bx	lr
1a0072fc:	f04f 0000 	mov.w	r0, #0
1a007300:	4770      	bx	lr
1a007302:	bf00      	nop
1a007304:	706d6554 	.word	0x706d6554
1a007308:	74617265 	.word	0x74617265
1a00730c:	3a617275 	.word	0x3a617275
1a007310:	322e2520 	.word	0x322e2520
1a007314:	000a0d66 	.word	0x000a0d66

1a007318 <InitClkStates>:
1a007318:	01010f01                                ....

1a00731c <pinmuxing>:
1a00731c:	00440002 00440102 00440202 00400a02     ..D...D...D...@.
1a00732c:	00400b02 00400c02 00500001 00500101     ..@...@...P...P.
1a00733c:	00500201 00500601 00500106 00500406     ..P...P...P...P.
1a00734c:	00500506 00540706 00540806 00500906     ..P...T...T...P.
1a00735c:	00500a06 00500b06 00500c06 00f0040f     ..P...P...P.....
1a00736c:	00d50301 00d50401 00160107 00560207     ..............V.
1a00737c:	00520302 00520402 00520509 00570609     ..R...R...R...W.
1a00738c:	00570206                                ..W.

1a007390 <ExtRateIn>:
1a007390:	00000000                                ....

1a007394 <GpioButtons>:
1a007394:	08000400 09010900                       ........

1a00739c <GpioLeds>:
1a00739c:	01050005 0e000205 0c010b01              ............

1a0073a8 <GpioPorts>:
1a0073a8:	03030003 0f050403 05031005 07030603     ................
1a0073b8:	ffff0802                                ....

1a0073bc <OscRateIn>:
1a0073bc:	00b71b00                                ....

1a0073c0 <InitClkStates>:
1a0073c0:	00010100 00010909 0001090a 01010701     ................
1a0073d0:	00010902 00010906 0101090c 0001090d     ................
1a0073e0:	0001090e 0001090f 00010910 00010911     ................
1a0073f0:	00010912 00010913 00011114 00011119     ................
1a007400:	0001111a 0001111b 08040201 0f0f0f03     ................
1a007410:	ffff00ff                                ....

1a007414 <periph_to_base>:
1a007414:	00050000 0020000a 00090024 00400040     ...... .$...@.@.
1a007424:	00600005 000400a6 00c300c0 00e00002     ..`.............
1a007434:	000100e0 01000100 01200003 00060120     .......... . ...
1a007444:	01400140 0142000c 00190142 01620162     @.@...B.B...b.b.
1a007454:	01820013 00120182 01a201a2 01c20011     ................
1a007464:	001001c2 01e201e2 0202000f 000e0202     ................
1a007474:	02220222 0223000d 001c0223              "."...#.#...

1a007480 <UART_BClock>:
1a007480:	01a201c2 01620182                       ......b.

1a007488 <UART_PClock>:
1a007488:	00820081 00a200a1                       ........

1a007490 <gpioPinsInit>:
1a007490:	02000104 00050701 05010d03 04080100     ................
1a0074a0:	02020002 02000304 00000403 04070002     ................
1a0074b0:	030c0300 09050402 05040103 04030208     ................
1a0074c0:	04020305 06040504 0802000c 03000b06     ................
1a0074d0:	00090607 07060503 060f0504 03030004     ................
1a0074e0:	02000404 00050404 06040502 04060200     ................
1a0074f0:	0c050408 05040a04 0003010e 14010a00     ................
1a007500:	010f0000 0d000012 00001101 0010010c     ................
1a007510:	07070300 000f0300 01000001 00000000     ................
1a007520:	000a0600 08060603 06100504 04030005     ................
1a007530:	03000106 04090400 04010d05 010b0000     ................
1a007540:	0200000f 00000001 00010104 02010800     ................
1a007550:	01090000 09010006 05040002 04010200     ................
1a007560:	02020105 02020504 0e00000a 01000b02     ................
1a007570:	000c020b ffff0c01                       ........

1a007578 <_ctype_>:
1a007578:	20202000 20202020 28282020 20282828     .         ((((( 
1a007588:	20202020 20202020 20202020 20202020                     
1a007598:	10108820 10101010 10101010 10101010      ...............
1a0075a8:	04040410 04040404 10040404 10101010     ................
1a0075b8:	41411010 41414141 01010101 01010101     ..AAAAAA........
1a0075c8:	01010101 01010101 01010101 10101010     ................
1a0075d8:	42421010 42424242 02020202 02020202     ..BBBBBB........
1a0075e8:	02020202 02020202 02020202 10101010     ................
1a0075f8:	00000020 00000000 00000000 00000000      ...............
	...
1a007678:	ffffff00 00464e49 00666e69 004e414e     ....INF.inf.NAN.
1a007688:	006e616e 33323130 37363534 42413938     nan.0123456789AB
1a007698:	46454443 00000000 33323130 37363534     CDEF....01234567
1a0076a8:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
1a0076b8:	0000296c ffff0030                       l)..0...

1a0076c0 <blanks.8693>:
1a0076c0:	20202020 20202020 20202020 20202020                     

1a0076d0 <zeroes.8694>:
1a0076d0:	30303030 30303030 30303030 30303030     0000000000000000
1a0076e0:	004e614e 69666e49 7974696e ffffff00     NaN.Infinity....

1a0076f0 <__mprec_bigtens>:
1a0076f0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
1a007700:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
1a007710:	7f73bf3c 75154fdd                       <.s..O.u

1a007718 <__mprec_tens>:
1a007718:	00000000 3ff00000 00000000 40240000     .......?......$@
1a007728:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
1a007738:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
1a007748:	00000000 412e8480 00000000 416312d0     .......A......cA
1a007758:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
1a007768:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
1a007778:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
1a007788:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
1a007798:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
1a0077a8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
1a0077b8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
1a0077c8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
1a0077d8:	79d99db4 44ea7843                       ...yCx.D

1a0077e0 <p05.7442>:
1a0077e0:	00000005 00000019 0000007d 00000043     ........}...C...
1a0077f0:	49534f50 ffff0058 0000002e              POSIX.......
